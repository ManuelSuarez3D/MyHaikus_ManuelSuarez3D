### YamlMime:ManagedReference
items:
- uid: Haiku.API.Services.UserServices.UserService
  commentId: T:Haiku.API.Services.UserServices.UserService
  id: UserService
  parent: Haiku.API.Services.UserServices
  children:
  - Haiku.API.Services.UserServices.UserService.#ctor(Haiku.API.Repositories.UserRepositories.IUserRepository,Haiku.API.Services.IUserProfileServices.IUserProfileService,Haiku.API.Utilities.IUnitOfWork,AutoMapper.IMapper)
  - Haiku.API.Services.UserServices.UserService.AddUserAsync(Haiku.API.Dtos.RegisterDto)
  - Haiku.API.Services.UserServices.UserService.AuthenticateUserAsync(System.String,System.String)
  - Haiku.API.Services.UserServices.UserService.DeleteUserByIdAsync(System.Int64)
  - Haiku.API.Services.UserServices.UserService.GetPaginatedUsersAsync(System.Int32,System.Int32,System.String)
  - Haiku.API.Services.UserServices.UserService.GetTotalUsersAsync(System.String)
  - Haiku.API.Services.UserServices.UserService.GetUserByIdAsync(System.Int64)
  - Haiku.API.Services.UserServices.UserService.UpdateUserAsync(System.Int64,Haiku.API.Dtos.UserDto)
  - Haiku.API.Services.UserServices.UserService.UserExistsByIdAsync(System.Int64)
  - Haiku.API.Services.UserServices.UserService.UsernameExistsAsync(System.String)
  langs:
  - csharp
  - vb
  name: UserService
  nameWithType: UserService
  fullName: Haiku.API.Services.UserServices.UserService
  type: Class
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserServices/UserService .cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: UserService
    path: Haiku.API/Services/UserServices/UserService .cs
    startLine: 13
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserServices
  syntax:
    content: 'public class UserService : IUserService'
    content.vb: Public Class UserService Implements IUserService
  inheritance:
  - System.Object
  implements:
  - Haiku.API.Services.UserServices.IUserService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Haiku.API.Services.UserServices.UserService.#ctor(Haiku.API.Repositories.UserRepositories.IUserRepository,Haiku.API.Services.IUserProfileServices.IUserProfileService,Haiku.API.Utilities.IUnitOfWork,AutoMapper.IMapper)
  commentId: M:Haiku.API.Services.UserServices.UserService.#ctor(Haiku.API.Repositories.UserRepositories.IUserRepository,Haiku.API.Services.IUserProfileServices.IUserProfileService,Haiku.API.Utilities.IUnitOfWork,AutoMapper.IMapper)
  id: '#ctor(Haiku.API.Repositories.UserRepositories.IUserRepository,Haiku.API.Services.IUserProfileServices.IUserProfileService,Haiku.API.Utilities.IUnitOfWork,AutoMapper.IMapper)'
  parent: Haiku.API.Services.UserServices.UserService
  langs:
  - csharp
  - vb
  name: UserService(IUserRepository, IUserProfileService, IUnitOfWork, IMapper)
  nameWithType: UserService.UserService(IUserRepository, IUserProfileService, IUnitOfWork, IMapper)
  fullName: Haiku.API.Services.UserServices.UserService.UserService(Haiku.API.Repositories.UserRepositories.IUserRepository, Haiku.API.Services.IUserProfileServices.IUserProfileService, Haiku.API.Utilities.IUnitOfWork, AutoMapper.IMapper)
  type: Constructor
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserServices/UserService .cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: .ctor
    path: Haiku.API/Services/UserServices/UserService .cs
    startLine: 21
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserServices
  syntax:
    content: public UserService(IUserRepository userRepository, IUserProfileService userprofileService, IUnitOfWork unitOfWork, IMapper mapper)
    parameters:
    - id: userRepository
      type: Haiku.API.Repositories.UserRepositories.IUserRepository
    - id: userprofileService
      type: Haiku.API.Services.IUserProfileServices.IUserProfileService
    - id: unitOfWork
      type: Haiku.API.Utilities.IUnitOfWork
    - id: mapper
      type: AutoMapper.IMapper
    content.vb: Public Sub New(userRepository As IUserRepository, userprofileService As IUserProfileService, unitOfWork As IUnitOfWork, mapper As IMapper)
  overload: Haiku.API.Services.UserServices.UserService.#ctor*
  nameWithType.vb: UserService.New(IUserRepository, IUserProfileService, IUnitOfWork, IMapper)
  fullName.vb: Haiku.API.Services.UserServices.UserService.New(Haiku.API.Repositories.UserRepositories.IUserRepository, Haiku.API.Services.IUserProfileServices.IUserProfileService, Haiku.API.Utilities.IUnitOfWork, AutoMapper.IMapper)
  name.vb: New(IUserRepository, IUserProfileService, IUnitOfWork, IMapper)
- uid: Haiku.API.Services.UserServices.UserService.GetPaginatedUsersAsync(System.Int32,System.Int32,System.String)
  commentId: M:Haiku.API.Services.UserServices.UserService.GetPaginatedUsersAsync(System.Int32,System.Int32,System.String)
  id: GetPaginatedUsersAsync(System.Int32,System.Int32,System.String)
  parent: Haiku.API.Services.UserServices.UserService
  langs:
  - csharp
  - vb
  name: GetPaginatedUsersAsync(int, int, string)
  nameWithType: UserService.GetPaginatedUsersAsync(int, int, string)
  fullName: Haiku.API.Services.UserServices.UserService.GetPaginatedUsersAsync(int, int, string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserServices/UserService .cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetPaginatedUsersAsync
    path: Haiku.API/Services/UserServices/UserService .cs
    startLine: 36
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserServices
  summary: Retrieves a paginated list of <xref href="Haiku.API.Dtos.UserDto" data-throw-if-not-resolved="false"></xref>, optionally filtered by a search term.
  example: []
  syntax:
    content: public Task<IEnumerable<UserDto>> GetPaginatedUsersAsync(int pageNumber, int pageSize, string searchOption)
    parameters:
    - id: pageNumber
      type: System.Int32
      description: The page number to retrieve (1-based index).
    - id: pageSize
      type: System.Int32
      description: The number of <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> to return per page.
    - id: searchOption
      type: System.String
      description: An optional search term to filter <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> by their properties.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Dtos.UserDto}}
      description: A task that represents the asynchronous operation. The task result contains an enumerable collection of <xref href="Haiku.API.Dtos.UserDto" data-throw-if-not-resolved="false"></xref> objects.
    content.vb: Public Function GetPaginatedUsersAsync(pageNumber As Integer, pageSize As Integer, searchOption As String) As Task(Of IEnumerable(Of UserDto))
  overload: Haiku.API.Services.UserServices.UserService.GetPaginatedUsersAsync*
  implements:
  - Haiku.API.Services.UserServices.IUserService.GetPaginatedUsersAsync(System.Int32,System.Int32,System.String)
  nameWithType.vb: UserService.GetPaginatedUsersAsync(Integer, Integer, String)
  fullName.vb: Haiku.API.Services.UserServices.UserService.GetPaginatedUsersAsync(Integer, Integer, String)
  name.vb: GetPaginatedUsersAsync(Integer, Integer, String)
- uid: Haiku.API.Services.UserServices.UserService.GetTotalUsersAsync(System.String)
  commentId: M:Haiku.API.Services.UserServices.UserService.GetTotalUsersAsync(System.String)
  id: GetTotalUsersAsync(System.String)
  parent: Haiku.API.Services.UserServices.UserService
  langs:
  - csharp
  - vb
  name: GetTotalUsersAsync(string)
  nameWithType: UserService.GetTotalUsersAsync(string)
  fullName: Haiku.API.Services.UserServices.UserService.GetTotalUsersAsync(string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserServices/UserService .cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetTotalUsersAsync
    path: Haiku.API/Services/UserServices/UserService .cs
    startLine: 51
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserServices
  summary: Retrieves the total count of <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref>'s, optionally filtered by a search term.
  example: []
  syntax:
    content: public Task<int> GetTotalUsersAsync(string searchOption)
    parameters:
    - id: searchOption
      type: System.String
      description: An optional search term to filter the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref>'s.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task that represents the asynchronous operation. The task result contains the total count of <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref>'s.
    content.vb: Public Function GetTotalUsersAsync(searchOption As String) As Task(Of Integer)
  overload: Haiku.API.Services.UserServices.UserService.GetTotalUsersAsync*
  implements:
  - Haiku.API.Services.UserServices.IUserService.GetTotalUsersAsync(System.String)
  nameWithType.vb: UserService.GetTotalUsersAsync(String)
  fullName.vb: Haiku.API.Services.UserServices.UserService.GetTotalUsersAsync(String)
  name.vb: GetTotalUsersAsync(String)
- uid: Haiku.API.Services.UserServices.UserService.GetUserByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.UserServices.UserService.GetUserByIdAsync(System.Int64)
  id: GetUserByIdAsync(System.Int64)
  parent: Haiku.API.Services.UserServices.UserService
  langs:
  - csharp
  - vb
  name: GetUserByIdAsync(long)
  nameWithType: UserService.GetUserByIdAsync(long)
  fullName: Haiku.API.Services.UserServices.UserService.GetUserByIdAsync(long)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserServices/UserService .cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetUserByIdAsync
    path: Haiku.API/Services/UserServices/UserService .cs
    startLine: 62
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserServices
  summary: Retrieves an <xref href="Haiku.API.Dtos.UserDto" data-throw-if-not-resolved="false"></xref> by their unique identifier.
  example: []
  syntax:
    content: public Task<UserDto> GetUserByIdAsync(long userId)
    parameters:
    - id: userId
      type: System.Int64
      description: The unique identifier of the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> to retrieve.
    return:
      type: System.Threading.Tasks.Task{Haiku.API.Dtos.UserDto}
      description: A task that represents the asynchronous operation. The task result contains the corresponding <xref href="Haiku.API.Dtos.UserDto" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetUserByIdAsync(userId As Long) As Task(Of UserDto)
  overload: Haiku.API.Services.UserServices.UserService.GetUserByIdAsync*
  exceptions:
  - type: Haiku.API.Exceptions.NotFoundException
    commentId: T:Haiku.API.Exceptions.NotFoundException
    description: Thrown when the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> with the specified ID is not found.
  implements:
  - Haiku.API.Services.UserServices.IUserService.GetUserByIdAsync(System.Int64)
  nameWithType.vb: UserService.GetUserByIdAsync(Long)
  fullName.vb: Haiku.API.Services.UserServices.UserService.GetUserByIdAsync(Long)
  name.vb: GetUserByIdAsync(Long)
- uid: Haiku.API.Services.UserServices.UserService.AuthenticateUserAsync(System.String,System.String)
  commentId: M:Haiku.API.Services.UserServices.UserService.AuthenticateUserAsync(System.String,System.String)
  id: AuthenticateUserAsync(System.String,System.String)
  parent: Haiku.API.Services.UserServices.UserService
  langs:
  - csharp
  - vb
  name: AuthenticateUserAsync(string, string)
  nameWithType: UserService.AuthenticateUserAsync(string, string)
  fullName: Haiku.API.Services.UserServices.UserService.AuthenticateUserAsync(string, string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserServices/UserService .cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: AuthenticateUserAsync
    path: Haiku.API/Services/UserServices/UserService .cs
    startLine: 80
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserServices
  summary: Authenticates a <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> based on their username and password.
  example: []
  syntax:
    content: public Task<User> AuthenticateUserAsync(string username, string password)
    parameters:
    - id: username
      type: System.String
      description: The username of the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> attempting to authenticate.
    - id: password
      type: System.String
      description: The password provided by the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> for authentication.
    return:
      type: System.Threading.Tasks.Task{Haiku.API.Models.User}
      description: A task that represents the asynchronous operation, containing the authenticated <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> if successful.
    content.vb: Public Function AuthenticateUserAsync(username As String, password As String) As Task(Of User)
  overload: Haiku.API.Services.UserServices.UserService.AuthenticateUserAsync*
  implements:
  - Haiku.API.Services.UserServices.IUserService.AuthenticateUserAsync(System.String,System.String)
  nameWithType.vb: UserService.AuthenticateUserAsync(String, String)
  fullName.vb: Haiku.API.Services.UserServices.UserService.AuthenticateUserAsync(String, String)
  name.vb: AuthenticateUserAsync(String, String)
- uid: Haiku.API.Services.UserServices.UserService.AddUserAsync(Haiku.API.Dtos.RegisterDto)
  commentId: M:Haiku.API.Services.UserServices.UserService.AddUserAsync(Haiku.API.Dtos.RegisterDto)
  id: AddUserAsync(Haiku.API.Dtos.RegisterDto)
  parent: Haiku.API.Services.UserServices.UserService
  langs:
  - csharp
  - vb
  name: AddUserAsync(RegisterDto)
  nameWithType: UserService.AddUserAsync(RegisterDto)
  fullName: Haiku.API.Services.UserServices.UserService.AddUserAsync(Haiku.API.Dtos.RegisterDto)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserServices/UserService .cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: AddUserAsync
    path: Haiku.API/Services/UserServices/UserService .cs
    startLine: 109
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserServices
  summary: Registers a new <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> by adding the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref>'s details and creating a <xref href="Haiku.API.Models.UserProfile" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Task<UserDto> AddUserAsync(RegisterDto newRegisterDto)
    parameters:
    - id: newRegisterDto
      type: Haiku.API.Dtos.RegisterDto
      description: The <xref href="Haiku.API.Dtos.RegisterDto" data-throw-if-not-resolved="false"></xref> object containing the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref>'s registration details.
    return:
      type: System.Threading.Tasks.Task{Haiku.API.Dtos.UserDto}
      description: A <xref href="Haiku.API.Dtos.UserDto" data-throw-if-not-resolved="false"></xref> object representing the newly created <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function AddUserAsync(newRegisterDto As RegisterDto) As Task(Of UserDto)
  overload: Haiku.API.Services.UserServices.UserService.AddUserAsync*
  exceptions:
  - type: Haiku.API.Exceptions.UsernameAlreadyTakenException
    commentId: T:Haiku.API.Exceptions.UsernameAlreadyTakenException
    description: Thrown when the username provided in <code class="paramref">newRegisterDto</code> is already taken.
  - type: Haiku.API.Exceptions.NotSavedException
    commentId: T:Haiku.API.Exceptions.NotSavedException
    description: Thrown when the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> or <xref href="Haiku.API.Models.UserProfile" data-throw-if-not-resolved="false"></xref> cannot be saved successfully.
  - type: System.Exception
    commentId: T:System.Exception
    description: Thrown for any other unexpected errors during the registration process.
  implements:
  - Haiku.API.Services.UserServices.IUserService.AddUserAsync(Haiku.API.Dtos.RegisterDto)
- uid: Haiku.API.Services.UserServices.UserService.UpdateUserAsync(System.Int64,Haiku.API.Dtos.UserDto)
  commentId: M:Haiku.API.Services.UserServices.UserService.UpdateUserAsync(System.Int64,Haiku.API.Dtos.UserDto)
  id: UpdateUserAsync(System.Int64,Haiku.API.Dtos.UserDto)
  parent: Haiku.API.Services.UserServices.UserService
  langs:
  - csharp
  - vb
  name: UpdateUserAsync(long, UserDto)
  nameWithType: UserService.UpdateUserAsync(long, UserDto)
  fullName: Haiku.API.Services.UserServices.UserService.UpdateUserAsync(long, Haiku.API.Dtos.UserDto)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserServices/UserService .cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: UpdateUserAsync
    path: Haiku.API/Services/UserServices/UserService .cs
    startLine: 160
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserServices
  summary: Updates an existing <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref>'s details in the system.
  example: []
  syntax:
    content: public Task UpdateUserAsync(long userId, UserDto updatedUserDto)
    parameters:
    - id: userId
      type: System.Int64
      description: The unique identifier of the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> to update.
    - id: updatedUserDto
      type: Haiku.API.Dtos.UserDto
      description: The DTO containing the updated details of the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function UpdateUserAsync(userId As Long, updatedUserDto As UserDto) As Task
  overload: Haiku.API.Services.UserServices.UserService.UpdateUserAsync*
  exceptions:
  - type: Haiku.API.Exceptions.NotFoundException
    commentId: T:Haiku.API.Exceptions.NotFoundException
    description: Thrown when the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> with the specified ID is not found.
  - type: Haiku.API.Exceptions.NotSavedException
    commentId: T:Haiku.API.Exceptions.NotSavedException
    description: Thrown when the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref>'s details cannot be updated successfully.
  implements:
  - Haiku.API.Services.UserServices.IUserService.UpdateUserAsync(System.Int64,Haiku.API.Dtos.UserDto)
  nameWithType.vb: UserService.UpdateUserAsync(Long, UserDto)
  fullName.vb: Haiku.API.Services.UserServices.UserService.UpdateUserAsync(Long, Haiku.API.Dtos.UserDto)
  name.vb: UpdateUserAsync(Long, UserDto)
- uid: Haiku.API.Services.UserServices.UserService.DeleteUserByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.UserServices.UserService.DeleteUserByIdAsync(System.Int64)
  id: DeleteUserByIdAsync(System.Int64)
  parent: Haiku.API.Services.UserServices.UserService
  langs:
  - csharp
  - vb
  name: DeleteUserByIdAsync(long)
  nameWithType: UserService.DeleteUserByIdAsync(long)
  fullName: Haiku.API.Services.UserServices.UserService.DeleteUserByIdAsync(long)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserServices/UserService .cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: DeleteUserByIdAsync
    path: Haiku.API/Services/UserServices/UserService .cs
    startLine: 193
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserServices
  summary: Deletes an <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> by their unique identifier.
  example: []
  syntax:
    content: public Task DeleteUserByIdAsync(long userId)
    parameters:
    - id: userId
      type: System.Int64
      description: The unique identifier of the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> to be deleted.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function DeleteUserByIdAsync(userId As Long) As Task
  overload: Haiku.API.Services.UserServices.UserService.DeleteUserByIdAsync*
  exceptions:
  - type: Haiku.API.Exceptions.NotFoundException
    commentId: T:Haiku.API.Exceptions.NotFoundException
    description: Thrown when the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> with the specified ID is not found.
  - type: Haiku.API.Exceptions.NotSavedException
    commentId: T:Haiku.API.Exceptions.NotSavedException
    description: Thrown when <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> was not deleted.
  implements:
  - Haiku.API.Services.UserServices.IUserService.DeleteUserByIdAsync(System.Int64)
  nameWithType.vb: UserService.DeleteUserByIdAsync(Long)
  fullName.vb: Haiku.API.Services.UserServices.UserService.DeleteUserByIdAsync(Long)
  name.vb: DeleteUserByIdAsync(Long)
- uid: Haiku.API.Services.UserServices.UserService.UserExistsByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.UserServices.UserService.UserExistsByIdAsync(System.Int64)
  id: UserExistsByIdAsync(System.Int64)
  parent: Haiku.API.Services.UserServices.UserService
  langs:
  - csharp
  - vb
  name: UserExistsByIdAsync(long)
  nameWithType: UserService.UserExistsByIdAsync(long)
  fullName: Haiku.API.Services.UserServices.UserService.UserExistsByIdAsync(long)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserServices/UserService .cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: UserExistsByIdAsync
    path: Haiku.API/Services/UserServices/UserService .cs
    startLine: 209
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserServices
  summary: Checks whether an <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> exists in the repository by their unique identifier.
  example: []
  syntax:
    content: public Task<bool> UserExistsByIdAsync(long userId)
    parameters:
    - id: userId
      type: System.Int64
      description: The unique identifier of the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> to check.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation, containing a boolean value indicating whether the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> exists.
    content.vb: Public Function UserExistsByIdAsync(userId As Long) As Task(Of Boolean)
  overload: Haiku.API.Services.UserServices.UserService.UserExistsByIdAsync*
  implements:
  - Haiku.API.Services.UserServices.IUserService.UserExistsByIdAsync(System.Int64)
  nameWithType.vb: UserService.UserExistsByIdAsync(Long)
  fullName.vb: Haiku.API.Services.UserServices.UserService.UserExistsByIdAsync(Long)
  name.vb: UserExistsByIdAsync(Long)
- uid: Haiku.API.Services.UserServices.UserService.UsernameExistsAsync(System.String)
  commentId: M:Haiku.API.Services.UserServices.UserService.UsernameExistsAsync(System.String)
  id: UsernameExistsAsync(System.String)
  parent: Haiku.API.Services.UserServices.UserService
  langs:
  - csharp
  - vb
  name: UsernameExistsAsync(string)
  nameWithType: UserService.UsernameExistsAsync(string)
  fullName: Haiku.API.Services.UserServices.UserService.UsernameExistsAsync(string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserServices/UserService .cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: UsernameExistsAsync
    path: Haiku.API/Services/UserServices/UserService .cs
    startLine: 222
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserServices
  summary: Checks whether an <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> exists in the repository by their unique username.
  example: []
  syntax:
    content: public Task<bool> UsernameExistsAsync(string username)
    parameters:
    - id: username
      type: System.String
      description: The unique username of the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> to check.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation, containing a boolean value indicating whether the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> exists.
    content.vb: Public Function UsernameExistsAsync(username As String) As Task(Of Boolean)
  overload: Haiku.API.Services.UserServices.UserService.UsernameExistsAsync*
  implements:
  - Haiku.API.Services.UserServices.IUserService.UsernameExistsAsync(System.String)
  nameWithType.vb: UserService.UsernameExistsAsync(String)
  fullName.vb: Haiku.API.Services.UserServices.UserService.UsernameExistsAsync(String)
  name.vb: UsernameExistsAsync(String)
references:
- uid: Haiku.API.Services.UserServices
  commentId: N:Haiku.API.Services.UserServices
  href: Haiku.html
  name: Haiku.API.Services.UserServices
  nameWithType: Haiku.API.Services.UserServices
  fullName: Haiku.API.Services.UserServices
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Services
    name: Services
    href: Haiku.API.Services.html
  - name: .
  - uid: Haiku.API.Services.UserServices
    name: UserServices
    href: Haiku.API.Services.UserServices.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Services
    name: Services
    href: Haiku.API.Services.html
  - name: .
  - uid: Haiku.API.Services.UserServices
    name: UserServices
    href: Haiku.API.Services.UserServices.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Haiku.API.Services.UserServices.IUserService
  commentId: T:Haiku.API.Services.UserServices.IUserService
  parent: Haiku.API.Services.UserServices
  href: Haiku.API.Services.UserServices.IUserService.html
  name: IUserService
  nameWithType: IUserService
  fullName: Haiku.API.Services.UserServices.IUserService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Haiku.API.Services.UserServices.UserService.#ctor*
  commentId: Overload:Haiku.API.Services.UserServices.UserService.#ctor
  href: Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService__ctor_Haiku_API_Repositories_UserRepositories_IUserRepository_Haiku_API_Services_IUserProfileServices_IUserProfileService_Haiku_API_Utilities_IUnitOfWork_AutoMapper_IMapper_
  name: UserService
  nameWithType: UserService.UserService
  fullName: Haiku.API.Services.UserServices.UserService.UserService
  nameWithType.vb: UserService.New
  fullName.vb: Haiku.API.Services.UserServices.UserService.New
  name.vb: New
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository
  commentId: T:Haiku.API.Repositories.UserRepositories.IUserRepository
  parent: Haiku.API.Repositories.UserRepositories
  href: Haiku.API.Repositories.UserRepositories.IUserRepository.html
  name: IUserRepository
  nameWithType: IUserRepository
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService
  commentId: T:Haiku.API.Services.IUserProfileServices.IUserProfileService
  parent: Haiku.API.Services.IUserProfileServices
  href: Haiku.API.Services.IUserProfileServices.IUserProfileService.html
  name: IUserProfileService
  nameWithType: IUserProfileService
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService
- uid: Haiku.API.Utilities.IUnitOfWork
  commentId: T:Haiku.API.Utilities.IUnitOfWork
  parent: Haiku.API.Utilities
  href: Haiku.API.Utilities.IUnitOfWork.html
  name: IUnitOfWork
  nameWithType: IUnitOfWork
  fullName: Haiku.API.Utilities.IUnitOfWork
- uid: AutoMapper.IMapper
  commentId: T:AutoMapper.IMapper
  parent: AutoMapper
  isExternal: true
  name: IMapper
  nameWithType: IMapper
  fullName: AutoMapper.IMapper
- uid: Haiku.API.Repositories.UserRepositories
  commentId: N:Haiku.API.Repositories.UserRepositories
  href: Haiku.html
  name: Haiku.API.Repositories.UserRepositories
  nameWithType: Haiku.API.Repositories.UserRepositories
  fullName: Haiku.API.Repositories.UserRepositories
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Repositories
    name: Repositories
    href: Haiku.API.Repositories.html
  - name: .
  - uid: Haiku.API.Repositories.UserRepositories
    name: UserRepositories
    href: Haiku.API.Repositories.UserRepositories.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Repositories
    name: Repositories
    href: Haiku.API.Repositories.html
  - name: .
  - uid: Haiku.API.Repositories.UserRepositories
    name: UserRepositories
    href: Haiku.API.Repositories.UserRepositories.html
- uid: Haiku.API.Services.IUserProfileServices
  commentId: N:Haiku.API.Services.IUserProfileServices
  href: Haiku.html
  name: Haiku.API.Services.IUserProfileServices
  nameWithType: Haiku.API.Services.IUserProfileServices
  fullName: Haiku.API.Services.IUserProfileServices
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Services
    name: Services
    href: Haiku.API.Services.html
  - name: .
  - uid: Haiku.API.Services.IUserProfileServices
    name: IUserProfileServices
    href: Haiku.API.Services.IUserProfileServices.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Services
    name: Services
    href: Haiku.API.Services.html
  - name: .
  - uid: Haiku.API.Services.IUserProfileServices
    name: IUserProfileServices
    href: Haiku.API.Services.IUserProfileServices.html
- uid: Haiku.API.Utilities
  commentId: N:Haiku.API.Utilities
  href: Haiku.html
  name: Haiku.API.Utilities
  nameWithType: Haiku.API.Utilities
  fullName: Haiku.API.Utilities
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Utilities
    name: Utilities
    href: Haiku.API.Utilities.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Utilities
    name: Utilities
    href: Haiku.API.Utilities.html
- uid: AutoMapper
  commentId: N:AutoMapper
  isExternal: true
  name: AutoMapper
  nameWithType: AutoMapper
  fullName: AutoMapper
- uid: Haiku.API.Dtos.UserDto
  commentId: T:Haiku.API.Dtos.UserDto
  parent: Haiku.API.Dtos
  href: Haiku.API.Dtos.UserDto.html
  name: UserDto
  nameWithType: UserDto
  fullName: Haiku.API.Dtos.UserDto
- uid: Haiku.API.Models.User
  commentId: T:Haiku.API.Models.User
  parent: Haiku.API.Models
  href: Haiku.API.Models.User.html
  name: User
  nameWithType: User
  fullName: Haiku.API.Models.User
- uid: Haiku.API.Services.UserServices.UserService.GetPaginatedUsersAsync*
  commentId: Overload:Haiku.API.Services.UserServices.UserService.GetPaginatedUsersAsync
  href: Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_GetPaginatedUsersAsync_System_Int32_System_Int32_System_String_
  name: GetPaginatedUsersAsync
  nameWithType: UserService.GetPaginatedUsersAsync
  fullName: Haiku.API.Services.UserServices.UserService.GetPaginatedUsersAsync
- uid: Haiku.API.Services.UserServices.IUserService.GetPaginatedUsersAsync(System.Int32,System.Int32,System.String)
  commentId: M:Haiku.API.Services.UserServices.IUserService.GetPaginatedUsersAsync(System.Int32,System.Int32,System.String)
  parent: Haiku.API.Services.UserServices.IUserService
  isExternal: true
  href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_GetPaginatedUsersAsync_System_Int32_System_Int32_System_String_
  name: GetPaginatedUsersAsync(int, int, string)
  nameWithType: IUserService.GetPaginatedUsersAsync(int, int, string)
  fullName: Haiku.API.Services.UserServices.IUserService.GetPaginatedUsersAsync(int, int, string)
  nameWithType.vb: IUserService.GetPaginatedUsersAsync(Integer, Integer, String)
  fullName.vb: Haiku.API.Services.UserServices.IUserService.GetPaginatedUsersAsync(Integer, Integer, String)
  name.vb: GetPaginatedUsersAsync(Integer, Integer, String)
  spec.csharp:
  - uid: Haiku.API.Services.UserServices.IUserService.GetPaginatedUsersAsync(System.Int32,System.Int32,System.String)
    name: GetPaginatedUsersAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_GetPaginatedUsersAsync_System_Int32_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserServices.IUserService.GetPaginatedUsersAsync(System.Int32,System.Int32,System.String)
    name: GetPaginatedUsersAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_GetPaginatedUsersAsync_System_Int32_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Dtos.UserDto}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Dtos.UserDto}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<UserDto>>
  nameWithType: Task<IEnumerable<UserDto>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Haiku.API.Dtos.UserDto>>
  nameWithType.vb: Task(Of IEnumerable(Of UserDto))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Haiku.API.Dtos.UserDto))
  name.vb: Task(Of IEnumerable(Of UserDto))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Haiku.API.Dtos.UserDto
    name: UserDto
    href: Haiku.API.Dtos.UserDto.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Haiku.API.Dtos.UserDto
    name: UserDto
    href: Haiku.API.Dtos.UserDto.html
  - name: )
  - name: )
- uid: Haiku.API.Dtos
  commentId: N:Haiku.API.Dtos
  href: Haiku.html
  name: Haiku.API.Dtos
  nameWithType: Haiku.API.Dtos
  fullName: Haiku.API.Dtos
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Dtos
    name: Dtos
    href: Haiku.API.Dtos.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Dtos
    name: Dtos
    href: Haiku.API.Dtos.html
- uid: Haiku.API.Models
  commentId: N:Haiku.API.Models
  href: Haiku.html
  name: Haiku.API.Models
  nameWithType: Haiku.API.Models
  fullName: Haiku.API.Models
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Models
    name: Models
    href: Haiku.API.Models.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Models
    name: Models
    href: Haiku.API.Models.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Haiku.API.Services.UserServices.UserService.GetTotalUsersAsync*
  commentId: Overload:Haiku.API.Services.UserServices.UserService.GetTotalUsersAsync
  href: Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_GetTotalUsersAsync_System_String_
  name: GetTotalUsersAsync
  nameWithType: UserService.GetTotalUsersAsync
  fullName: Haiku.API.Services.UserServices.UserService.GetTotalUsersAsync
- uid: Haiku.API.Services.UserServices.IUserService.GetTotalUsersAsync(System.String)
  commentId: M:Haiku.API.Services.UserServices.IUserService.GetTotalUsersAsync(System.String)
  parent: Haiku.API.Services.UserServices.IUserService
  isExternal: true
  href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_GetTotalUsersAsync_System_String_
  name: GetTotalUsersAsync(string)
  nameWithType: IUserService.GetTotalUsersAsync(string)
  fullName: Haiku.API.Services.UserServices.IUserService.GetTotalUsersAsync(string)
  nameWithType.vb: IUserService.GetTotalUsersAsync(String)
  fullName.vb: Haiku.API.Services.UserServices.IUserService.GetTotalUsersAsync(String)
  name.vb: GetTotalUsersAsync(String)
  spec.csharp:
  - uid: Haiku.API.Services.UserServices.IUserService.GetTotalUsersAsync(System.String)
    name: GetTotalUsersAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_GetTotalUsersAsync_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserServices.IUserService.GetTotalUsersAsync(System.String)
    name: GetTotalUsersAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_GetTotalUsersAsync_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Haiku.API.Exceptions.NotFoundException
  commentId: T:Haiku.API.Exceptions.NotFoundException
  href: Haiku.API.Exceptions.NotFoundException.html
  name: NotFoundException
  nameWithType: NotFoundException
  fullName: Haiku.API.Exceptions.NotFoundException
- uid: Haiku.API.Services.UserServices.UserService.GetUserByIdAsync*
  commentId: Overload:Haiku.API.Services.UserServices.UserService.GetUserByIdAsync
  href: Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_GetUserByIdAsync_System_Int64_
  name: GetUserByIdAsync
  nameWithType: UserService.GetUserByIdAsync
  fullName: Haiku.API.Services.UserServices.UserService.GetUserByIdAsync
- uid: Haiku.API.Services.UserServices.IUserService.GetUserByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.UserServices.IUserService.GetUserByIdAsync(System.Int64)
  parent: Haiku.API.Services.UserServices.IUserService
  isExternal: true
  href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_GetUserByIdAsync_System_Int64_
  name: GetUserByIdAsync(long)
  nameWithType: IUserService.GetUserByIdAsync(long)
  fullName: Haiku.API.Services.UserServices.IUserService.GetUserByIdAsync(long)
  nameWithType.vb: IUserService.GetUserByIdAsync(Long)
  fullName.vb: Haiku.API.Services.UserServices.IUserService.GetUserByIdAsync(Long)
  name.vb: GetUserByIdAsync(Long)
  spec.csharp:
  - uid: Haiku.API.Services.UserServices.IUserService.GetUserByIdAsync(System.Int64)
    name: GetUserByIdAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_GetUserByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserServices.IUserService.GetUserByIdAsync(System.Int64)
    name: GetUserByIdAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_GetUserByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Threading.Tasks.Task{Haiku.API.Dtos.UserDto}
  commentId: T:System.Threading.Tasks.Task{Haiku.API.Dtos.UserDto}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UserDto>
  nameWithType: Task<UserDto>
  fullName: System.Threading.Tasks.Task<Haiku.API.Dtos.UserDto>
  nameWithType.vb: Task(Of UserDto)
  fullName.vb: System.Threading.Tasks.Task(Of Haiku.API.Dtos.UserDto)
  name.vb: Task(Of UserDto)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Haiku.API.Dtos.UserDto
    name: UserDto
    href: Haiku.API.Dtos.UserDto.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Haiku.API.Dtos.UserDto
    name: UserDto
    href: Haiku.API.Dtos.UserDto.html
  - name: )
- uid: Haiku.API.Services.UserServices.UserService.AuthenticateUserAsync*
  commentId: Overload:Haiku.API.Services.UserServices.UserService.AuthenticateUserAsync
  href: Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_AuthenticateUserAsync_System_String_System_String_
  name: AuthenticateUserAsync
  nameWithType: UserService.AuthenticateUserAsync
  fullName: Haiku.API.Services.UserServices.UserService.AuthenticateUserAsync
- uid: Haiku.API.Services.UserServices.IUserService.AuthenticateUserAsync(System.String,System.String)
  commentId: M:Haiku.API.Services.UserServices.IUserService.AuthenticateUserAsync(System.String,System.String)
  parent: Haiku.API.Services.UserServices.IUserService
  isExternal: true
  href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_AuthenticateUserAsync_System_String_System_String_
  name: AuthenticateUserAsync(string, string)
  nameWithType: IUserService.AuthenticateUserAsync(string, string)
  fullName: Haiku.API.Services.UserServices.IUserService.AuthenticateUserAsync(string, string)
  nameWithType.vb: IUserService.AuthenticateUserAsync(String, String)
  fullName.vb: Haiku.API.Services.UserServices.IUserService.AuthenticateUserAsync(String, String)
  name.vb: AuthenticateUserAsync(String, String)
  spec.csharp:
  - uid: Haiku.API.Services.UserServices.IUserService.AuthenticateUserAsync(System.String,System.String)
    name: AuthenticateUserAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_AuthenticateUserAsync_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserServices.IUserService.AuthenticateUserAsync(System.String,System.String)
    name: AuthenticateUserAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_AuthenticateUserAsync_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{Haiku.API.Models.User}
  commentId: T:System.Threading.Tasks.Task{Haiku.API.Models.User}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<User>
  nameWithType: Task<User>
  fullName: System.Threading.Tasks.Task<Haiku.API.Models.User>
  nameWithType.vb: Task(Of User)
  fullName.vb: System.Threading.Tasks.Task(Of Haiku.API.Models.User)
  name.vb: Task(Of User)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Haiku.API.Models.User
    name: User
    href: Haiku.API.Models.User.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Haiku.API.Models.User
    name: User
    href: Haiku.API.Models.User.html
  - name: )
- uid: Haiku.API.Models.UserProfile
  commentId: T:Haiku.API.Models.UserProfile
  parent: Haiku.API.Models
  href: Haiku.API.Models.UserProfile.html
  name: UserProfile
  nameWithType: UserProfile
  fullName: Haiku.API.Models.UserProfile
- uid: Haiku.API.Dtos.RegisterDto
  commentId: T:Haiku.API.Dtos.RegisterDto
  parent: Haiku.API.Dtos
  href: Haiku.API.Dtos.RegisterDto.html
  name: RegisterDto
  nameWithType: RegisterDto
  fullName: Haiku.API.Dtos.RegisterDto
- uid: Haiku.API.Exceptions.UsernameAlreadyTakenException
  commentId: T:Haiku.API.Exceptions.UsernameAlreadyTakenException
  href: Haiku.API.Exceptions.UsernameAlreadyTakenException.html
  name: UsernameAlreadyTakenException
  nameWithType: UsernameAlreadyTakenException
  fullName: Haiku.API.Exceptions.UsernameAlreadyTakenException
- uid: Haiku.API.Exceptions.NotSavedException
  commentId: T:Haiku.API.Exceptions.NotSavedException
  href: Haiku.API.Exceptions.NotSavedException.html
  name: NotSavedException
  nameWithType: NotSavedException
  fullName: Haiku.API.Exceptions.NotSavedException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Haiku.API.Services.UserServices.UserService.AddUserAsync*
  commentId: Overload:Haiku.API.Services.UserServices.UserService.AddUserAsync
  href: Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_AddUserAsync_Haiku_API_Dtos_RegisterDto_
  name: AddUserAsync
  nameWithType: UserService.AddUserAsync
  fullName: Haiku.API.Services.UserServices.UserService.AddUserAsync
- uid: Haiku.API.Services.UserServices.IUserService.AddUserAsync(Haiku.API.Dtos.RegisterDto)
  commentId: M:Haiku.API.Services.UserServices.IUserService.AddUserAsync(Haiku.API.Dtos.RegisterDto)
  parent: Haiku.API.Services.UserServices.IUserService
  href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_AddUserAsync_Haiku_API_Dtos_RegisterDto_
  name: AddUserAsync(RegisterDto)
  nameWithType: IUserService.AddUserAsync(RegisterDto)
  fullName: Haiku.API.Services.UserServices.IUserService.AddUserAsync(Haiku.API.Dtos.RegisterDto)
  spec.csharp:
  - uid: Haiku.API.Services.UserServices.IUserService.AddUserAsync(Haiku.API.Dtos.RegisterDto)
    name: AddUserAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_AddUserAsync_Haiku_API_Dtos_RegisterDto_
  - name: (
  - uid: Haiku.API.Dtos.RegisterDto
    name: RegisterDto
    href: Haiku.API.Dtos.RegisterDto.html
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserServices.IUserService.AddUserAsync(Haiku.API.Dtos.RegisterDto)
    name: AddUserAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_AddUserAsync_Haiku_API_Dtos_RegisterDto_
  - name: (
  - uid: Haiku.API.Dtos.RegisterDto
    name: RegisterDto
    href: Haiku.API.Dtos.RegisterDto.html
  - name: )
- uid: Haiku.API.Services.UserServices.UserService.UpdateUserAsync*
  commentId: Overload:Haiku.API.Services.UserServices.UserService.UpdateUserAsync
  href: Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_UpdateUserAsync_System_Int64_Haiku_API_Dtos_UserDto_
  name: UpdateUserAsync
  nameWithType: UserService.UpdateUserAsync
  fullName: Haiku.API.Services.UserServices.UserService.UpdateUserAsync
- uid: Haiku.API.Services.UserServices.IUserService.UpdateUserAsync(System.Int64,Haiku.API.Dtos.UserDto)
  commentId: M:Haiku.API.Services.UserServices.IUserService.UpdateUserAsync(System.Int64,Haiku.API.Dtos.UserDto)
  parent: Haiku.API.Services.UserServices.IUserService
  isExternal: true
  href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_UpdateUserAsync_System_Int64_Haiku_API_Dtos_UserDto_
  name: UpdateUserAsync(long, UserDto)
  nameWithType: IUserService.UpdateUserAsync(long, UserDto)
  fullName: Haiku.API.Services.UserServices.IUserService.UpdateUserAsync(long, Haiku.API.Dtos.UserDto)
  nameWithType.vb: IUserService.UpdateUserAsync(Long, UserDto)
  fullName.vb: Haiku.API.Services.UserServices.IUserService.UpdateUserAsync(Long, Haiku.API.Dtos.UserDto)
  name.vb: UpdateUserAsync(Long, UserDto)
  spec.csharp:
  - uid: Haiku.API.Services.UserServices.IUserService.UpdateUserAsync(System.Int64,Haiku.API.Dtos.UserDto)
    name: UpdateUserAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_UpdateUserAsync_System_Int64_Haiku_API_Dtos_UserDto_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Haiku.API.Dtos.UserDto
    name: UserDto
    href: Haiku.API.Dtos.UserDto.html
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserServices.IUserService.UpdateUserAsync(System.Int64,Haiku.API.Dtos.UserDto)
    name: UpdateUserAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_UpdateUserAsync_System_Int64_Haiku_API_Dtos_UserDto_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Haiku.API.Dtos.UserDto
    name: UserDto
    href: Haiku.API.Dtos.UserDto.html
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Haiku.API.Services.UserServices.UserService.DeleteUserByIdAsync*
  commentId: Overload:Haiku.API.Services.UserServices.UserService.DeleteUserByIdAsync
  href: Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_DeleteUserByIdAsync_System_Int64_
  name: DeleteUserByIdAsync
  nameWithType: UserService.DeleteUserByIdAsync
  fullName: Haiku.API.Services.UserServices.UserService.DeleteUserByIdAsync
- uid: Haiku.API.Services.UserServices.IUserService.DeleteUserByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.UserServices.IUserService.DeleteUserByIdAsync(System.Int64)
  parent: Haiku.API.Services.UserServices.IUserService
  isExternal: true
  href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_DeleteUserByIdAsync_System_Int64_
  name: DeleteUserByIdAsync(long)
  nameWithType: IUserService.DeleteUserByIdAsync(long)
  fullName: Haiku.API.Services.UserServices.IUserService.DeleteUserByIdAsync(long)
  nameWithType.vb: IUserService.DeleteUserByIdAsync(Long)
  fullName.vb: Haiku.API.Services.UserServices.IUserService.DeleteUserByIdAsync(Long)
  name.vb: DeleteUserByIdAsync(Long)
  spec.csharp:
  - uid: Haiku.API.Services.UserServices.IUserService.DeleteUserByIdAsync(System.Int64)
    name: DeleteUserByIdAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_DeleteUserByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserServices.IUserService.DeleteUserByIdAsync(System.Int64)
    name: DeleteUserByIdAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_DeleteUserByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: Haiku.API.Services.UserServices.UserService.UserExistsByIdAsync*
  commentId: Overload:Haiku.API.Services.UserServices.UserService.UserExistsByIdAsync
  href: Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_UserExistsByIdAsync_System_Int64_
  name: UserExistsByIdAsync
  nameWithType: UserService.UserExistsByIdAsync
  fullName: Haiku.API.Services.UserServices.UserService.UserExistsByIdAsync
- uid: Haiku.API.Services.UserServices.IUserService.UserExistsByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.UserServices.IUserService.UserExistsByIdAsync(System.Int64)
  parent: Haiku.API.Services.UserServices.IUserService
  isExternal: true
  href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_UserExistsByIdAsync_System_Int64_
  name: UserExistsByIdAsync(long)
  nameWithType: IUserService.UserExistsByIdAsync(long)
  fullName: Haiku.API.Services.UserServices.IUserService.UserExistsByIdAsync(long)
  nameWithType.vb: IUserService.UserExistsByIdAsync(Long)
  fullName.vb: Haiku.API.Services.UserServices.IUserService.UserExistsByIdAsync(Long)
  name.vb: UserExistsByIdAsync(Long)
  spec.csharp:
  - uid: Haiku.API.Services.UserServices.IUserService.UserExistsByIdAsync(System.Int64)
    name: UserExistsByIdAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_UserExistsByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserServices.IUserService.UserExistsByIdAsync(System.Int64)
    name: UserExistsByIdAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_UserExistsByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Haiku.API.Services.UserServices.UserService.UsernameExistsAsync*
  commentId: Overload:Haiku.API.Services.UserServices.UserService.UsernameExistsAsync
  href: Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_UsernameExistsAsync_System_String_
  name: UsernameExistsAsync
  nameWithType: UserService.UsernameExistsAsync
  fullName: Haiku.API.Services.UserServices.UserService.UsernameExistsAsync
- uid: Haiku.API.Services.UserServices.IUserService.UsernameExistsAsync(System.String)
  commentId: M:Haiku.API.Services.UserServices.IUserService.UsernameExistsAsync(System.String)
  parent: Haiku.API.Services.UserServices.IUserService
  isExternal: true
  href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_UsernameExistsAsync_System_String_
  name: UsernameExistsAsync(string)
  nameWithType: IUserService.UsernameExistsAsync(string)
  fullName: Haiku.API.Services.UserServices.IUserService.UsernameExistsAsync(string)
  nameWithType.vb: IUserService.UsernameExistsAsync(String)
  fullName.vb: Haiku.API.Services.UserServices.IUserService.UsernameExistsAsync(String)
  name.vb: UsernameExistsAsync(String)
  spec.csharp:
  - uid: Haiku.API.Services.UserServices.IUserService.UsernameExistsAsync(System.String)
    name: UsernameExistsAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_UsernameExistsAsync_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserServices.IUserService.UsernameExistsAsync(System.String)
    name: UsernameExistsAsync
    href: Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_UsernameExistsAsync_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
