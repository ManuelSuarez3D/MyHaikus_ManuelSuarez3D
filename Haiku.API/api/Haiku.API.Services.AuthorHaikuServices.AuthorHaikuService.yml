### YamlMime:ManagedReference
items:
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
  commentId: T:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
  id: AuthorHaikuService
  parent: Haiku.API.Services.AuthorHaikuServices
  children:
  - Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.#ctor(Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository,Haiku.API.Services.AuthorServices.IAuthorService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService},AutoMapper.IMapper)
  - Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AddAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
  - Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuExistsByIdAsync(System.Int64)
  - Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.DeleteAuthorHaikuByIdAsync(System.Int64)
  - Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetAuthorHaikuByIdAsync(System.Int64)
  - Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  - Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  - Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusAsync(System.String)
  - Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  - Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.UpdateAuthorHaikuAsync(System.Int64,Haiku.API.Dtos.AuthorHaikuDto)
  langs:
  - csharp
  - vb
  name: AuthorHaikuService
  nameWithType: AuthorHaikuService
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
  type: Class
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: AuthorHaikuService
    path: Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
    startLine: 9
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorHaikuServices
  syntax:
    content: 'public class AuthorHaikuService : IAuthorHaikuService'
    content.vb: Public Class AuthorHaikuService Implements IAuthorHaikuService
  inheritance:
  - System.Object
  implements:
  - Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.#ctor(Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository,Haiku.API.Services.AuthorServices.IAuthorService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService},AutoMapper.IMapper)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.#ctor(Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository,Haiku.API.Services.AuthorServices.IAuthorService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService},AutoMapper.IMapper)
  id: '#ctor(Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository,Haiku.API.Services.AuthorServices.IAuthorService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService},AutoMapper.IMapper)'
  parent: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
  langs:
  - csharp
  - vb
  name: AuthorHaikuService(IAuthorHaikuRepository, IAuthorService, ILogger<AuthorHaikuService>, IMapper)
  nameWithType: AuthorHaikuService.AuthorHaikuService(IAuthorHaikuRepository, IAuthorService, ILogger<AuthorHaikuService>, IMapper)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuService(Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository, Haiku.API.Services.AuthorServices.IAuthorService, Microsoft.Extensions.Logging.ILogger<Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService>, AutoMapper.IMapper)
  type: Constructor
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: .ctor
    path: Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
    startLine: 17
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorHaikuServices
  syntax:
    content: public AuthorHaikuService(IAuthorHaikuRepository authorHaikuRepository, IAuthorService authorService, ILogger<AuthorHaikuService> logger, IMapper mapper)
    parameters:
    - id: authorHaikuRepository
      type: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
    - id: authorService
      type: Haiku.API.Services.AuthorServices.IAuthorService
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService}
    - id: mapper
      type: AutoMapper.IMapper
    content.vb: Public Sub New(authorHaikuRepository As IAuthorHaikuRepository, authorService As IAuthorService, logger As ILogger(Of AuthorHaikuService), mapper As IMapper)
  overload: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.#ctor*
  nameWithType.vb: AuthorHaikuService.New(IAuthorHaikuRepository, IAuthorService, ILogger(Of AuthorHaikuService), IMapper)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.New(Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository, Haiku.API.Services.AuthorServices.IAuthorService, Microsoft.Extensions.Logging.ILogger(Of Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService), AutoMapper.IMapper)
  name.vb: New(IAuthorHaikuRepository, IAuthorService, ILogger(Of AuthorHaikuService), IMapper)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  id: GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  parent: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
  langs:
  - csharp
  - vb
  name: GetPaginatedAuthorHaikusAsync(int, int, string)
  nameWithType: AuthorHaikuService.GetPaginatedAuthorHaikusAsync(int, int, string)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusAsync(int, int, string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetPaginatedAuthorHaikusAsync
    path: Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
    startLine: 32
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorHaikuServices
  summary: Retrieves a paginated list of <xref href="Haiku.API.Dtos.AuthorHaikuDto" data-throw-if-not-resolved="false"></xref>'s based on the page number, page size, and optional search criteria.
  example: []
  syntax:
    content: public Task<IEnumerable<AuthorHaikuDto>> GetPaginatedAuthorHaikusAsync(int pageNumber, int pageSize, string searchOption)
    parameters:
    - id: pageNumber
      type: System.Int32
      description: The current page number. Defaults to 1 if a value less than 1 is provided.
    - id: pageSize
      type: System.Int32
      description: The number of items per page.
    - id: searchOption
      type: System.String
      description: An optional search string to filter <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref>'s by their title.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Dtos.AuthorHaikuDto}}
      description: A task that represents the asynchronous operation. The task result contains an <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> of paginated <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref>'s.
    content.vb: Public Function GetPaginatedAuthorHaikusAsync(pageNumber As Integer, pageSize As Integer, searchOption As String) As Task(Of IEnumerable(Of AuthorHaikuDto))
  overload: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusAsync*
  implements:
  - Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  nameWithType.vb: AuthorHaikuService.GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  name.vb: GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  id: GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  parent: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
  langs:
  - csharp
  - vb
  name: GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  nameWithType: AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetPaginatedAuthorHaikusByAuthorIdAsync
    path: Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
    startLine: 50
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorHaikuServices
  summary: Retrieves a paginated list of <xref href="Haiku.API.Dtos.AuthorHaikuDto" data-throw-if-not-resolved="false"></xref>'s based on the <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref>'s ID, page number, page size, and optional search criteria.
  example: []
  syntax:
    content: public Task<IEnumerable<AuthorHaikuDto>> GetPaginatedAuthorHaikusByAuthorIdAsync(long authorId, int pageNumber, int pageSize, string searchOption)
    parameters:
    - id: authorId
      type: System.Int64
      description: The ID of the <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> whose <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref>'s are being retrieved.
    - id: pageNumber
      type: System.Int32
      description: The current page number. Defaults to 1 if a value less than 1 is provided.
    - id: pageSize
      type: System.Int32
      description: The number of items per page.
    - id: searchOption
      type: System.String
      description: An optional search string to filter <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref>'s by their title.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Dtos.AuthorHaikuDto}}
      description: A task that represents the asynchronous operation. The task result contains an <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> of paginated <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref>'s by the specified <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetPaginatedAuthorHaikusByAuthorIdAsync(authorId As Long, pageNumber As Integer, pageSize As Integer, searchOption As String) As Task(Of IEnumerable(Of AuthorHaikuDto))
  overload: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync*
  implements:
  - Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  nameWithType.vb: AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  name.vb: GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  id: GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  parent: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
  langs:
  - csharp
  - vb
  name: GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  nameWithType: AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetTotalAuthorHaikusByAuthorIdAsync
    path: Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
    startLine: 68
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorHaikuServices
  summary: Retrieves the total count of <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref>'s associated with a specific <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref>, filtered by an optional search criteria.
  example: []
  syntax:
    content: public Task<int> GetTotalAuthorHaikusByAuthorIdAsync(long authorId, string searchOption)
    parameters:
    - id: authorId
      type: System.Int64
      description: The ID of the <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> whose <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref>'s are being counted.
    - id: searchOption
      type: System.String
      description: An optional search string to filter <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref>'s by their title.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task that represents the asynchronous operation. The task result contains the total number of <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref>'s  by the specified <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetTotalAuthorHaikusByAuthorIdAsync(authorId As Long, searchOption As String) As Task(Of Integer)
  overload: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync*
  implements:
  - Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  nameWithType.vb: AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  name.vb: GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusAsync(System.String)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusAsync(System.String)
  id: GetTotalAuthorHaikusAsync(System.String)
  parent: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
  langs:
  - csharp
  - vb
  name: GetTotalAuthorHaikusAsync(string)
  nameWithType: AuthorHaikuService.GetTotalAuthorHaikusAsync(string)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusAsync(string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetTotalAuthorHaikusAsync
    path: Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
    startLine: 80
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorHaikuServices
  summary: Retrieves the total count of all <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref>'s, optionally filtered by a search string.
  example: []
  syntax:
    content: public Task<int> GetTotalAuthorHaikusAsync(string searchOption)
    parameters:
    - id: searchOption
      type: System.String
      description: An optional search string to filter <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref>'s by their title.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task that represents the asynchronous operation. The task result contains the total number of <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref>'s.
    content.vb: Public Function GetTotalAuthorHaikusAsync(searchOption As String) As Task(Of Integer)
  overload: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusAsync*
  implements:
  - Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusAsync(System.String)
  nameWithType.vb: AuthorHaikuService.GetTotalAuthorHaikusAsync(String)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusAsync(String)
  name.vb: GetTotalAuthorHaikusAsync(String)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetAuthorHaikuByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetAuthorHaikuByIdAsync(System.Int64)
  id: GetAuthorHaikuByIdAsync(System.Int64)
  parent: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
  langs:
  - csharp
  - vb
  name: GetAuthorHaikuByIdAsync(long)
  nameWithType: AuthorHaikuService.GetAuthorHaikuByIdAsync(long)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetAuthorHaikuByIdAsync(long)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetAuthorHaikuByIdAsync
    path: Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
    startLine: 93
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorHaikuServices
  summary: Retrieves an <xref href="Haiku.API.Dtos.AuthorHaikuDto" data-throw-if-not-resolved="false"></xref> by its unique identifier.
  example: []
  syntax:
    content: public Task<AuthorHaikuDto> GetAuthorHaikuByIdAsync(long authorHaikuId)
    parameters:
    - id: authorHaikuId
      type: System.Int64
      description: The unique identifier of the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> to retrieve.
    return:
      type: System.Threading.Tasks.Task{Haiku.API.Dtos.AuthorHaikuDto}
      description: A task that represents the asynchronous operation. The task result contains the corresponding <xref href="Haiku.API.Dtos.AuthorHaikuDto" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetAuthorHaikuByIdAsync(authorHaikuId As Long) As Task(Of AuthorHaikuDto)
  overload: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetAuthorHaikuByIdAsync*
  exceptions:
  - type: Haiku.API.Exceptions.NotFoundException
    commentId: T:Haiku.API.Exceptions.NotFoundException
    description: Thrown when the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> with the specified ID is not found.
  implements:
  - Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetAuthorHaikuByIdAsync(System.Int64)
  nameWithType.vb: AuthorHaikuService.GetAuthorHaikuByIdAsync(Long)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetAuthorHaikuByIdAsync(Long)
  name.vb: GetAuthorHaikuByIdAsync(Long)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AddAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AddAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
  id: AddAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
  parent: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
  langs:
  - csharp
  - vb
  name: AddAuthorHaikuAsync(AuthorHaikuDto)
  nameWithType: AuthorHaikuService.AddAuthorHaikuAsync(AuthorHaikuDto)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AddAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: AddAuthorHaikuAsync
    path: Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
    startLine: 114
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorHaikuServices
  summary: Adds a new <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> to the repository.
  example: []
  syntax:
    content: public Task<AuthorHaikuDto> AddAuthorHaikuAsync(AuthorHaikuDto newAuthorHaikuDto)
    parameters:
    - id: newAuthorHaikuDto
      type: Haiku.API.Dtos.AuthorHaikuDto
      description: The DTO containing the details of the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> to add.
    return:
      type: System.Threading.Tasks.Task{Haiku.API.Dtos.AuthorHaikuDto}
      description: A task that represents the asynchronous operation. The task result contains the created <xref href="Haiku.API.Dtos.AuthorHaikuDto" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function AddAuthorHaikuAsync(newAuthorHaikuDto As AuthorHaikuDto) As Task(Of AuthorHaikuDto)
  overload: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AddAuthorHaikuAsync*
  exceptions:
  - type: Haiku.API.Exceptions.NotFoundException
    commentId: T:Haiku.API.Exceptions.NotFoundException
    description: Thrown when the <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> with the specified ID is not found.
  - type: Haiku.API.Exceptions.NotSavedException
    commentId: T:Haiku.API.Exceptions.NotSavedException
    description: Thrown when the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> could not be add.
  implements:
  - Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AddAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.UpdateAuthorHaikuAsync(System.Int64,Haiku.API.Dtos.AuthorHaikuDto)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.UpdateAuthorHaikuAsync(System.Int64,Haiku.API.Dtos.AuthorHaikuDto)
  id: UpdateAuthorHaikuAsync(System.Int64,Haiku.API.Dtos.AuthorHaikuDto)
  parent: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
  langs:
  - csharp
  - vb
  name: UpdateAuthorHaikuAsync(long, AuthorHaikuDto)
  nameWithType: AuthorHaikuService.UpdateAuthorHaikuAsync(long, AuthorHaikuDto)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.UpdateAuthorHaikuAsync(long, Haiku.API.Dtos.AuthorHaikuDto)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: UpdateAuthorHaikuAsync
    path: Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
    startLine: 139
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorHaikuServices
  summary: Updates an existing <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> in the repository.
  example: []
  syntax:
    content: public Task UpdateAuthorHaikuAsync(long authorHaikuId, AuthorHaikuDto updatedAuthorHaikuDto)
    parameters:
    - id: authorHaikuId
      type: System.Int64
      description: The ID of the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> to update.
    - id: updatedAuthorHaikuDto
      type: Haiku.API.Dtos.AuthorHaikuDto
      description: The DTO containing the updated details of the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function UpdateAuthorHaikuAsync(authorHaikuId As Long, updatedAuthorHaikuDto As AuthorHaikuDto) As Task
  overload: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.UpdateAuthorHaikuAsync*
  exceptions:
  - type: Haiku.API.Exceptions.NotFoundException
    commentId: T:Haiku.API.Exceptions.NotFoundException
    description: Thrown when the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> with the specified ID is not found.
  - type: Haiku.API.Exceptions.NotSavedException
    commentId: T:Haiku.API.Exceptions.NotSavedException
    description: Thrown when the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> could not be updated.
  implements:
  - Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.UpdateAuthorHaikuAsync(System.Int64,Haiku.API.Dtos.AuthorHaikuDto)
  nameWithType.vb: AuthorHaikuService.UpdateAuthorHaikuAsync(Long, AuthorHaikuDto)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.UpdateAuthorHaikuAsync(Long, Haiku.API.Dtos.AuthorHaikuDto)
  name.vb: UpdateAuthorHaikuAsync(Long, AuthorHaikuDto)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.DeleteAuthorHaikuByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.DeleteAuthorHaikuByIdAsync(System.Int64)
  id: DeleteAuthorHaikuByIdAsync(System.Int64)
  parent: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
  langs:
  - csharp
  - vb
  name: DeleteAuthorHaikuByIdAsync(long)
  nameWithType: AuthorHaikuService.DeleteAuthorHaikuByIdAsync(long)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.DeleteAuthorHaikuByIdAsync(long)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: DeleteAuthorHaikuByIdAsync
    path: Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
    startLine: 162
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorHaikuServices
  summary: Deletes an <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> from the repository by its ID.
  example: []
  syntax:
    content: public Task DeleteAuthorHaikuByIdAsync(long authorHaikuId)
    parameters:
    - id: authorHaikuId
      type: System.Int64
      description: The ID of the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> to delete.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function DeleteAuthorHaikuByIdAsync(authorHaikuId As Long) As Task
  overload: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.DeleteAuthorHaikuByIdAsync*
  exceptions:
  - type: Haiku.API.Exceptions.NotFoundException
    commentId: T:Haiku.API.Exceptions.NotFoundException
    description: Thrown when the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> with the specified ID is not found.
  - type: Haiku.API.Exceptions.NotSavedException
    commentId: T:Haiku.API.Exceptions.NotSavedException
    description: Thrown when the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> could not be deleted.
  implements:
  - Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.DeleteAuthorHaikuByIdAsync(System.Int64)
  nameWithType.vb: AuthorHaikuService.DeleteAuthorHaikuByIdAsync(Long)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.DeleteAuthorHaikuByIdAsync(Long)
  name.vb: DeleteAuthorHaikuByIdAsync(Long)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuExistsByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuExistsByIdAsync(System.Int64)
  id: AuthorHaikuExistsByIdAsync(System.Int64)
  parent: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
  langs:
  - csharp
  - vb
  name: AuthorHaikuExistsByIdAsync(long)
  nameWithType: AuthorHaikuService.AuthorHaikuExistsByIdAsync(long)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuExistsByIdAsync(long)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: AuthorHaikuExistsByIdAsync
    path: Haiku.API/Services/AuthorHaikuServices/AuthorHaikuService.cs
    startLine: 181
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorHaikuServices
  summary: Checks if an <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> exists in the repository by its ID.
  example: []
  syntax:
    content: public Task<bool> AuthorHaikuExistsByIdAsync(long authorHaikuId)
    parameters:
    - id: authorHaikuId
      type: System.Int64
      description: The ID of the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> to check.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation. The task result contains a boolean value indicating whether the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> exists.
    content.vb: Public Function AuthorHaikuExistsByIdAsync(authorHaikuId As Long) As Task(Of Boolean)
  overload: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuExistsByIdAsync*
  implements:
  - Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AuthorHaikuExistsByIdAsync(System.Int64)
  nameWithType.vb: AuthorHaikuService.AuthorHaikuExistsByIdAsync(Long)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuExistsByIdAsync(Long)
  name.vb: AuthorHaikuExistsByIdAsync(Long)
references:
- uid: Haiku.API.Services.AuthorHaikuServices
  commentId: N:Haiku.API.Services.AuthorHaikuServices
  href: Haiku.html
  name: Haiku.API.Services.AuthorHaikuServices
  nameWithType: Haiku.API.Services.AuthorHaikuServices
  fullName: Haiku.API.Services.AuthorHaikuServices
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Services
    name: Services
    href: Haiku.API.Services.html
  - name: .
  - uid: Haiku.API.Services.AuthorHaikuServices
    name: AuthorHaikuServices
    href: Haiku.API.Services.AuthorHaikuServices.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Services
    name: Services
    href: Haiku.API.Services.html
  - name: .
  - uid: Haiku.API.Services.AuthorHaikuServices
    name: AuthorHaikuServices
    href: Haiku.API.Services.AuthorHaikuServices.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService
  commentId: T:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService
  parent: Haiku.API.Services.AuthorHaikuServices
  href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html
  name: IAuthorHaikuService
  nameWithType: IAuthorHaikuService
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.#ctor*
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.#ctor
  href: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService__ctor_Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_Haiku_API_Services_AuthorServices_IAuthorService_Microsoft_Extensions_Logging_ILogger_Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService__AutoMapper_IMapper_
  name: AuthorHaikuService
  nameWithType: AuthorHaikuService.AuthorHaikuService
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuService
  nameWithType.vb: AuthorHaikuService.New
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.New
  name.vb: New
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  commentId: T:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  parent: Haiku.API.Repositories.AuthorHaikuRepositories
  href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html
  name: IAuthorHaikuRepository
  nameWithType: IAuthorHaikuRepository
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
- uid: Haiku.API.Services.AuthorServices.IAuthorService
  commentId: T:Haiku.API.Services.AuthorServices.IAuthorService
  parent: Haiku.API.Services.AuthorServices
  href: Haiku.API.Services.AuthorServices.IAuthorService.html
  name: IAuthorService
  nameWithType: IAuthorService
  fullName: Haiku.API.Services.AuthorServices.IAuthorService
- uid: Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService}
  commentId: T:Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<AuthorHaikuService>
  nameWithType: ILogger<AuthorHaikuService>
  fullName: Microsoft.Extensions.Logging.ILogger<Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService>
  nameWithType.vb: ILogger(Of AuthorHaikuService)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService)
  name.vb: ILogger(Of AuthorHaikuService)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
    name: AuthorHaikuService
    href: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
    name: AuthorHaikuService
    href: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html
  - name: )
- uid: AutoMapper.IMapper
  commentId: T:AutoMapper.IMapper
  parent: AutoMapper
  isExternal: true
  name: IMapper
  nameWithType: IMapper
  fullName: AutoMapper.IMapper
- uid: Haiku.API.Repositories.AuthorHaikuRepositories
  commentId: N:Haiku.API.Repositories.AuthorHaikuRepositories
  href: Haiku.html
  name: Haiku.API.Repositories.AuthorHaikuRepositories
  nameWithType: Haiku.API.Repositories.AuthorHaikuRepositories
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Repositories
    name: Repositories
    href: Haiku.API.Repositories.html
  - name: .
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories
    name: AuthorHaikuRepositories
    href: Haiku.API.Repositories.AuthorHaikuRepositories.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Repositories
    name: Repositories
    href: Haiku.API.Repositories.html
  - name: .
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories
    name: AuthorHaikuRepositories
    href: Haiku.API.Repositories.AuthorHaikuRepositories.html
- uid: Haiku.API.Services.AuthorServices
  commentId: N:Haiku.API.Services.AuthorServices
  href: Haiku.html
  name: Haiku.API.Services.AuthorServices
  nameWithType: Haiku.API.Services.AuthorServices
  fullName: Haiku.API.Services.AuthorServices
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Services
    name: Services
    href: Haiku.API.Services.html
  - name: .
  - uid: Haiku.API.Services.AuthorServices
    name: AuthorServices
    href: Haiku.API.Services.AuthorServices.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Services
    name: Services
    href: Haiku.API.Services.html
  - name: .
  - uid: Haiku.API.Services.AuthorServices
    name: AuthorServices
    href: Haiku.API.Services.AuthorServices.html
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: AutoMapper
  commentId: N:AutoMapper
  isExternal: true
  name: AutoMapper
  nameWithType: AutoMapper
  fullName: AutoMapper
- uid: Haiku.API.Dtos.AuthorHaikuDto
  commentId: T:Haiku.API.Dtos.AuthorHaikuDto
  parent: Haiku.API.Dtos
  href: Haiku.API.Dtos.AuthorHaikuDto.html
  name: AuthorHaikuDto
  nameWithType: AuthorHaikuDto
  fullName: Haiku.API.Dtos.AuthorHaikuDto
- uid: Haiku.API.Models.AuthorHaiku
  commentId: T:Haiku.API.Models.AuthorHaiku
  parent: Haiku.API.Models
  href: Haiku.API.Models.AuthorHaiku.html
  name: AuthorHaiku
  nameWithType: AuthorHaiku
  fullName: Haiku.API.Models.AuthorHaiku
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusAsync*
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusAsync
  href: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_GetPaginatedAuthorHaikusAsync_System_Int32_System_Int32_System_String_
  name: GetPaginatedAuthorHaikusAsync
  nameWithType: AuthorHaikuService.GetPaginatedAuthorHaikusAsync
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  parent: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService
  isExternal: true
  href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetPaginatedAuthorHaikusAsync_System_Int32_System_Int32_System_String_
  name: GetPaginatedAuthorHaikusAsync(int, int, string)
  nameWithType: IAuthorHaikuService.GetPaginatedAuthorHaikusAsync(int, int, string)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusAsync(int, int, string)
  nameWithType.vb: IAuthorHaikuService.GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  name.vb: GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  spec.csharp:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
    name: GetPaginatedAuthorHaikusAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetPaginatedAuthorHaikusAsync_System_Int32_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
    name: GetPaginatedAuthorHaikusAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetPaginatedAuthorHaikusAsync_System_Int32_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Dtos.AuthorHaikuDto}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Dtos.AuthorHaikuDto}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<AuthorHaikuDto>>
  nameWithType: Task<IEnumerable<AuthorHaikuDto>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Haiku.API.Dtos.AuthorHaikuDto>>
  nameWithType.vb: Task(Of IEnumerable(Of AuthorHaikuDto))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Haiku.API.Dtos.AuthorHaikuDto))
  name.vb: Task(Of IEnumerable(Of AuthorHaikuDto))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Haiku.API.Dtos.AuthorHaikuDto
    name: AuthorHaikuDto
    href: Haiku.API.Dtos.AuthorHaikuDto.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Haiku.API.Dtos.AuthorHaikuDto
    name: AuthorHaikuDto
    href: Haiku.API.Dtos.AuthorHaikuDto.html
  - name: )
  - name: )
- uid: Haiku.API.Dtos
  commentId: N:Haiku.API.Dtos
  href: Haiku.html
  name: Haiku.API.Dtos
  nameWithType: Haiku.API.Dtos
  fullName: Haiku.API.Dtos
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Dtos
    name: Dtos
    href: Haiku.API.Dtos.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Dtos
    name: Dtos
    href: Haiku.API.Dtos.html
- uid: Haiku.API.Models
  commentId: N:Haiku.API.Models
  href: Haiku.html
  name: Haiku.API.Models
  nameWithType: Haiku.API.Models
  fullName: Haiku.API.Models
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Models
    name: Models
    href: Haiku.API.Models.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Models
    name: Models
    href: Haiku.API.Models.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Haiku.API.Models.Author
  commentId: T:Haiku.API.Models.Author
  parent: Haiku.API.Models
  href: Haiku.API.Models.Author.html
  name: Author
  nameWithType: Author
  fullName: Haiku.API.Models.Author
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync*
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync
  href: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_GetPaginatedAuthorHaikusByAuthorIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  name: GetPaginatedAuthorHaikusByAuthorIdAsync
  nameWithType: AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  parent: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService
  isExternal: true
  href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetPaginatedAuthorHaikusByAuthorIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  name: GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  nameWithType: IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  nameWithType.vb: IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  name.vb: GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  spec.csharp:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
    name: GetPaginatedAuthorHaikusByAuthorIdAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetPaginatedAuthorHaikusByAuthorIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
    name: GetPaginatedAuthorHaikusByAuthorIdAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetPaginatedAuthorHaikusByAuthorIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync*
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync
  href: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_GetTotalAuthorHaikusByAuthorIdAsync_System_Int64_System_String_
  name: GetTotalAuthorHaikusByAuthorIdAsync
  nameWithType: AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  parent: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService
  isExternal: true
  href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetTotalAuthorHaikusByAuthorIdAsync_System_Int64_System_String_
  name: GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  nameWithType: IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  nameWithType.vb: IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  name.vb: GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  spec.csharp:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
    name: GetTotalAuthorHaikusByAuthorIdAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetTotalAuthorHaikusByAuthorIdAsync_System_Int64_System_String_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
    name: GetTotalAuthorHaikusByAuthorIdAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetTotalAuthorHaikusByAuthorIdAsync_System_Int64_System_String_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusAsync*
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusAsync
  href: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_GetTotalAuthorHaikusAsync_System_String_
  name: GetTotalAuthorHaikusAsync
  nameWithType: AuthorHaikuService.GetTotalAuthorHaikusAsync
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusAsync(System.String)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusAsync(System.String)
  parent: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService
  isExternal: true
  href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetTotalAuthorHaikusAsync_System_String_
  name: GetTotalAuthorHaikusAsync(string)
  nameWithType: IAuthorHaikuService.GetTotalAuthorHaikusAsync(string)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusAsync(string)
  nameWithType.vb: IAuthorHaikuService.GetTotalAuthorHaikusAsync(String)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusAsync(String)
  name.vb: GetTotalAuthorHaikusAsync(String)
  spec.csharp:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusAsync(System.String)
    name: GetTotalAuthorHaikusAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetTotalAuthorHaikusAsync_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusAsync(System.String)
    name: GetTotalAuthorHaikusAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetTotalAuthorHaikusAsync_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Haiku.API.Exceptions.NotFoundException
  commentId: T:Haiku.API.Exceptions.NotFoundException
  href: Haiku.API.Exceptions.NotFoundException.html
  name: NotFoundException
  nameWithType: NotFoundException
  fullName: Haiku.API.Exceptions.NotFoundException
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetAuthorHaikuByIdAsync*
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetAuthorHaikuByIdAsync
  href: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_GetAuthorHaikuByIdAsync_System_Int64_
  name: GetAuthorHaikuByIdAsync
  nameWithType: AuthorHaikuService.GetAuthorHaikuByIdAsync
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetAuthorHaikuByIdAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetAuthorHaikuByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetAuthorHaikuByIdAsync(System.Int64)
  parent: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService
  isExternal: true
  href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetAuthorHaikuByIdAsync_System_Int64_
  name: GetAuthorHaikuByIdAsync(long)
  nameWithType: IAuthorHaikuService.GetAuthorHaikuByIdAsync(long)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetAuthorHaikuByIdAsync(long)
  nameWithType.vb: IAuthorHaikuService.GetAuthorHaikuByIdAsync(Long)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetAuthorHaikuByIdAsync(Long)
  name.vb: GetAuthorHaikuByIdAsync(Long)
  spec.csharp:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetAuthorHaikuByIdAsync(System.Int64)
    name: GetAuthorHaikuByIdAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetAuthorHaikuByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetAuthorHaikuByIdAsync(System.Int64)
    name: GetAuthorHaikuByIdAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetAuthorHaikuByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.Threading.Tasks.Task{Haiku.API.Dtos.AuthorHaikuDto}
  commentId: T:System.Threading.Tasks.Task{Haiku.API.Dtos.AuthorHaikuDto}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<AuthorHaikuDto>
  nameWithType: Task<AuthorHaikuDto>
  fullName: System.Threading.Tasks.Task<Haiku.API.Dtos.AuthorHaikuDto>
  nameWithType.vb: Task(Of AuthorHaikuDto)
  fullName.vb: System.Threading.Tasks.Task(Of Haiku.API.Dtos.AuthorHaikuDto)
  name.vb: Task(Of AuthorHaikuDto)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Haiku.API.Dtos.AuthorHaikuDto
    name: AuthorHaikuDto
    href: Haiku.API.Dtos.AuthorHaikuDto.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Haiku.API.Dtos.AuthorHaikuDto
    name: AuthorHaikuDto
    href: Haiku.API.Dtos.AuthorHaikuDto.html
  - name: )
- uid: Haiku.API.Exceptions.NotSavedException
  commentId: T:Haiku.API.Exceptions.NotSavedException
  href: Haiku.API.Exceptions.NotSavedException.html
  name: NotSavedException
  nameWithType: NotSavedException
  fullName: Haiku.API.Exceptions.NotSavedException
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AddAuthorHaikuAsync*
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AddAuthorHaikuAsync
  href: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_AddAuthorHaikuAsync_Haiku_API_Dtos_AuthorHaikuDto_
  name: AddAuthorHaikuAsync
  nameWithType: AuthorHaikuService.AddAuthorHaikuAsync
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AddAuthorHaikuAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AddAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AddAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
  parent: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService
  href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_AddAuthorHaikuAsync_Haiku_API_Dtos_AuthorHaikuDto_
  name: AddAuthorHaikuAsync(AuthorHaikuDto)
  nameWithType: IAuthorHaikuService.AddAuthorHaikuAsync(AuthorHaikuDto)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AddAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
  spec.csharp:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AddAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
    name: AddAuthorHaikuAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_AddAuthorHaikuAsync_Haiku_API_Dtos_AuthorHaikuDto_
  - name: (
  - uid: Haiku.API.Dtos.AuthorHaikuDto
    name: AuthorHaikuDto
    href: Haiku.API.Dtos.AuthorHaikuDto.html
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AddAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
    name: AddAuthorHaikuAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_AddAuthorHaikuAsync_Haiku_API_Dtos_AuthorHaikuDto_
  - name: (
  - uid: Haiku.API.Dtos.AuthorHaikuDto
    name: AuthorHaikuDto
    href: Haiku.API.Dtos.AuthorHaikuDto.html
  - name: )
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.UpdateAuthorHaikuAsync*
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.UpdateAuthorHaikuAsync
  href: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_UpdateAuthorHaikuAsync_System_Int64_Haiku_API_Dtos_AuthorHaikuDto_
  name: UpdateAuthorHaikuAsync
  nameWithType: AuthorHaikuService.UpdateAuthorHaikuAsync
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.UpdateAuthorHaikuAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.UpdateAuthorHaikuAsync(System.Int64,Haiku.API.Dtos.AuthorHaikuDto)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.UpdateAuthorHaikuAsync(System.Int64,Haiku.API.Dtos.AuthorHaikuDto)
  parent: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService
  isExternal: true
  href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_UpdateAuthorHaikuAsync_System_Int64_Haiku_API_Dtos_AuthorHaikuDto_
  name: UpdateAuthorHaikuAsync(long, AuthorHaikuDto)
  nameWithType: IAuthorHaikuService.UpdateAuthorHaikuAsync(long, AuthorHaikuDto)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.UpdateAuthorHaikuAsync(long, Haiku.API.Dtos.AuthorHaikuDto)
  nameWithType.vb: IAuthorHaikuService.UpdateAuthorHaikuAsync(Long, AuthorHaikuDto)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.UpdateAuthorHaikuAsync(Long, Haiku.API.Dtos.AuthorHaikuDto)
  name.vb: UpdateAuthorHaikuAsync(Long, AuthorHaikuDto)
  spec.csharp:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.UpdateAuthorHaikuAsync(System.Int64,Haiku.API.Dtos.AuthorHaikuDto)
    name: UpdateAuthorHaikuAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_UpdateAuthorHaikuAsync_System_Int64_Haiku_API_Dtos_AuthorHaikuDto_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Haiku.API.Dtos.AuthorHaikuDto
    name: AuthorHaikuDto
    href: Haiku.API.Dtos.AuthorHaikuDto.html
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.UpdateAuthorHaikuAsync(System.Int64,Haiku.API.Dtos.AuthorHaikuDto)
    name: UpdateAuthorHaikuAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_UpdateAuthorHaikuAsync_System_Int64_Haiku_API_Dtos_AuthorHaikuDto_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Haiku.API.Dtos.AuthorHaikuDto
    name: AuthorHaikuDto
    href: Haiku.API.Dtos.AuthorHaikuDto.html
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.DeleteAuthorHaikuByIdAsync*
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.DeleteAuthorHaikuByIdAsync
  href: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_DeleteAuthorHaikuByIdAsync_System_Int64_
  name: DeleteAuthorHaikuByIdAsync
  nameWithType: AuthorHaikuService.DeleteAuthorHaikuByIdAsync
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.DeleteAuthorHaikuByIdAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.DeleteAuthorHaikuByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.DeleteAuthorHaikuByIdAsync(System.Int64)
  parent: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService
  isExternal: true
  href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_DeleteAuthorHaikuByIdAsync_System_Int64_
  name: DeleteAuthorHaikuByIdAsync(long)
  nameWithType: IAuthorHaikuService.DeleteAuthorHaikuByIdAsync(long)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.DeleteAuthorHaikuByIdAsync(long)
  nameWithType.vb: IAuthorHaikuService.DeleteAuthorHaikuByIdAsync(Long)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.DeleteAuthorHaikuByIdAsync(Long)
  name.vb: DeleteAuthorHaikuByIdAsync(Long)
  spec.csharp:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.DeleteAuthorHaikuByIdAsync(System.Int64)
    name: DeleteAuthorHaikuByIdAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_DeleteAuthorHaikuByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.DeleteAuthorHaikuByIdAsync(System.Int64)
    name: DeleteAuthorHaikuByIdAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_DeleteAuthorHaikuByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuExistsByIdAsync*
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuExistsByIdAsync
  href: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_AuthorHaikuExistsByIdAsync_System_Int64_
  name: AuthorHaikuExistsByIdAsync
  nameWithType: AuthorHaikuService.AuthorHaikuExistsByIdAsync
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuExistsByIdAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AuthorHaikuExistsByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AuthorHaikuExistsByIdAsync(System.Int64)
  parent: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService
  isExternal: true
  href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_AuthorHaikuExistsByIdAsync_System_Int64_
  name: AuthorHaikuExistsByIdAsync(long)
  nameWithType: IAuthorHaikuService.AuthorHaikuExistsByIdAsync(long)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AuthorHaikuExistsByIdAsync(long)
  nameWithType.vb: IAuthorHaikuService.AuthorHaikuExistsByIdAsync(Long)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AuthorHaikuExistsByIdAsync(Long)
  name.vb: AuthorHaikuExistsByIdAsync(Long)
  spec.csharp:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AuthorHaikuExistsByIdAsync(System.Int64)
    name: AuthorHaikuExistsByIdAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_AuthorHaikuExistsByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AuthorHaikuExistsByIdAsync(System.Int64)
    name: AuthorHaikuExistsByIdAsync
    href: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_AuthorHaikuExistsByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
