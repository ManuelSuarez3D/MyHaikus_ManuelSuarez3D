### YamlMime:ManagedReference
items:
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository
  commentId: T:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository
  id: AuthorHaikuRepository
  parent: Haiku.API.Repositories.AuthorHaikuRepositories
  children:
  - Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.#ctor(Haiku.API.Database.HaikuAPIContext)
  - Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AddAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  - Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuExistsByIdAsync(System.Int64)
  - Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(System.Int64)
  - Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetAuthorHaikuByIdAsync(System.Int64)
  - Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  - Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  - Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusAsync(System.String)
  - Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  - Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  - Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(System.Int64,System.Int64)
  langs:
  - csharp
  - vb
  name: AuthorHaikuRepository
  nameWithType: AuthorHaikuRepository
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository
  type: Class
  source:
    remote:
      path: Haiku.API/Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: AuthorHaikuRepository
    path: Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
    startLine: 7
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Repositories.AuthorHaikuRepositories
  syntax:
    content: 'public class AuthorHaikuRepository : IAuthorHaikuRepository'
    content.vb: Public Class AuthorHaikuRepository Implements IAuthorHaikuRepository
  inheritance:
  - System.Object
  implements:
  - Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.#ctor(Haiku.API.Database.HaikuAPIContext)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.#ctor(Haiku.API.Database.HaikuAPIContext)
  id: '#ctor(Haiku.API.Database.HaikuAPIContext)'
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository
  langs:
  - csharp
  - vb
  name: AuthorHaikuRepository(HaikuAPIContext)
  nameWithType: AuthorHaikuRepository.AuthorHaikuRepository(HaikuAPIContext)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuRepository(Haiku.API.Database.HaikuAPIContext)
  type: Constructor
  source:
    remote:
      path: Haiku.API/Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: .ctor
    path: Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
    startLine: 11
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Repositories.AuthorHaikuRepositories
  syntax:
    content: public AuthorHaikuRepository(HaikuAPIContext context)
    parameters:
    - id: context
      type: Haiku.API.Database.HaikuAPIContext
    content.vb: Public Sub New(context As HaikuAPIContext)
  overload: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.#ctor*
  nameWithType.vb: AuthorHaikuRepository.New(HaikuAPIContext)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.New(Haiku.API.Database.HaikuAPIContext)
  name.vb: New(HaikuAPIContext)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  id: GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository
  langs:
  - csharp
  - vb
  name: GetPaginatedAuthorHaikusAsync(int, int, string)
  nameWithType: AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(int, int, string)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(int, int, string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetPaginatedAuthorHaikusAsync
    path: Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
    startLine: 23
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Repositories.AuthorHaikuRepositories
  summary: Retrieves a paginated list of <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entities.
  example: []
  syntax:
    content: public Task<IEnumerable<AuthorHaiku>> GetPaginatedAuthorHaikusAsync(int pageNumber, int pageSize, string searchOption)
    parameters:
    - id: pageNumber
      type: System.Int32
      description: The number of the page to retrieve. Must be greater than zero.
    - id: pageSize
      type: System.Int32
      description: The number of items per page. Must be greater than zero.
    - id: searchOption
      type: System.String
      description: An optional search term to filter the haikus by title.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Models.AuthorHaiku}}
      description: A task that represents the asynchronous operation. The task result contains a collection of <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entities.
    content.vb: Public Function GetPaginatedAuthorHaikusAsync(pageNumber As Integer, pageSize As Integer, searchOption As String) As Task(Of IEnumerable(Of AuthorHaiku))
  overload: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync*
  implements:
  - Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  nameWithType.vb: AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  name.vb: GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  id: GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository
  langs:
  - csharp
  - vb
  name: GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  nameWithType: AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetPaginatedAuthorHaikusByAuthorIdAsync
    path: Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
    startLine: 47
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Repositories.AuthorHaikuRepositories
  summary: Retrieves a paginated list of <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entities for a specific author.
  example: []
  syntax:
    content: public Task<IEnumerable<AuthorHaiku>> GetPaginatedAuthorHaikusByAuthorIdAsync(long authorId, int pageNumber, int pageSize, string searchOption)
    parameters:
    - id: authorId
      type: System.Int64
      description: The ID of the author whose haikus are to be retrieved. Must be a valid identifier.
    - id: pageNumber
      type: System.Int32
      description: The number of the page to retrieve. Must be greater than zero.
    - id: pageSize
      type: System.Int32
      description: The number of items per page. Must be greater than zero.
    - id: searchOption
      type: System.String
      description: An optional search term to filter the haikus by title.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Models.AuthorHaiku}}
      description: A task that represents the asynchronous operation. The task result contains a collection of <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entities.
    content.vb: Public Function GetPaginatedAuthorHaikusByAuthorIdAsync(authorId As Long, pageNumber As Integer, pageSize As Integer, searchOption As String) As Task(Of IEnumerable(Of AuthorHaiku))
  overload: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync*
  implements:
  - Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  nameWithType.vb: AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  name.vb: GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  id: GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository
  langs:
  - csharp
  - vb
  name: GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  nameWithType: AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetTotalAuthorHaikusByAuthorIdAsync
    path: Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
    startLine: 71
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Repositories.AuthorHaikuRepositories
  summary: >-
    Retrieves the total count of <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entities associated with a specific author,

    optionally filtered by a search term for the title.
  example: []
  syntax:
    content: public Task<int> GetTotalAuthorHaikusByAuthorIdAsync(long authorId, string searchOption)
    parameters:
    - id: authorId
      type: System.Int64
      description: The ID of the author whose haikus are being counted. Must be a valid identifier.
    - id: searchOption
      type: System.String
      description: An optional search term to filter the haikus by title.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task that represents the asynchronous operation. The task result contains the total count of <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entities.
    content.vb: Public Function GetTotalAuthorHaikusByAuthorIdAsync(authorId As Long, searchOption As String) As Task(Of Integer)
  overload: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync*
  implements:
  - Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  nameWithType.vb: AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  name.vb: GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusAsync(System.String)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusAsync(System.String)
  id: GetTotalAuthorHaikusAsync(System.String)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository
  langs:
  - csharp
  - vb
  name: GetTotalAuthorHaikusAsync(string)
  nameWithType: AuthorHaikuRepository.GetTotalAuthorHaikusAsync(string)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusAsync(string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetTotalAuthorHaikusAsync
    path: Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
    startLine: 90
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Repositories.AuthorHaikuRepositories
  summary: >-
    Retrieves the total count of <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entities in the database,

    optionally filtered by a search term for the title.
  example: []
  syntax:
    content: public Task<int> GetTotalAuthorHaikusAsync(string searchOption)
    parameters:
    - id: searchOption
      type: System.String
      description: An optional search term to filter the haikus by title.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task that represents the asynchronous operation. The task result contains the total count of <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entities.
    content.vb: Public Function GetTotalAuthorHaikusAsync(searchOption As String) As Task(Of Integer)
  overload: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusAsync*
  implements:
  - Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusAsync(System.String)
  nameWithType.vb: AuthorHaikuRepository.GetTotalAuthorHaikusAsync(String)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusAsync(String)
  name.vb: GetTotalAuthorHaikusAsync(String)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetAuthorHaikuByIdAsync(System.Int64)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetAuthorHaikuByIdAsync(System.Int64)
  id: GetAuthorHaikuByIdAsync(System.Int64)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository
  langs:
  - csharp
  - vb
  name: GetAuthorHaikuByIdAsync(long)
  nameWithType: AuthorHaikuRepository.GetAuthorHaikuByIdAsync(long)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetAuthorHaikuByIdAsync(long)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetAuthorHaikuByIdAsync
    path: Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
    startLine: 107
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Repositories.AuthorHaikuRepositories
  summary: Retrieves an <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entity by its unique identifier.
  example: []
  syntax:
    content: public Task<AuthorHaiku?> GetAuthorHaikuByIdAsync(long authorHaikuId)
    parameters:
    - id: authorHaikuId
      type: System.Int64
      description: The unique identifier of the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> to retrieve.
    return:
      type: System.Threading.Tasks.Task{Haiku.API.Models.AuthorHaiku}
      description: A task that represents the asynchronous operation. The task result contains the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entity if found; otherwise, <code>null</code>.
    content.vb: Public Function GetAuthorHaikuByIdAsync(authorHaikuId As Long) As Task(Of AuthorHaiku)
  overload: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetAuthorHaikuByIdAsync*
  implements:
  - Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetAuthorHaikuByIdAsync(System.Int64)
  nameWithType.vb: AuthorHaikuRepository.GetAuthorHaikuByIdAsync(Long)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetAuthorHaikuByIdAsync(Long)
  name.vb: GetAuthorHaikuByIdAsync(Long)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AddAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AddAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  id: AddAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository
  langs:
  - csharp
  - vb
  name: AddAuthorHaikuAsync(AuthorHaiku)
  nameWithType: AuthorHaikuRepository.AddAuthorHaikuAsync(AuthorHaiku)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AddAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: AddAuthorHaikuAsync
    path: Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
    startLine: 117
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Repositories.AuthorHaikuRepositories
  summary: Adds a new <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> to the database asynchronously.
  example: []
  syntax:
    content: public Task<AuthorHaiku> AddAuthorHaikuAsync(AuthorHaiku newHaiku)
    parameters:
    - id: newHaiku
      type: Haiku.API.Models.AuthorHaiku
      description: The <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entity to be added.
    return:
      type: System.Threading.Tasks.Task{Haiku.API.Models.AuthorHaiku}
      description: A task that represents the asynchronous operation. The task result contains the added <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entity.
    content.vb: Public Function AddAuthorHaikuAsync(newHaiku As AuthorHaiku) As Task(Of AuthorHaiku)
  overload: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AddAuthorHaikuAsync*
  implements:
  - Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AddAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  id: UpdateAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository
  langs:
  - csharp
  - vb
  name: UpdateAuthorHaikuAsync(AuthorHaiku)
  nameWithType: AuthorHaikuRepository.UpdateAuthorHaikuAsync(AuthorHaiku)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: UpdateAuthorHaikuAsync
    path: Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
    startLine: 129
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Repositories.AuthorHaikuRepositories
  summary: Updates an existing <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> in the database asynchronously.
  example: []
  syntax:
    content: public Task<int> UpdateAuthorHaikuAsync(AuthorHaiku updatedAuthorHaiku)
    parameters:
    - id: updatedAuthorHaiku
      type: Haiku.API.Models.AuthorHaiku
      description: The <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entity with updated values.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task that represents the asynchronous operation. The task result contains the number of state entries written to the database.
    content.vb: Public Function UpdateAuthorHaikuAsync(updatedAuthorHaiku As AuthorHaiku) As Task(Of Integer)
  overload: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikuAsync*
  implements:
  - Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(System.Int64,System.Int64)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(System.Int64,System.Int64)
  id: UpdateAuthorHaikusToUnknownAuthorAsync(System.Int64,System.Int64)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository
  langs:
  - csharp
  - vb
  name: UpdateAuthorHaikusToUnknownAuthorAsync(long, long)
  nameWithType: AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(long, long)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(long, long)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: UpdateAuthorHaikusToUnknownAuthorAsync
    path: Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
    startLine: 143
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Repositories.AuthorHaikuRepositories
  summary: >-
    Updates the author ID of <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entities that have a specific old author ID 

    or are currently associated with an unknown author (null) to a new author ID asynchronously.
  example: []
  syntax:
    content: public Task<int> UpdateAuthorHaikusToUnknownAuthorAsync(long oldAuthorId, long newAuthorId)
    parameters:
    - id: oldAuthorId
      type: System.Int64
      description: The ID of the author whose haikus are being updated.
    - id: newAuthorId
      type: System.Int64
      description: The ID of the new author to associate with the haikus.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task that represents the asynchronous operation. The task result contains the number of affected rows in the database.
    content.vb: Public Function UpdateAuthorHaikusToUnknownAuthorAsync(oldAuthorId As Long, newAuthorId As Long) As Task(Of Integer)
  overload: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync*
  implements:
  - Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(System.Int64,System.Int64)
  nameWithType.vb: AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(Long, Long)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(Long, Long)
  name.vb: UpdateAuthorHaikusToUnknownAuthorAsync(Long, Long)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(System.Int64)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(System.Int64)
  id: DeleteAuthorHaikuByIdAsync(System.Int64)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository
  langs:
  - csharp
  - vb
  name: DeleteAuthorHaikuByIdAsync(long)
  nameWithType: AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(long)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(long)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: DeleteAuthorHaikuByIdAsync
    path: Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
    startLine: 158
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Repositories.AuthorHaikuRepositories
  summary: Deletes an <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entity by its ID asynchronously.
  example: []
  syntax:
    content: public Task<int> DeleteAuthorHaikuByIdAsync(long authorHaikuId)
    parameters:
    - id: authorHaikuId
      type: System.Int64
      description: The ID of the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entity to be deleted.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task that represents the asynchronous operation. The task result contains the number of affected rows in the database.
    content.vb: Public Function DeleteAuthorHaikuByIdAsync(authorHaikuId As Long) As Task(Of Integer)
  overload: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync*
  implements:
  - Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(System.Int64)
  nameWithType.vb: AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(Long)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(Long)
  name.vb: DeleteAuthorHaikuByIdAsync(Long)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuExistsByIdAsync(System.Int64)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuExistsByIdAsync(System.Int64)
  id: AuthorHaikuExistsByIdAsync(System.Int64)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository
  langs:
  - csharp
  - vb
  name: AuthorHaikuExistsByIdAsync(long)
  nameWithType: AuthorHaikuRepository.AuthorHaikuExistsByIdAsync(long)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuExistsByIdAsync(long)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: AuthorHaikuExistsByIdAsync
    path: Haiku.API/Repositories/AuthorHaikuRepositories/AuthorHaikuRepository.cs
    startLine: 174
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Repositories.AuthorHaikuRepositories
  summary: Checks if an <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entity exists by its ID asynchronously.
  example: []
  syntax:
    content: public Task<bool> AuthorHaikuExistsByIdAsync(long authorHaikuId)
    parameters:
    - id: authorHaikuId
      type: System.Int64
      description: The ID of the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> entity to check for existence.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation. The task result contains a boolean value indicating whether the <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref> exists.
    content.vb: Public Function AuthorHaikuExistsByIdAsync(authorHaikuId As Long) As Task(Of Boolean)
  overload: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuExistsByIdAsync*
  implements:
  - Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync(System.Int64)
  nameWithType.vb: AuthorHaikuRepository.AuthorHaikuExistsByIdAsync(Long)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuExistsByIdAsync(Long)
  name.vb: AuthorHaikuExistsByIdAsync(Long)
references:
- uid: Haiku.API.Repositories.AuthorHaikuRepositories
  commentId: N:Haiku.API.Repositories.AuthorHaikuRepositories
  href: Haiku.html
  name: Haiku.API.Repositories.AuthorHaikuRepositories
  nameWithType: Haiku.API.Repositories.AuthorHaikuRepositories
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Repositories
    name: Repositories
    href: Haiku.API.Repositories.html
  - name: .
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories
    name: AuthorHaikuRepositories
    href: Haiku.API.Repositories.AuthorHaikuRepositories.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Repositories
    name: Repositories
    href: Haiku.API.Repositories.html
  - name: .
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories
    name: AuthorHaikuRepositories
    href: Haiku.API.Repositories.AuthorHaikuRepositories.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  commentId: T:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  parent: Haiku.API.Repositories.AuthorHaikuRepositories
  href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html
  name: IAuthorHaikuRepository
  nameWithType: IAuthorHaikuRepository
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.#ctor*
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.#ctor
  href: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository__ctor_Haiku_API_Database_HaikuAPIContext_
  name: AuthorHaikuRepository
  nameWithType: AuthorHaikuRepository.AuthorHaikuRepository
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuRepository
  nameWithType.vb: AuthorHaikuRepository.New
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.New
  name.vb: New
- uid: Haiku.API.Database.HaikuAPIContext
  commentId: T:Haiku.API.Database.HaikuAPIContext
  parent: Haiku.API.Database
  href: Haiku.API.Database.HaikuAPIContext.html
  name: HaikuAPIContext
  nameWithType: HaikuAPIContext
  fullName: Haiku.API.Database.HaikuAPIContext
- uid: Haiku.API.Database
  commentId: N:Haiku.API.Database
  href: Haiku.html
  name: Haiku.API.Database
  nameWithType: Haiku.API.Database
  fullName: Haiku.API.Database
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Database
    name: Database
    href: Haiku.API.Database.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Database
    name: Database
    href: Haiku.API.Database.html
- uid: Haiku.API.Models.AuthorHaiku
  commentId: T:Haiku.API.Models.AuthorHaiku
  parent: Haiku.API.Models
  href: Haiku.API.Models.AuthorHaiku.html
  name: AuthorHaiku
  nameWithType: AuthorHaiku
  fullName: Haiku.API.Models.AuthorHaiku
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync*
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync
  href: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_GetPaginatedAuthorHaikusAsync_System_Int32_System_Int32_System_String_
  name: GetPaginatedAuthorHaikusAsync
  nameWithType: AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  isExternal: true
  href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetPaginatedAuthorHaikusAsync_System_Int32_System_Int32_System_String_
  name: GetPaginatedAuthorHaikusAsync(int, int, string)
  nameWithType: IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(int, int, string)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(int, int, string)
  nameWithType.vb: IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  name.vb: GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  spec.csharp:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
    name: GetPaginatedAuthorHaikusAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetPaginatedAuthorHaikusAsync_System_Int32_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
    name: GetPaginatedAuthorHaikusAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetPaginatedAuthorHaikusAsync_System_Int32_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Models.AuthorHaiku}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Models.AuthorHaiku}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<AuthorHaiku>>
  nameWithType: Task<IEnumerable<AuthorHaiku>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Haiku.API.Models.AuthorHaiku>>
  nameWithType.vb: Task(Of IEnumerable(Of AuthorHaiku))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Haiku.API.Models.AuthorHaiku))
  name.vb: Task(Of IEnumerable(Of AuthorHaiku))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Haiku.API.Models.AuthorHaiku
    name: AuthorHaiku
    href: Haiku.API.Models.AuthorHaiku.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Haiku.API.Models.AuthorHaiku
    name: AuthorHaiku
    href: Haiku.API.Models.AuthorHaiku.html
  - name: )
  - name: )
- uid: Haiku.API.Models
  commentId: N:Haiku.API.Models
  href: Haiku.html
  name: Haiku.API.Models
  nameWithType: Haiku.API.Models
  fullName: Haiku.API.Models
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Models
    name: Models
    href: Haiku.API.Models.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Models
    name: Models
    href: Haiku.API.Models.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync*
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync
  href: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_GetPaginatedAuthorHaikusByAuthorIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  name: GetPaginatedAuthorHaikusByAuthorIdAsync
  nameWithType: AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  isExternal: true
  href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetPaginatedAuthorHaikusByAuthorIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  name: GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  nameWithType: IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  nameWithType.vb: IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  name.vb: GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  spec.csharp:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
    name: GetPaginatedAuthorHaikusByAuthorIdAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetPaginatedAuthorHaikusByAuthorIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
    name: GetPaginatedAuthorHaikusByAuthorIdAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetPaginatedAuthorHaikusByAuthorIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync*
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync
  href: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_GetTotalAuthorHaikusByAuthorIdAsync_System_Int64_System_String_
  name: GetTotalAuthorHaikusByAuthorIdAsync
  nameWithType: AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  isExternal: true
  href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetTotalAuthorHaikusByAuthorIdAsync_System_Int64_System_String_
  name: GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  nameWithType: IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  nameWithType.vb: IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  name.vb: GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  spec.csharp:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
    name: GetTotalAuthorHaikusByAuthorIdAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetTotalAuthorHaikusByAuthorIdAsync_System_Int64_System_String_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
    name: GetTotalAuthorHaikusByAuthorIdAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetTotalAuthorHaikusByAuthorIdAsync_System_Int64_System_String_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusAsync*
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusAsync
  href: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_GetTotalAuthorHaikusAsync_System_String_
  name: GetTotalAuthorHaikusAsync
  nameWithType: AuthorHaikuRepository.GetTotalAuthorHaikusAsync
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusAsync(System.String)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusAsync(System.String)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  isExternal: true
  href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetTotalAuthorHaikusAsync_System_String_
  name: GetTotalAuthorHaikusAsync(string)
  nameWithType: IAuthorHaikuRepository.GetTotalAuthorHaikusAsync(string)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusAsync(string)
  nameWithType.vb: IAuthorHaikuRepository.GetTotalAuthorHaikusAsync(String)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusAsync(String)
  name.vb: GetTotalAuthorHaikusAsync(String)
  spec.csharp:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusAsync(System.String)
    name: GetTotalAuthorHaikusAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetTotalAuthorHaikusAsync_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusAsync(System.String)
    name: GetTotalAuthorHaikusAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetTotalAuthorHaikusAsync_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetAuthorHaikuByIdAsync*
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetAuthorHaikuByIdAsync
  href: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_GetAuthorHaikuByIdAsync_System_Int64_
  name: GetAuthorHaikuByIdAsync
  nameWithType: AuthorHaikuRepository.GetAuthorHaikuByIdAsync
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetAuthorHaikuByIdAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetAuthorHaikuByIdAsync(System.Int64)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetAuthorHaikuByIdAsync(System.Int64)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  isExternal: true
  href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetAuthorHaikuByIdAsync_System_Int64_
  name: GetAuthorHaikuByIdAsync(long)
  nameWithType: IAuthorHaikuRepository.GetAuthorHaikuByIdAsync(long)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetAuthorHaikuByIdAsync(long)
  nameWithType.vb: IAuthorHaikuRepository.GetAuthorHaikuByIdAsync(Long)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetAuthorHaikuByIdAsync(Long)
  name.vb: GetAuthorHaikuByIdAsync(Long)
  spec.csharp:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetAuthorHaikuByIdAsync(System.Int64)
    name: GetAuthorHaikuByIdAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetAuthorHaikuByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetAuthorHaikuByIdAsync(System.Int64)
    name: GetAuthorHaikuByIdAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetAuthorHaikuByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.Threading.Tasks.Task{Haiku.API.Models.AuthorHaiku}
  commentId: T:System.Threading.Tasks.Task{Haiku.API.Models.AuthorHaiku}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<AuthorHaiku>
  nameWithType: Task<AuthorHaiku>
  fullName: System.Threading.Tasks.Task<Haiku.API.Models.AuthorHaiku>
  nameWithType.vb: Task(Of AuthorHaiku)
  fullName.vb: System.Threading.Tasks.Task(Of Haiku.API.Models.AuthorHaiku)
  name.vb: Task(Of AuthorHaiku)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Haiku.API.Models.AuthorHaiku
    name: AuthorHaiku
    href: Haiku.API.Models.AuthorHaiku.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Haiku.API.Models.AuthorHaiku
    name: AuthorHaiku
    href: Haiku.API.Models.AuthorHaiku.html
  - name: )
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AddAuthorHaikuAsync*
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AddAuthorHaikuAsync
  href: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_AddAuthorHaikuAsync_Haiku_API_Models_AuthorHaiku_
  name: AddAuthorHaikuAsync
  nameWithType: AuthorHaikuRepository.AddAuthorHaikuAsync
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AddAuthorHaikuAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AddAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AddAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_AddAuthorHaikuAsync_Haiku_API_Models_AuthorHaiku_
  name: AddAuthorHaikuAsync(AuthorHaiku)
  nameWithType: IAuthorHaikuRepository.AddAuthorHaikuAsync(AuthorHaiku)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AddAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  spec.csharp:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AddAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
    name: AddAuthorHaikuAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_AddAuthorHaikuAsync_Haiku_API_Models_AuthorHaiku_
  - name: (
  - uid: Haiku.API.Models.AuthorHaiku
    name: AuthorHaiku
    href: Haiku.API.Models.AuthorHaiku.html
  - name: )
  spec.vb:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AddAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
    name: AddAuthorHaikuAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_AddAuthorHaikuAsync_Haiku_API_Models_AuthorHaiku_
  - name: (
  - uid: Haiku.API.Models.AuthorHaiku
    name: AuthorHaiku
    href: Haiku.API.Models.AuthorHaiku.html
  - name: )
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikuAsync*
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikuAsync
  href: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_UpdateAuthorHaikuAsync_Haiku_API_Models_AuthorHaiku_
  name: UpdateAuthorHaikuAsync
  nameWithType: AuthorHaikuRepository.UpdateAuthorHaikuAsync
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikuAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_UpdateAuthorHaikuAsync_Haiku_API_Models_AuthorHaiku_
  name: UpdateAuthorHaikuAsync(AuthorHaiku)
  nameWithType: IAuthorHaikuRepository.UpdateAuthorHaikuAsync(AuthorHaiku)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  spec.csharp:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
    name: UpdateAuthorHaikuAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_UpdateAuthorHaikuAsync_Haiku_API_Models_AuthorHaiku_
  - name: (
  - uid: Haiku.API.Models.AuthorHaiku
    name: AuthorHaiku
    href: Haiku.API.Models.AuthorHaiku.html
  - name: )
  spec.vb:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
    name: UpdateAuthorHaikuAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_UpdateAuthorHaikuAsync_Haiku_API_Models_AuthorHaiku_
  - name: (
  - uid: Haiku.API.Models.AuthorHaiku
    name: AuthorHaiku
    href: Haiku.API.Models.AuthorHaiku.html
  - name: )
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync*
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync
  href: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_UpdateAuthorHaikusToUnknownAuthorAsync_System_Int64_System_Int64_
  name: UpdateAuthorHaikusToUnknownAuthorAsync
  nameWithType: AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(System.Int64,System.Int64)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(System.Int64,System.Int64)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  isExternal: true
  href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_UpdateAuthorHaikusToUnknownAuthorAsync_System_Int64_System_Int64_
  name: UpdateAuthorHaikusToUnknownAuthorAsync(long, long)
  nameWithType: IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(long, long)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(long, long)
  nameWithType.vb: IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(Long, Long)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(Long, Long)
  name.vb: UpdateAuthorHaikusToUnknownAuthorAsync(Long, Long)
  spec.csharp:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(System.Int64,System.Int64)
    name: UpdateAuthorHaikusToUnknownAuthorAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_UpdateAuthorHaikusToUnknownAuthorAsync_System_Int64_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(System.Int64,System.Int64)
    name: UpdateAuthorHaikusToUnknownAuthorAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_UpdateAuthorHaikusToUnknownAuthorAsync_System_Int64_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync*
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync
  href: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_DeleteAuthorHaikuByIdAsync_System_Int64_
  name: DeleteAuthorHaikuByIdAsync
  nameWithType: AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(System.Int64)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(System.Int64)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  isExternal: true
  href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_DeleteAuthorHaikuByIdAsync_System_Int64_
  name: DeleteAuthorHaikuByIdAsync(long)
  nameWithType: IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(long)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(long)
  nameWithType.vb: IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(Long)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(Long)
  name.vb: DeleteAuthorHaikuByIdAsync(Long)
  spec.csharp:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(System.Int64)
    name: DeleteAuthorHaikuByIdAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_DeleteAuthorHaikuByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(System.Int64)
    name: DeleteAuthorHaikuByIdAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_DeleteAuthorHaikuByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuExistsByIdAsync*
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuExistsByIdAsync
  href: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_AuthorHaikuExistsByIdAsync_System_Int64_
  name: AuthorHaikuExistsByIdAsync
  nameWithType: AuthorHaikuRepository.AuthorHaikuExistsByIdAsync
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuExistsByIdAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync(System.Int64)
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync(System.Int64)
  parent: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  isExternal: true
  href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_AuthorHaikuExistsByIdAsync_System_Int64_
  name: AuthorHaikuExistsByIdAsync(long)
  nameWithType: IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync(long)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync(long)
  nameWithType.vb: IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync(Long)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync(Long)
  name.vb: AuthorHaikuExistsByIdAsync(Long)
  spec.csharp:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync(System.Int64)
    name: AuthorHaikuExistsByIdAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_AuthorHaikuExistsByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync(System.Int64)
    name: AuthorHaikuExistsByIdAsync
    href: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_AuthorHaikuExistsByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
