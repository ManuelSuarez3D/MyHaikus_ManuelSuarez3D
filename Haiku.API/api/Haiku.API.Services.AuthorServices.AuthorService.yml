### YamlMime:ManagedReference
items:
- uid: Haiku.API.Services.AuthorServices.AuthorService
  commentId: T:Haiku.API.Services.AuthorServices.AuthorService
  id: AuthorService
  parent: Haiku.API.Services.AuthorServices
  children:
  - Haiku.API.Services.AuthorServices.AuthorService.#ctor(Haiku.API.Repositories.AuthorRepositories.IAuthorRepository,Haiku.API.Utilities.IUnitOfWork,AutoMapper.IMapper)
  - Haiku.API.Services.AuthorServices.AuthorService.AddAuthorAsync(Haiku.API.Dtos.AuthorDto)
  - Haiku.API.Services.AuthorServices.AuthorService.AuthorExistsByIdAsync(System.Int64)
  - Haiku.API.Services.AuthorServices.AuthorService.DeleteAuthorByIdAsync(System.Int64)
  - Haiku.API.Services.AuthorServices.AuthorService.GetAuthorByIdAsync(System.Int64)
  - Haiku.API.Services.AuthorServices.AuthorService.GetPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
  - Haiku.API.Services.AuthorServices.AuthorService.GetTotalAuthorsAsync(System.String)
  - Haiku.API.Services.AuthorServices.AuthorService.UpdateAuthorAsync(System.Int64,Haiku.API.Dtos.AuthorDto)
  langs:
  - csharp
  - vb
  name: AuthorService
  nameWithType: AuthorService
  fullName: Haiku.API.Services.AuthorServices.AuthorService
  type: Class
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorServices/AuthorService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: AuthorService
    path: Haiku.API/Services/AuthorServices/AuthorService.cs
    startLine: 12
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorServices
  syntax:
    content: 'public class AuthorService : IAuthorService'
    content.vb: Public Class AuthorService Implements IAuthorService
  inheritance:
  - System.Object
  implements:
  - Haiku.API.Services.AuthorServices.IAuthorService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Haiku.API.Services.AuthorServices.AuthorService.#ctor(Haiku.API.Repositories.AuthorRepositories.IAuthorRepository,Haiku.API.Utilities.IUnitOfWork,AutoMapper.IMapper)
  commentId: M:Haiku.API.Services.AuthorServices.AuthorService.#ctor(Haiku.API.Repositories.AuthorRepositories.IAuthorRepository,Haiku.API.Utilities.IUnitOfWork,AutoMapper.IMapper)
  id: '#ctor(Haiku.API.Repositories.AuthorRepositories.IAuthorRepository,Haiku.API.Utilities.IUnitOfWork,AutoMapper.IMapper)'
  parent: Haiku.API.Services.AuthorServices.AuthorService
  langs:
  - csharp
  - vb
  name: AuthorService(IAuthorRepository, IUnitOfWork, IMapper)
  nameWithType: AuthorService.AuthorService(IAuthorRepository, IUnitOfWork, IMapper)
  fullName: Haiku.API.Services.AuthorServices.AuthorService.AuthorService(Haiku.API.Repositories.AuthorRepositories.IAuthorRepository, Haiku.API.Utilities.IUnitOfWork, AutoMapper.IMapper)
  type: Constructor
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorServices/AuthorService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: .ctor
    path: Haiku.API/Services/AuthorServices/AuthorService.cs
    startLine: 20
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorServices
  syntax:
    content: public AuthorService(IAuthorRepository authorRepository, IUnitOfWork unitOfWork, IMapper mapper)
    parameters:
    - id: authorRepository
      type: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository
    - id: unitOfWork
      type: Haiku.API.Utilities.IUnitOfWork
    - id: mapper
      type: AutoMapper.IMapper
    content.vb: Public Sub New(authorRepository As IAuthorRepository, unitOfWork As IUnitOfWork, mapper As IMapper)
  overload: Haiku.API.Services.AuthorServices.AuthorService.#ctor*
  nameWithType.vb: AuthorService.New(IAuthorRepository, IUnitOfWork, IMapper)
  fullName.vb: Haiku.API.Services.AuthorServices.AuthorService.New(Haiku.API.Repositories.AuthorRepositories.IAuthorRepository, Haiku.API.Utilities.IUnitOfWork, AutoMapper.IMapper)
  name.vb: New(IAuthorRepository, IUnitOfWork, IMapper)
- uid: Haiku.API.Services.AuthorServices.AuthorService.GetPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
  commentId: M:Haiku.API.Services.AuthorServices.AuthorService.GetPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
  id: GetPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
  parent: Haiku.API.Services.AuthorServices.AuthorService
  langs:
  - csharp
  - vb
  name: GetPaginatedAuthorsAsync(int, int, string)
  nameWithType: AuthorService.GetPaginatedAuthorsAsync(int, int, string)
  fullName: Haiku.API.Services.AuthorServices.AuthorService.GetPaginatedAuthorsAsync(int, int, string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorServices/AuthorService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetPaginatedAuthorsAsync
    path: Haiku.API/Services/AuthorServices/AuthorService.cs
    startLine: 34
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorServices
  summary: Retrieves a paginated list of <xref href="Haiku.API.Dtos.AuthorDto" data-throw-if-not-resolved="false"></xref>, optionally filtered by a search term.
  example: []
  syntax:
    content: public Task<IEnumerable<AuthorDto>> GetPaginatedAuthorsAsync(int pageNumber, int pageSize, string searchOption)
    parameters:
    - id: pageNumber
      type: System.Int32
      description: The page number to retrieve (1-based index).
    - id: pageSize
      type: System.Int32
      description: The number of <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> to return per page.
    - id: searchOption
      type: System.String
      description: An optional search term to filter <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> by their properties.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Dtos.AuthorDto}}
      description: A task that represents the asynchronous operation. The task result contains an enumerable collection of <xref href="Haiku.API.Dtos.AuthorDto" data-throw-if-not-resolved="false"></xref> objects.
    content.vb: Public Function GetPaginatedAuthorsAsync(pageNumber As Integer, pageSize As Integer, searchOption As String) As Task(Of IEnumerable(Of AuthorDto))
  overload: Haiku.API.Services.AuthorServices.AuthorService.GetPaginatedAuthorsAsync*
  implements:
  - Haiku.API.Services.AuthorServices.IAuthorService.GetPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
  nameWithType.vb: AuthorService.GetPaginatedAuthorsAsync(Integer, Integer, String)
  fullName.vb: Haiku.API.Services.AuthorServices.AuthorService.GetPaginatedAuthorsAsync(Integer, Integer, String)
  name.vb: GetPaginatedAuthorsAsync(Integer, Integer, String)
- uid: Haiku.API.Services.AuthorServices.AuthorService.GetTotalAuthorsAsync(System.String)
  commentId: M:Haiku.API.Services.AuthorServices.AuthorService.GetTotalAuthorsAsync(System.String)
  id: GetTotalAuthorsAsync(System.String)
  parent: Haiku.API.Services.AuthorServices.AuthorService
  langs:
  - csharp
  - vb
  name: GetTotalAuthorsAsync(string)
  nameWithType: AuthorService.GetTotalAuthorsAsync(string)
  fullName: Haiku.API.Services.AuthorServices.AuthorService.GetTotalAuthorsAsync(string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorServices/AuthorService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetTotalAuthorsAsync
    path: Haiku.API/Services/AuthorServices/AuthorService.cs
    startLine: 49
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorServices
  summary: Retrieves the total count of <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref>'s, optionally filtered by a search term.
  example: []
  syntax:
    content: public Task<int> GetTotalAuthorsAsync(string searchOption)
    parameters:
    - id: searchOption
      type: System.String
      description: An optional search term to filter the <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref>'s.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task that represents the asynchronous operation. The task result contains the total count of <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref>'s.
    content.vb: Public Function GetTotalAuthorsAsync(searchOption As String) As Task(Of Integer)
  overload: Haiku.API.Services.AuthorServices.AuthorService.GetTotalAuthorsAsync*
  implements:
  - Haiku.API.Services.AuthorServices.IAuthorService.GetTotalAuthorsAsync(System.String)
  nameWithType.vb: AuthorService.GetTotalAuthorsAsync(String)
  fullName.vb: Haiku.API.Services.AuthorServices.AuthorService.GetTotalAuthorsAsync(String)
  name.vb: GetTotalAuthorsAsync(String)
- uid: Haiku.API.Services.AuthorServices.AuthorService.GetAuthorByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.AuthorServices.AuthorService.GetAuthorByIdAsync(System.Int64)
  id: GetAuthorByIdAsync(System.Int64)
  parent: Haiku.API.Services.AuthorServices.AuthorService
  langs:
  - csharp
  - vb
  name: GetAuthorByIdAsync(long)
  nameWithType: AuthorService.GetAuthorByIdAsync(long)
  fullName: Haiku.API.Services.AuthorServices.AuthorService.GetAuthorByIdAsync(long)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorServices/AuthorService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetAuthorByIdAsync
    path: Haiku.API/Services/AuthorServices/AuthorService.cs
    startLine: 60
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorServices
  summary: Retrieves an <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> by their unique identifier.
  example: []
  syntax:
    content: public Task<AuthorDto> GetAuthorByIdAsync(long authorId)
    parameters:
    - id: authorId
      type: System.Int64
      description: The unique identifier of the <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> to retrieve.
    return:
      type: System.Threading.Tasks.Task{Haiku.API.Dtos.AuthorDto}
      description: A task that represents the asynchronous operation. The task result contains the corresponding <xref href="Haiku.API.Dtos.AuthorDto" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetAuthorByIdAsync(authorId As Long) As Task(Of AuthorDto)
  overload: Haiku.API.Services.AuthorServices.AuthorService.GetAuthorByIdAsync*
  exceptions:
  - type: Haiku.API.Exceptions.NotFoundException
    commentId: T:Haiku.API.Exceptions.NotFoundException
    description: Thrown when the <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> with the specified ID is not found.
  implements:
  - Haiku.API.Services.AuthorServices.IAuthorService.GetAuthorByIdAsync(System.Int64)
  nameWithType.vb: AuthorService.GetAuthorByIdAsync(Long)
  fullName.vb: Haiku.API.Services.AuthorServices.AuthorService.GetAuthorByIdAsync(Long)
  name.vb: GetAuthorByIdAsync(Long)
- uid: Haiku.API.Services.AuthorServices.AuthorService.AddAuthorAsync(Haiku.API.Dtos.AuthorDto)
  commentId: M:Haiku.API.Services.AuthorServices.AuthorService.AddAuthorAsync(Haiku.API.Dtos.AuthorDto)
  id: AddAuthorAsync(Haiku.API.Dtos.AuthorDto)
  parent: Haiku.API.Services.AuthorServices.AuthorService
  langs:
  - csharp
  - vb
  name: AddAuthorAsync(AuthorDto)
  nameWithType: AuthorService.AddAuthorAsync(AuthorDto)
  fullName: Haiku.API.Services.AuthorServices.AuthorService.AddAuthorAsync(Haiku.API.Dtos.AuthorDto)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorServices/AuthorService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: AddAuthorAsync
    path: Haiku.API/Services/AuthorServices/AuthorService.cs
    startLine: 78
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorServices
  summary: Adds a new author to the system.
  example: []
  syntax:
    content: public Task<AuthorDto> AddAuthorAsync(AuthorDto newAuthorDto)
    parameters:
    - id: newAuthorDto
      type: Haiku.API.Dtos.AuthorDto
      description: The DTO containing the details of the <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> to add.
    return:
      type: System.Threading.Tasks.Task{Haiku.API.Dtos.AuthorDto}
      description: A task that represents the asynchronous operation. The task result contains the corresponding <xref href="Haiku.API.Dtos.AuthorDto" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function AddAuthorAsync(newAuthorDto As AuthorDto) As Task(Of AuthorDto)
  overload: Haiku.API.Services.AuthorServices.AuthorService.AddAuthorAsync*
  exceptions:
  - type: Haiku.API.Exceptions.NotSavedException
    commentId: T:Haiku.API.Exceptions.NotSavedException
    description: Thrown when the <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> cannot be saved successfully.
  implements:
  - Haiku.API.Services.AuthorServices.IAuthorService.AddAuthorAsync(Haiku.API.Dtos.AuthorDto)
- uid: Haiku.API.Services.AuthorServices.AuthorService.UpdateAuthorAsync(System.Int64,Haiku.API.Dtos.AuthorDto)
  commentId: M:Haiku.API.Services.AuthorServices.AuthorService.UpdateAuthorAsync(System.Int64,Haiku.API.Dtos.AuthorDto)
  id: UpdateAuthorAsync(System.Int64,Haiku.API.Dtos.AuthorDto)
  parent: Haiku.API.Services.AuthorServices.AuthorService
  langs:
  - csharp
  - vb
  name: UpdateAuthorAsync(long, AuthorDto)
  nameWithType: AuthorService.UpdateAuthorAsync(long, AuthorDto)
  fullName: Haiku.API.Services.AuthorServices.AuthorService.UpdateAuthorAsync(long, Haiku.API.Dtos.AuthorDto)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorServices/AuthorService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: UpdateAuthorAsync
    path: Haiku.API/Services/AuthorServices/AuthorService.cs
    startLine: 100
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorServices
  summary: Updates an existing <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref>'s details in the system.
  example: []
  syntax:
    content: public Task UpdateAuthorAsync(long authorId, AuthorDto updatedAuthorDto)
    parameters:
    - id: authorId
      type: System.Int64
      description: The unique identifier of the <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> to update.
    - id: updatedAuthorDto
      type: Haiku.API.Dtos.AuthorDto
      description: The DTO containing the updated details of the <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function UpdateAuthorAsync(authorId As Long, updatedAuthorDto As AuthorDto) As Task
  overload: Haiku.API.Services.AuthorServices.AuthorService.UpdateAuthorAsync*
  exceptions:
  - type: Haiku.API.Exceptions.NotFoundException
    commentId: T:Haiku.API.Exceptions.NotFoundException
    description: Thrown when the <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> with the specified ID is not found.
  - type: Haiku.API.Exceptions.NotSavedException
    commentId: T:Haiku.API.Exceptions.NotSavedException
    description: Thrown when the <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref>'s details cannot be updated successfully.
  implements:
  - Haiku.API.Services.AuthorServices.IAuthorService.UpdateAuthorAsync(System.Int64,Haiku.API.Dtos.AuthorDto)
  nameWithType.vb: AuthorService.UpdateAuthorAsync(Long, AuthorDto)
  fullName.vb: Haiku.API.Services.AuthorServices.AuthorService.UpdateAuthorAsync(Long, Haiku.API.Dtos.AuthorDto)
  name.vb: UpdateAuthorAsync(Long, AuthorDto)
- uid: Haiku.API.Services.AuthorServices.AuthorService.DeleteAuthorByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.AuthorServices.AuthorService.DeleteAuthorByIdAsync(System.Int64)
  id: DeleteAuthorByIdAsync(System.Int64)
  parent: Haiku.API.Services.AuthorServices.AuthorService
  langs:
  - csharp
  - vb
  name: DeleteAuthorByIdAsync(long)
  nameWithType: AuthorService.DeleteAuthorByIdAsync(long)
  fullName: Haiku.API.Services.AuthorServices.AuthorService.DeleteAuthorByIdAsync(long)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorServices/AuthorService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: DeleteAuthorByIdAsync
    path: Haiku.API/Services/AuthorServices/AuthorService.cs
    startLine: 122
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorServices
  summary: Deletes an <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> by their unique identifier, along with handling their associated <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref>'s.
  example: []
  syntax:
    content: public Task DeleteAuthorByIdAsync(long authorId)
    parameters:
    - id: authorId
      type: System.Int64
      description: The unique identifier of the <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> to be deleted.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function DeleteAuthorByIdAsync(authorId As Long) As Task
  overload: Haiku.API.Services.AuthorServices.AuthorService.DeleteAuthorByIdAsync*
  exceptions:
  - type: Haiku.API.Exceptions.NotFoundException
    commentId: T:Haiku.API.Exceptions.NotFoundException
    description: Thrown when the <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> with the specified ID is not found. Or Default <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> is not found.
  - type: Haiku.API.Exceptions.NotSavedException
    commentId: T:Haiku.API.Exceptions.NotSavedException
    description: Thrown when not all associated <xref href="Haiku.API.Models.AuthorHaiku" data-throw-if-not-resolved="false"></xref>'s could be updated to the default <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> or when <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> was not deleted.
  implements:
  - Haiku.API.Services.AuthorServices.IAuthorService.DeleteAuthorByIdAsync(System.Int64)
  nameWithType.vb: AuthorService.DeleteAuthorByIdAsync(Long)
  fullName.vb: Haiku.API.Services.AuthorServices.AuthorService.DeleteAuthorByIdAsync(Long)
  name.vb: DeleteAuthorByIdAsync(Long)
- uid: Haiku.API.Services.AuthorServices.AuthorService.AuthorExistsByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.AuthorServices.AuthorService.AuthorExistsByIdAsync(System.Int64)
  id: AuthorExistsByIdAsync(System.Int64)
  parent: Haiku.API.Services.AuthorServices.AuthorService
  langs:
  - csharp
  - vb
  name: AuthorExistsByIdAsync(long)
  nameWithType: AuthorService.AuthorExistsByIdAsync(long)
  fullName: Haiku.API.Services.AuthorServices.AuthorService.AuthorExistsByIdAsync(long)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/AuthorServices/AuthorService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: AuthorExistsByIdAsync
    path: Haiku.API/Services/AuthorServices/AuthorService.cs
    startLine: 165
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.AuthorServices
  summary: Checks whether an <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> exists in the repository by their unique identifier.
  example: []
  syntax:
    content: public Task<bool> AuthorExistsByIdAsync(long authorId)
    parameters:
    - id: authorId
      type: System.Int64
      description: The unique identifier of the <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> to check.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation, containing a boolean value indicating whether the <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref> exists.
    content.vb: Public Function AuthorExistsByIdAsync(authorId As Long) As Task(Of Boolean)
  overload: Haiku.API.Services.AuthorServices.AuthorService.AuthorExistsByIdAsync*
  implements:
  - Haiku.API.Services.AuthorServices.IAuthorService.AuthorExistsByIdAsync(System.Int64)
  nameWithType.vb: AuthorService.AuthorExistsByIdAsync(Long)
  fullName.vb: Haiku.API.Services.AuthorServices.AuthorService.AuthorExistsByIdAsync(Long)
  name.vb: AuthorExistsByIdAsync(Long)
references:
- uid: Haiku.API.Services.AuthorServices
  commentId: N:Haiku.API.Services.AuthorServices
  href: Haiku.html
  name: Haiku.API.Services.AuthorServices
  nameWithType: Haiku.API.Services.AuthorServices
  fullName: Haiku.API.Services.AuthorServices
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Services
    name: Services
    href: Haiku.API.Services.html
  - name: .
  - uid: Haiku.API.Services.AuthorServices
    name: AuthorServices
    href: Haiku.API.Services.AuthorServices.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Services
    name: Services
    href: Haiku.API.Services.html
  - name: .
  - uid: Haiku.API.Services.AuthorServices
    name: AuthorServices
    href: Haiku.API.Services.AuthorServices.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Haiku.API.Services.AuthorServices.IAuthorService
  commentId: T:Haiku.API.Services.AuthorServices.IAuthorService
  parent: Haiku.API.Services.AuthorServices
  href: Haiku.API.Services.AuthorServices.IAuthorService.html
  name: IAuthorService
  nameWithType: IAuthorService
  fullName: Haiku.API.Services.AuthorServices.IAuthorService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Haiku.API.Services.AuthorServices.AuthorService.#ctor*
  commentId: Overload:Haiku.API.Services.AuthorServices.AuthorService.#ctor
  href: Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService__ctor_Haiku_API_Repositories_AuthorRepositories_IAuthorRepository_Haiku_API_Utilities_IUnitOfWork_AutoMapper_IMapper_
  name: AuthorService
  nameWithType: AuthorService.AuthorService
  fullName: Haiku.API.Services.AuthorServices.AuthorService.AuthorService
  nameWithType.vb: AuthorService.New
  fullName.vb: Haiku.API.Services.AuthorServices.AuthorService.New
  name.vb: New
- uid: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository
  commentId: T:Haiku.API.Repositories.AuthorRepositories.IAuthorRepository
  parent: Haiku.API.Repositories.AuthorRepositories
  href: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.html
  name: IAuthorRepository
  nameWithType: IAuthorRepository
  fullName: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository
- uid: Haiku.API.Utilities.IUnitOfWork
  commentId: T:Haiku.API.Utilities.IUnitOfWork
  parent: Haiku.API.Utilities
  href: Haiku.API.Utilities.IUnitOfWork.html
  name: IUnitOfWork
  nameWithType: IUnitOfWork
  fullName: Haiku.API.Utilities.IUnitOfWork
- uid: AutoMapper.IMapper
  commentId: T:AutoMapper.IMapper
  parent: AutoMapper
  isExternal: true
  name: IMapper
  nameWithType: IMapper
  fullName: AutoMapper.IMapper
- uid: Haiku.API.Repositories.AuthorRepositories
  commentId: N:Haiku.API.Repositories.AuthorRepositories
  href: Haiku.html
  name: Haiku.API.Repositories.AuthorRepositories
  nameWithType: Haiku.API.Repositories.AuthorRepositories
  fullName: Haiku.API.Repositories.AuthorRepositories
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Repositories
    name: Repositories
    href: Haiku.API.Repositories.html
  - name: .
  - uid: Haiku.API.Repositories.AuthorRepositories
    name: AuthorRepositories
    href: Haiku.API.Repositories.AuthorRepositories.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Repositories
    name: Repositories
    href: Haiku.API.Repositories.html
  - name: .
  - uid: Haiku.API.Repositories.AuthorRepositories
    name: AuthorRepositories
    href: Haiku.API.Repositories.AuthorRepositories.html
- uid: Haiku.API.Utilities
  commentId: N:Haiku.API.Utilities
  href: Haiku.html
  name: Haiku.API.Utilities
  nameWithType: Haiku.API.Utilities
  fullName: Haiku.API.Utilities
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Utilities
    name: Utilities
    href: Haiku.API.Utilities.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Utilities
    name: Utilities
    href: Haiku.API.Utilities.html
- uid: AutoMapper
  commentId: N:AutoMapper
  isExternal: true
  name: AutoMapper
  nameWithType: AutoMapper
  fullName: AutoMapper
- uid: Haiku.API.Dtos.AuthorDto
  commentId: T:Haiku.API.Dtos.AuthorDto
  parent: Haiku.API.Dtos
  href: Haiku.API.Dtos.AuthorDto.html
  name: AuthorDto
  nameWithType: AuthorDto
  fullName: Haiku.API.Dtos.AuthorDto
- uid: Haiku.API.Models.Author
  commentId: T:Haiku.API.Models.Author
  parent: Haiku.API.Models
  href: Haiku.API.Models.Author.html
  name: Author
  nameWithType: Author
  fullName: Haiku.API.Models.Author
- uid: Haiku.API.Services.AuthorServices.AuthorService.GetPaginatedAuthorsAsync*
  commentId: Overload:Haiku.API.Services.AuthorServices.AuthorService.GetPaginatedAuthorsAsync
  href: Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_GetPaginatedAuthorsAsync_System_Int32_System_Int32_System_String_
  name: GetPaginatedAuthorsAsync
  nameWithType: AuthorService.GetPaginatedAuthorsAsync
  fullName: Haiku.API.Services.AuthorServices.AuthorService.GetPaginatedAuthorsAsync
- uid: Haiku.API.Services.AuthorServices.IAuthorService.GetPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
  commentId: M:Haiku.API.Services.AuthorServices.IAuthorService.GetPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
  parent: Haiku.API.Services.AuthorServices.IAuthorService
  isExternal: true
  href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_GetPaginatedAuthorsAsync_System_Int32_System_Int32_System_String_
  name: GetPaginatedAuthorsAsync(int, int, string)
  nameWithType: IAuthorService.GetPaginatedAuthorsAsync(int, int, string)
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.GetPaginatedAuthorsAsync(int, int, string)
  nameWithType.vb: IAuthorService.GetPaginatedAuthorsAsync(Integer, Integer, String)
  fullName.vb: Haiku.API.Services.AuthorServices.IAuthorService.GetPaginatedAuthorsAsync(Integer, Integer, String)
  name.vb: GetPaginatedAuthorsAsync(Integer, Integer, String)
  spec.csharp:
  - uid: Haiku.API.Services.AuthorServices.IAuthorService.GetPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
    name: GetPaginatedAuthorsAsync
    href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_GetPaginatedAuthorsAsync_System_Int32_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.AuthorServices.IAuthorService.GetPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
    name: GetPaginatedAuthorsAsync
    href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_GetPaginatedAuthorsAsync_System_Int32_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Dtos.AuthorDto}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Dtos.AuthorDto}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<AuthorDto>>
  nameWithType: Task<IEnumerable<AuthorDto>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Haiku.API.Dtos.AuthorDto>>
  nameWithType.vb: Task(Of IEnumerable(Of AuthorDto))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Haiku.API.Dtos.AuthorDto))
  name.vb: Task(Of IEnumerable(Of AuthorDto))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Haiku.API.Dtos.AuthorDto
    name: AuthorDto
    href: Haiku.API.Dtos.AuthorDto.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Haiku.API.Dtos.AuthorDto
    name: AuthorDto
    href: Haiku.API.Dtos.AuthorDto.html
  - name: )
  - name: )
- uid: Haiku.API.Dtos
  commentId: N:Haiku.API.Dtos
  href: Haiku.html
  name: Haiku.API.Dtos
  nameWithType: Haiku.API.Dtos
  fullName: Haiku.API.Dtos
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Dtos
    name: Dtos
    href: Haiku.API.Dtos.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Dtos
    name: Dtos
    href: Haiku.API.Dtos.html
- uid: Haiku.API.Models
  commentId: N:Haiku.API.Models
  href: Haiku.html
  name: Haiku.API.Models
  nameWithType: Haiku.API.Models
  fullName: Haiku.API.Models
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Models
    name: Models
    href: Haiku.API.Models.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Models
    name: Models
    href: Haiku.API.Models.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Haiku.API.Services.AuthorServices.AuthorService.GetTotalAuthorsAsync*
  commentId: Overload:Haiku.API.Services.AuthorServices.AuthorService.GetTotalAuthorsAsync
  href: Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_GetTotalAuthorsAsync_System_String_
  name: GetTotalAuthorsAsync
  nameWithType: AuthorService.GetTotalAuthorsAsync
  fullName: Haiku.API.Services.AuthorServices.AuthorService.GetTotalAuthorsAsync
- uid: Haiku.API.Services.AuthorServices.IAuthorService.GetTotalAuthorsAsync(System.String)
  commentId: M:Haiku.API.Services.AuthorServices.IAuthorService.GetTotalAuthorsAsync(System.String)
  parent: Haiku.API.Services.AuthorServices.IAuthorService
  isExternal: true
  href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_GetTotalAuthorsAsync_System_String_
  name: GetTotalAuthorsAsync(string)
  nameWithType: IAuthorService.GetTotalAuthorsAsync(string)
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.GetTotalAuthorsAsync(string)
  nameWithType.vb: IAuthorService.GetTotalAuthorsAsync(String)
  fullName.vb: Haiku.API.Services.AuthorServices.IAuthorService.GetTotalAuthorsAsync(String)
  name.vb: GetTotalAuthorsAsync(String)
  spec.csharp:
  - uid: Haiku.API.Services.AuthorServices.IAuthorService.GetTotalAuthorsAsync(System.String)
    name: GetTotalAuthorsAsync
    href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_GetTotalAuthorsAsync_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.AuthorServices.IAuthorService.GetTotalAuthorsAsync(System.String)
    name: GetTotalAuthorsAsync
    href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_GetTotalAuthorsAsync_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Haiku.API.Exceptions.NotFoundException
  commentId: T:Haiku.API.Exceptions.NotFoundException
  href: Haiku.API.Exceptions.NotFoundException.html
  name: NotFoundException
  nameWithType: NotFoundException
  fullName: Haiku.API.Exceptions.NotFoundException
- uid: Haiku.API.Services.AuthorServices.AuthorService.GetAuthorByIdAsync*
  commentId: Overload:Haiku.API.Services.AuthorServices.AuthorService.GetAuthorByIdAsync
  href: Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_GetAuthorByIdAsync_System_Int64_
  name: GetAuthorByIdAsync
  nameWithType: AuthorService.GetAuthorByIdAsync
  fullName: Haiku.API.Services.AuthorServices.AuthorService.GetAuthorByIdAsync
- uid: Haiku.API.Services.AuthorServices.IAuthorService.GetAuthorByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.AuthorServices.IAuthorService.GetAuthorByIdAsync(System.Int64)
  parent: Haiku.API.Services.AuthorServices.IAuthorService
  isExternal: true
  href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_GetAuthorByIdAsync_System_Int64_
  name: GetAuthorByIdAsync(long)
  nameWithType: IAuthorService.GetAuthorByIdAsync(long)
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.GetAuthorByIdAsync(long)
  nameWithType.vb: IAuthorService.GetAuthorByIdAsync(Long)
  fullName.vb: Haiku.API.Services.AuthorServices.IAuthorService.GetAuthorByIdAsync(Long)
  name.vb: GetAuthorByIdAsync(Long)
  spec.csharp:
  - uid: Haiku.API.Services.AuthorServices.IAuthorService.GetAuthorByIdAsync(System.Int64)
    name: GetAuthorByIdAsync
    href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_GetAuthorByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.AuthorServices.IAuthorService.GetAuthorByIdAsync(System.Int64)
    name: GetAuthorByIdAsync
    href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_GetAuthorByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Threading.Tasks.Task{Haiku.API.Dtos.AuthorDto}
  commentId: T:System.Threading.Tasks.Task{Haiku.API.Dtos.AuthorDto}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<AuthorDto>
  nameWithType: Task<AuthorDto>
  fullName: System.Threading.Tasks.Task<Haiku.API.Dtos.AuthorDto>
  nameWithType.vb: Task(Of AuthorDto)
  fullName.vb: System.Threading.Tasks.Task(Of Haiku.API.Dtos.AuthorDto)
  name.vb: Task(Of AuthorDto)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Haiku.API.Dtos.AuthorDto
    name: AuthorDto
    href: Haiku.API.Dtos.AuthorDto.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Haiku.API.Dtos.AuthorDto
    name: AuthorDto
    href: Haiku.API.Dtos.AuthorDto.html
  - name: )
- uid: Haiku.API.Exceptions.NotSavedException
  commentId: T:Haiku.API.Exceptions.NotSavedException
  href: Haiku.API.Exceptions.NotSavedException.html
  name: NotSavedException
  nameWithType: NotSavedException
  fullName: Haiku.API.Exceptions.NotSavedException
- uid: Haiku.API.Services.AuthorServices.AuthorService.AddAuthorAsync*
  commentId: Overload:Haiku.API.Services.AuthorServices.AuthorService.AddAuthorAsync
  href: Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_AddAuthorAsync_Haiku_API_Dtos_AuthorDto_
  name: AddAuthorAsync
  nameWithType: AuthorService.AddAuthorAsync
  fullName: Haiku.API.Services.AuthorServices.AuthorService.AddAuthorAsync
- uid: Haiku.API.Services.AuthorServices.IAuthorService.AddAuthorAsync(Haiku.API.Dtos.AuthorDto)
  commentId: M:Haiku.API.Services.AuthorServices.IAuthorService.AddAuthorAsync(Haiku.API.Dtos.AuthorDto)
  parent: Haiku.API.Services.AuthorServices.IAuthorService
  href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_AddAuthorAsync_Haiku_API_Dtos_AuthorDto_
  name: AddAuthorAsync(AuthorDto)
  nameWithType: IAuthorService.AddAuthorAsync(AuthorDto)
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.AddAuthorAsync(Haiku.API.Dtos.AuthorDto)
  spec.csharp:
  - uid: Haiku.API.Services.AuthorServices.IAuthorService.AddAuthorAsync(Haiku.API.Dtos.AuthorDto)
    name: AddAuthorAsync
    href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_AddAuthorAsync_Haiku_API_Dtos_AuthorDto_
  - name: (
  - uid: Haiku.API.Dtos.AuthorDto
    name: AuthorDto
    href: Haiku.API.Dtos.AuthorDto.html
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.AuthorServices.IAuthorService.AddAuthorAsync(Haiku.API.Dtos.AuthorDto)
    name: AddAuthorAsync
    href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_AddAuthorAsync_Haiku_API_Dtos_AuthorDto_
  - name: (
  - uid: Haiku.API.Dtos.AuthorDto
    name: AuthorDto
    href: Haiku.API.Dtos.AuthorDto.html
  - name: )
- uid: Haiku.API.Services.AuthorServices.AuthorService.UpdateAuthorAsync*
  commentId: Overload:Haiku.API.Services.AuthorServices.AuthorService.UpdateAuthorAsync
  href: Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_UpdateAuthorAsync_System_Int64_Haiku_API_Dtos_AuthorDto_
  name: UpdateAuthorAsync
  nameWithType: AuthorService.UpdateAuthorAsync
  fullName: Haiku.API.Services.AuthorServices.AuthorService.UpdateAuthorAsync
- uid: Haiku.API.Services.AuthorServices.IAuthorService.UpdateAuthorAsync(System.Int64,Haiku.API.Dtos.AuthorDto)
  commentId: M:Haiku.API.Services.AuthorServices.IAuthorService.UpdateAuthorAsync(System.Int64,Haiku.API.Dtos.AuthorDto)
  parent: Haiku.API.Services.AuthorServices.IAuthorService
  isExternal: true
  href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_UpdateAuthorAsync_System_Int64_Haiku_API_Dtos_AuthorDto_
  name: UpdateAuthorAsync(long, AuthorDto)
  nameWithType: IAuthorService.UpdateAuthorAsync(long, AuthorDto)
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.UpdateAuthorAsync(long, Haiku.API.Dtos.AuthorDto)
  nameWithType.vb: IAuthorService.UpdateAuthorAsync(Long, AuthorDto)
  fullName.vb: Haiku.API.Services.AuthorServices.IAuthorService.UpdateAuthorAsync(Long, Haiku.API.Dtos.AuthorDto)
  name.vb: UpdateAuthorAsync(Long, AuthorDto)
  spec.csharp:
  - uid: Haiku.API.Services.AuthorServices.IAuthorService.UpdateAuthorAsync(System.Int64,Haiku.API.Dtos.AuthorDto)
    name: UpdateAuthorAsync
    href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_UpdateAuthorAsync_System_Int64_Haiku_API_Dtos_AuthorDto_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Haiku.API.Dtos.AuthorDto
    name: AuthorDto
    href: Haiku.API.Dtos.AuthorDto.html
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.AuthorServices.IAuthorService.UpdateAuthorAsync(System.Int64,Haiku.API.Dtos.AuthorDto)
    name: UpdateAuthorAsync
    href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_UpdateAuthorAsync_System_Int64_Haiku_API_Dtos_AuthorDto_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Haiku.API.Dtos.AuthorDto
    name: AuthorDto
    href: Haiku.API.Dtos.AuthorDto.html
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Haiku.API.Models.AuthorHaiku
  commentId: T:Haiku.API.Models.AuthorHaiku
  parent: Haiku.API.Models
  href: Haiku.API.Models.AuthorHaiku.html
  name: AuthorHaiku
  nameWithType: AuthorHaiku
  fullName: Haiku.API.Models.AuthorHaiku
- uid: Haiku.API.Services.AuthorServices.AuthorService.DeleteAuthorByIdAsync*
  commentId: Overload:Haiku.API.Services.AuthorServices.AuthorService.DeleteAuthorByIdAsync
  href: Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_DeleteAuthorByIdAsync_System_Int64_
  name: DeleteAuthorByIdAsync
  nameWithType: AuthorService.DeleteAuthorByIdAsync
  fullName: Haiku.API.Services.AuthorServices.AuthorService.DeleteAuthorByIdAsync
- uid: Haiku.API.Services.AuthorServices.IAuthorService.DeleteAuthorByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.AuthorServices.IAuthorService.DeleteAuthorByIdAsync(System.Int64)
  parent: Haiku.API.Services.AuthorServices.IAuthorService
  isExternal: true
  href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_DeleteAuthorByIdAsync_System_Int64_
  name: DeleteAuthorByIdAsync(long)
  nameWithType: IAuthorService.DeleteAuthorByIdAsync(long)
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.DeleteAuthorByIdAsync(long)
  nameWithType.vb: IAuthorService.DeleteAuthorByIdAsync(Long)
  fullName.vb: Haiku.API.Services.AuthorServices.IAuthorService.DeleteAuthorByIdAsync(Long)
  name.vb: DeleteAuthorByIdAsync(Long)
  spec.csharp:
  - uid: Haiku.API.Services.AuthorServices.IAuthorService.DeleteAuthorByIdAsync(System.Int64)
    name: DeleteAuthorByIdAsync
    href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_DeleteAuthorByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.AuthorServices.IAuthorService.DeleteAuthorByIdAsync(System.Int64)
    name: DeleteAuthorByIdAsync
    href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_DeleteAuthorByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: Haiku.API.Services.AuthorServices.AuthorService.AuthorExistsByIdAsync*
  commentId: Overload:Haiku.API.Services.AuthorServices.AuthorService.AuthorExistsByIdAsync
  href: Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_AuthorExistsByIdAsync_System_Int64_
  name: AuthorExistsByIdAsync
  nameWithType: AuthorService.AuthorExistsByIdAsync
  fullName: Haiku.API.Services.AuthorServices.AuthorService.AuthorExistsByIdAsync
- uid: Haiku.API.Services.AuthorServices.IAuthorService.AuthorExistsByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.AuthorServices.IAuthorService.AuthorExistsByIdAsync(System.Int64)
  parent: Haiku.API.Services.AuthorServices.IAuthorService
  isExternal: true
  href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_AuthorExistsByIdAsync_System_Int64_
  name: AuthorExistsByIdAsync(long)
  nameWithType: IAuthorService.AuthorExistsByIdAsync(long)
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.AuthorExistsByIdAsync(long)
  nameWithType.vb: IAuthorService.AuthorExistsByIdAsync(Long)
  fullName.vb: Haiku.API.Services.AuthorServices.IAuthorService.AuthorExistsByIdAsync(Long)
  name.vb: AuthorExistsByIdAsync(Long)
  spec.csharp:
  - uid: Haiku.API.Services.AuthorServices.IAuthorService.AuthorExistsByIdAsync(System.Int64)
    name: AuthorExistsByIdAsync
    href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_AuthorExistsByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.AuthorServices.IAuthorService.AuthorExistsByIdAsync(System.Int64)
    name: AuthorExistsByIdAsync
    href: Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_AuthorExistsByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
