### YamlMime:ManagedReference
items:
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService
  commentId: T:Haiku.API.Services.UserHaikuServices.UserHaikuService
  id: UserHaikuService
  parent: Haiku.API.Services.UserHaikuServices
  children:
  - Haiku.API.Services.UserHaikuServices.UserHaikuService.#ctor(Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository,Haiku.API.Services.UserServices.IUserService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.UserHaikuServices.UserHaikuService},AutoMapper.IMapper)
  - Haiku.API.Services.UserHaikuServices.UserHaikuService.AddUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
  - Haiku.API.Services.UserHaikuServices.UserHaikuService.DeleteUserHaikuByIdAsync(System.Int64)
  - Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusAsync(System.Int32,System.Int32,System.String)
  - Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  - Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusAsync(System.String)
  - Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusByUserIdAsync(System.Int64,System.String)
  - Haiku.API.Services.UserHaikuServices.UserHaikuService.GetUserHaikuByIdAsync(System.Int64)
  - Haiku.API.Services.UserHaikuServices.UserHaikuService.UpdateUserHaikuAsync(System.Int64,Haiku.API.Dtos.UserHaikuDto)
  - Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuExistsByIdAsync(System.Int64)
  langs:
  - csharp
  - vb
  name: UserHaikuService
  nameWithType: UserHaikuService
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService
  type: Class
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: UserHaikuService
    path: Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
    startLine: 9
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserHaikuServices
  syntax:
    content: 'public class UserHaikuService : IUserHaikuService'
    content.vb: Public Class UserHaikuService Implements IUserHaikuService
  inheritance:
  - System.Object
  implements:
  - Haiku.API.Services.UserHaikuServices.IUserHaikuService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.#ctor(Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository,Haiku.API.Services.UserServices.IUserService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.UserHaikuServices.UserHaikuService},AutoMapper.IMapper)
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.#ctor(Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository,Haiku.API.Services.UserServices.IUserService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.UserHaikuServices.UserHaikuService},AutoMapper.IMapper)
  id: '#ctor(Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository,Haiku.API.Services.UserServices.IUserService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.UserHaikuServices.UserHaikuService},AutoMapper.IMapper)'
  parent: Haiku.API.Services.UserHaikuServices.UserHaikuService
  langs:
  - csharp
  - vb
  name: UserHaikuService(IUserHaikuRepository, IUserService, ILogger<UserHaikuService>, IMapper)
  nameWithType: UserHaikuService.UserHaikuService(IUserHaikuRepository, IUserService, ILogger<UserHaikuService>, IMapper)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuService(Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository, Haiku.API.Services.UserServices.IUserService, Microsoft.Extensions.Logging.ILogger<Haiku.API.Services.UserHaikuServices.UserHaikuService>, AutoMapper.IMapper)
  type: Constructor
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: .ctor
    path: Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
    startLine: 16
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserHaikuServices
  syntax:
    content: public UserHaikuService(IUserHaikuRepository userHaikuRepository, IUserService userService, ILogger<UserHaikuService> logger, IMapper mapper)
    parameters:
    - id: userHaikuRepository
      type: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository
    - id: userService
      type: Haiku.API.Services.UserServices.IUserService
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.UserHaikuServices.UserHaikuService}
    - id: mapper
      type: AutoMapper.IMapper
    content.vb: Public Sub New(userHaikuRepository As IUserHaikuRepository, userService As IUserService, logger As ILogger(Of UserHaikuService), mapper As IMapper)
  overload: Haiku.API.Services.UserHaikuServices.UserHaikuService.#ctor*
  nameWithType.vb: UserHaikuService.New(IUserHaikuRepository, IUserService, ILogger(Of UserHaikuService), IMapper)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.New(Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository, Haiku.API.Services.UserServices.IUserService, Microsoft.Extensions.Logging.ILogger(Of Haiku.API.Services.UserHaikuServices.UserHaikuService), AutoMapper.IMapper)
  name.vb: New(IUserHaikuRepository, IUserService, ILogger(Of UserHaikuService), IMapper)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusAsync(System.Int32,System.Int32,System.String)
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusAsync(System.Int32,System.Int32,System.String)
  id: GetPaginatedUserHaikusAsync(System.Int32,System.Int32,System.String)
  parent: Haiku.API.Services.UserHaikuServices.UserHaikuService
  langs:
  - csharp
  - vb
  name: GetPaginatedUserHaikusAsync(int, int, string)
  nameWithType: UserHaikuService.GetPaginatedUserHaikusAsync(int, int, string)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusAsync(int, int, string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetPaginatedUserHaikusAsync
    path: Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
    startLine: 31
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserHaikuServices
  summary: Retrieves a paginated list of <xref href="Haiku.API.Dtos.UserHaikuDto" data-throw-if-not-resolved="false"></xref>'s based on the page number, page size, and optional search criteria.
  example: []
  syntax:
    content: public Task<IEnumerable<UserHaikuDto>> GetPaginatedUserHaikusAsync(int pageNumber, int pageSize, string searchOption)
    parameters:
    - id: pageNumber
      type: System.Int32
      description: The current page number. Defaults to 1 if a value less than 1 is provided.
    - id: pageSize
      type: System.Int32
      description: The number of items per page.
    - id: searchOption
      type: System.String
      description: An optional search string to filter <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref>'s by their title.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Dtos.UserHaikuDto}}
      description: A task that represents the asynchronous operation. The task result contains an <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> of paginated <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref>'s.
    content.vb: Public Function GetPaginatedUserHaikusAsync(pageNumber As Integer, pageSize As Integer, searchOption As String) As Task(Of IEnumerable(Of UserHaikuDto))
  overload: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusAsync*
  implements:
  - Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusAsync(System.Int32,System.Int32,System.String)
  nameWithType.vb: UserHaikuService.GetPaginatedUserHaikusAsync(Integer, Integer, String)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusAsync(Integer, Integer, String)
  name.vb: GetPaginatedUserHaikusAsync(Integer, Integer, String)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  id: GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  parent: Haiku.API.Services.UserHaikuServices.UserHaikuService
  langs:
  - csharp
  - vb
  name: GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  nameWithType: UserHaikuService.GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetPaginatedUserHaikusByUserIdAsync
    path: Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
    startLine: 49
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserHaikuServices
  summary: Retrieves a paginated list of <xref href="Haiku.API.Dtos.UserHaikuDto" data-throw-if-not-resolved="false"></xref>'s based on the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref>'s ID, page number, page size, and optional search criteria.
  example: []
  syntax:
    content: public Task<IEnumerable<UserHaikuDto>> GetPaginatedUserHaikusByUserIdAsync(long userId, int pageNumber, int pageSize, string searchOption)
    parameters:
    - id: userId
      type: System.Int64
      description: The ID of the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> whose <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref>'s are being retrieved.
    - id: pageNumber
      type: System.Int32
      description: The current page number. Defaults to 1 if a value less than 1 is provided.
    - id: pageSize
      type: System.Int32
      description: The number of items per page.
    - id: searchOption
      type: System.String
      description: An optional search string to filter <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref>'s by their title.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Dtos.UserHaikuDto}}
      description: A task that represents the asynchronous operation. The task result contains an <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> of paginated <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref>'s by the specified <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetPaginatedUserHaikusByUserIdAsync(userId As Long, pageNumber As Integer, pageSize As Integer, searchOption As String) As Task(Of IEnumerable(Of UserHaikuDto))
  overload: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusByUserIdAsync*
  implements:
  - Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  nameWithType.vb: UserHaikuService.GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
  name.vb: GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusByUserIdAsync(System.Int64,System.String)
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusByUserIdAsync(System.Int64,System.String)
  id: GetTotalUserHaikusByUserIdAsync(System.Int64,System.String)
  parent: Haiku.API.Services.UserHaikuServices.UserHaikuService
  langs:
  - csharp
  - vb
  name: GetTotalUserHaikusByUserIdAsync(long, string)
  nameWithType: UserHaikuService.GetTotalUserHaikusByUserIdAsync(long, string)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusByUserIdAsync(long, string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetTotalUserHaikusByUserIdAsync
    path: Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
    startLine: 67
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserHaikuServices
  summary: Retrieves the total count of <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref>'s associated with a specific <xref href="Haiku.API.Models.Author" data-throw-if-not-resolved="false"></xref>, filtered by an optional search criteria.
  example: []
  syntax:
    content: public Task<int> GetTotalUserHaikusByUserIdAsync(long userId, string searchOption)
    parameters:
    - id: userId
      type: System.Int64
      description: The ID of the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> whose <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref>'s are being counted.
    - id: searchOption
      type: System.String
      description: An optional search string to filter <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref>'s by their title.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task that represents the asynchronous operation. The task result contains the total number of <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref>'s  by the specified <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetTotalUserHaikusByUserIdAsync(userId As Long, searchOption As String) As Task(Of Integer)
  overload: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusByUserIdAsync*
  implements:
  - Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusByUserIdAsync(System.Int64,System.String)
  nameWithType.vb: UserHaikuService.GetTotalUserHaikusByUserIdAsync(Long, String)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusByUserIdAsync(Long, String)
  name.vb: GetTotalUserHaikusByUserIdAsync(Long, String)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusAsync(System.String)
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusAsync(System.String)
  id: GetTotalUserHaikusAsync(System.String)
  parent: Haiku.API.Services.UserHaikuServices.UserHaikuService
  langs:
  - csharp
  - vb
  name: GetTotalUserHaikusAsync(string)
  nameWithType: UserHaikuService.GetTotalUserHaikusAsync(string)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusAsync(string)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetTotalUserHaikusAsync
    path: Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
    startLine: 79
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserHaikuServices
  summary: Retrieves the total count of all <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref>'s, optionally filtered by a search string.
  example: []
  syntax:
    content: public Task<int> GetTotalUserHaikusAsync(string searchOption)
    parameters:
    - id: searchOption
      type: System.String
      description: An optional search string to filter <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref>'s by their title.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task that represents the asynchronous operation. The task result contains the total number of <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref>'s.
    content.vb: Public Function GetTotalUserHaikusAsync(searchOption As String) As Task(Of Integer)
  overload: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusAsync*
  implements:
  - Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusAsync(System.String)
  nameWithType.vb: UserHaikuService.GetTotalUserHaikusAsync(String)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusAsync(String)
  name.vb: GetTotalUserHaikusAsync(String)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetUserHaikuByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetUserHaikuByIdAsync(System.Int64)
  id: GetUserHaikuByIdAsync(System.Int64)
  parent: Haiku.API.Services.UserHaikuServices.UserHaikuService
  langs:
  - csharp
  - vb
  name: GetUserHaikuByIdAsync(long)
  nameWithType: UserHaikuService.GetUserHaikuByIdAsync(long)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetUserHaikuByIdAsync(long)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: GetUserHaikuByIdAsync
    path: Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
    startLine: 92
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserHaikuServices
  summary: Retrieves an <xref href="Haiku.API.Dtos.UserHaikuDto" data-throw-if-not-resolved="false"></xref> by its unique identifier.
  example: []
  syntax:
    content: public Task<UserHaikuDto> GetUserHaikuByIdAsync(long userHaikuId)
    parameters:
    - id: userHaikuId
      type: System.Int64
      description: The unique identifier of the <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref> to retrieve.
    return:
      type: System.Threading.Tasks.Task{Haiku.API.Dtos.UserHaikuDto}
      description: A task that represents the asynchronous operation. The task result contains the corresponding <xref href="Haiku.API.Dtos.UserHaikuDto" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetUserHaikuByIdAsync(userHaikuId As Long) As Task(Of UserHaikuDto)
  overload: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetUserHaikuByIdAsync*
  exceptions:
  - type: Haiku.API.Exceptions.NotFoundException
    commentId: T:Haiku.API.Exceptions.NotFoundException
    description: Thrown when the <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref> with the specified ID is not found.
  implements:
  - Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetUserHaikuByIdAsync(System.Int64)
  nameWithType.vb: UserHaikuService.GetUserHaikuByIdAsync(Long)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetUserHaikuByIdAsync(Long)
  name.vb: GetUserHaikuByIdAsync(Long)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.AddUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.AddUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
  id: AddUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
  parent: Haiku.API.Services.UserHaikuServices.UserHaikuService
  langs:
  - csharp
  - vb
  name: AddUserHaikuAsync(UserHaikuDto)
  nameWithType: UserHaikuService.AddUserHaikuAsync(UserHaikuDto)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.AddUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: AddUserHaikuAsync
    path: Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
    startLine: 112
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserHaikuServices
  summary: Adds a new <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref> to the repository.
  example: []
  syntax:
    content: public Task<UserHaikuDto> AddUserHaikuAsync(UserHaikuDto newUserHaikuDto)
    parameters:
    - id: newUserHaikuDto
      type: Haiku.API.Dtos.UserHaikuDto
      description: The DTO containing the details of the <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref> to add.
    return:
      type: System.Threading.Tasks.Task{Haiku.API.Dtos.UserHaikuDto}
      description: A task that represents the asynchronous operation. The task result contains the created <xref href="Haiku.API.Dtos.UserHaikuDto" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function AddUserHaikuAsync(newUserHaikuDto As UserHaikuDto) As Task(Of UserHaikuDto)
  overload: Haiku.API.Services.UserHaikuServices.UserHaikuService.AddUserHaikuAsync*
  exceptions:
  - type: Haiku.API.Exceptions.NotFoundException
    commentId: T:Haiku.API.Exceptions.NotFoundException
    description: Thrown when the <xref href="Haiku.API.Models.User" data-throw-if-not-resolved="false"></xref> with the specified ID is not found.
  - type: Haiku.API.Exceptions.NotSavedException
    commentId: T:Haiku.API.Exceptions.NotSavedException
    description: Thrown when the <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref> could be updated.
  implements:
  - Haiku.API.Services.UserHaikuServices.IUserHaikuService.AddUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.UpdateUserHaikuAsync(System.Int64,Haiku.API.Dtos.UserHaikuDto)
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.UpdateUserHaikuAsync(System.Int64,Haiku.API.Dtos.UserHaikuDto)
  id: UpdateUserHaikuAsync(System.Int64,Haiku.API.Dtos.UserHaikuDto)
  parent: Haiku.API.Services.UserHaikuServices.UserHaikuService
  langs:
  - csharp
  - vb
  name: UpdateUserHaikuAsync(long, UserHaikuDto)
  nameWithType: UserHaikuService.UpdateUserHaikuAsync(long, UserHaikuDto)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.UpdateUserHaikuAsync(long, Haiku.API.Dtos.UserHaikuDto)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: UpdateUserHaikuAsync
    path: Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
    startLine: 137
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserHaikuServices
  summary: Updates an existing <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref> in the repository.
  example: []
  syntax:
    content: public Task UpdateUserHaikuAsync(long userHaikuId, UserHaikuDto updatedUserHaikuDto)
    parameters:
    - id: userHaikuId
      type: System.Int64
      description: The ID of the <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref> to update.
    - id: updatedUserHaikuDto
      type: Haiku.API.Dtos.UserHaikuDto
      description: The DTO containing the updated details of the <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function UpdateUserHaikuAsync(userHaikuId As Long, updatedUserHaikuDto As UserHaikuDto) As Task
  overload: Haiku.API.Services.UserHaikuServices.UserHaikuService.UpdateUserHaikuAsync*
  exceptions:
  - type: Haiku.API.Exceptions.NotFoundException
    commentId: T:Haiku.API.Exceptions.NotFoundException
    description: Thrown when the <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref> with the specified ID is not found.
  - type: Haiku.API.Exceptions.NotSavedException
    commentId: T:Haiku.API.Exceptions.NotSavedException
    description: Thrown when the <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref> could not be updated.
  implements:
  - Haiku.API.Services.UserHaikuServices.IUserHaikuService.UpdateUserHaikuAsync(System.Int64,Haiku.API.Dtos.UserHaikuDto)
  nameWithType.vb: UserHaikuService.UpdateUserHaikuAsync(Long, UserHaikuDto)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.UpdateUserHaikuAsync(Long, Haiku.API.Dtos.UserHaikuDto)
  name.vb: UpdateUserHaikuAsync(Long, UserHaikuDto)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.DeleteUserHaikuByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.DeleteUserHaikuByIdAsync(System.Int64)
  id: DeleteUserHaikuByIdAsync(System.Int64)
  parent: Haiku.API.Services.UserHaikuServices.UserHaikuService
  langs:
  - csharp
  - vb
  name: DeleteUserHaikuByIdAsync(long)
  nameWithType: UserHaikuService.DeleteUserHaikuByIdAsync(long)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.DeleteUserHaikuByIdAsync(long)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: DeleteUserHaikuByIdAsync
    path: Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
    startLine: 159
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserHaikuServices
  summary: Deletes an <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref> from the repository by its ID.
  example: []
  syntax:
    content: public Task DeleteUserHaikuByIdAsync(long userHaikuId)
    parameters:
    - id: userHaikuId
      type: System.Int64
      description: The ID of the <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref> to delete.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function DeleteUserHaikuByIdAsync(userHaikuId As Long) As Task
  overload: Haiku.API.Services.UserHaikuServices.UserHaikuService.DeleteUserHaikuByIdAsync*
  exceptions:
  - type: Haiku.API.Exceptions.NotFoundException
    commentId: T:Haiku.API.Exceptions.NotFoundException
    description: Thrown when the <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref> with the specified ID is not found.
  - type: Haiku.API.Exceptions.NotSavedException
    commentId: T:Haiku.API.Exceptions.NotSavedException
    description: Thrown when the <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref> could not be deleted.
  implements:
  - Haiku.API.Services.UserHaikuServices.IUserHaikuService.DeleteUserHaikuByIdAsync(System.Int64)
  nameWithType.vb: UserHaikuService.DeleteUserHaikuByIdAsync(Long)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.DeleteUserHaikuByIdAsync(Long)
  name.vb: DeleteUserHaikuByIdAsync(Long)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuExistsByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuExistsByIdAsync(System.Int64)
  id: UserHaikuExistsByIdAsync(System.Int64)
  parent: Haiku.API.Services.UserHaikuServices.UserHaikuService
  langs:
  - csharp
  - vb
  name: UserHaikuExistsByIdAsync(long)
  nameWithType: UserHaikuService.UserHaikuExistsByIdAsync(long)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuExistsByIdAsync(long)
  type: Method
  source:
    remote:
      path: Haiku.API/Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
      branch: main
      repo: https://github.com/ManuelSuarez3D/MyHaikus_ManuelSuarez3D.git
    id: UserHaikuExistsByIdAsync
    path: Haiku.API/Services/UserHaikuServices/UserHaikuService.cs
    startLine: 178
  assemblies:
  - Haiku.API
  namespace: Haiku.API.Services.UserHaikuServices
  summary: Checks if an <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref> exists in the repository by its ID.
  example: []
  syntax:
    content: public Task<bool> UserHaikuExistsByIdAsync(long userHaikuId)
    parameters:
    - id: userHaikuId
      type: System.Int64
      description: The ID of the <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref> to check.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation. The task result contains a boolean value indicating whether the <xref href="Haiku.API.Models.UserHaiku" data-throw-if-not-resolved="false"></xref> exists.
    content.vb: Public Function UserHaikuExistsByIdAsync(userHaikuId As Long) As Task(Of Boolean)
  overload: Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuExistsByIdAsync*
  implements:
  - Haiku.API.Services.UserHaikuServices.IUserHaikuService.UserHaikuExistsByIdAsync(System.Int64)
  nameWithType.vb: UserHaikuService.UserHaikuExistsByIdAsync(Long)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuExistsByIdAsync(Long)
  name.vb: UserHaikuExistsByIdAsync(Long)
references:
- uid: Haiku.API.Services.UserHaikuServices
  commentId: N:Haiku.API.Services.UserHaikuServices
  href: Haiku.html
  name: Haiku.API.Services.UserHaikuServices
  nameWithType: Haiku.API.Services.UserHaikuServices
  fullName: Haiku.API.Services.UserHaikuServices
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Services
    name: Services
    href: Haiku.API.Services.html
  - name: .
  - uid: Haiku.API.Services.UserHaikuServices
    name: UserHaikuServices
    href: Haiku.API.Services.UserHaikuServices.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Services
    name: Services
    href: Haiku.API.Services.html
  - name: .
  - uid: Haiku.API.Services.UserHaikuServices
    name: UserHaikuServices
    href: Haiku.API.Services.UserHaikuServices.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService
  commentId: T:Haiku.API.Services.UserHaikuServices.IUserHaikuService
  parent: Haiku.API.Services.UserHaikuServices
  href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html
  name: IUserHaikuService
  nameWithType: IUserHaikuService
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.#ctor*
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.#ctor
  href: Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService__ctor_Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_Haiku_API_Services_UserServices_IUserService_Microsoft_Extensions_Logging_ILogger_Haiku_API_Services_UserHaikuServices_UserHaikuService__AutoMapper_IMapper_
  name: UserHaikuService
  nameWithType: UserHaikuService.UserHaikuService
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuService
  nameWithType.vb: UserHaikuService.New
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.New
  name.vb: New
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository
  commentId: T:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository
  parent: Haiku.API.Repositories.UserHaikuRepositories
  href: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html
  name: IUserHaikuRepository
  nameWithType: IUserHaikuRepository
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository
- uid: Haiku.API.Services.UserServices.IUserService
  commentId: T:Haiku.API.Services.UserServices.IUserService
  parent: Haiku.API.Services.UserServices
  href: Haiku.API.Services.UserServices.IUserService.html
  name: IUserService
  nameWithType: IUserService
  fullName: Haiku.API.Services.UserServices.IUserService
- uid: Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.UserHaikuServices.UserHaikuService}
  commentId: T:Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.UserHaikuServices.UserHaikuService}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<UserHaikuService>
  nameWithType: ILogger<UserHaikuService>
  fullName: Microsoft.Extensions.Logging.ILogger<Haiku.API.Services.UserHaikuServices.UserHaikuService>
  nameWithType.vb: ILogger(Of UserHaikuService)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of Haiku.API.Services.UserHaikuServices.UserHaikuService)
  name.vb: ILogger(Of UserHaikuService)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: Haiku.API.Services.UserHaikuServices.UserHaikuService
    name: UserHaikuService
    href: Haiku.API.Services.UserHaikuServices.UserHaikuService.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: Haiku.API.Services.UserHaikuServices.UserHaikuService
    name: UserHaikuService
    href: Haiku.API.Services.UserHaikuServices.UserHaikuService.html
  - name: )
- uid: AutoMapper.IMapper
  commentId: T:AutoMapper.IMapper
  parent: AutoMapper
  isExternal: true
  name: IMapper
  nameWithType: IMapper
  fullName: AutoMapper.IMapper
- uid: Haiku.API.Repositories.UserHaikuRepositories
  commentId: N:Haiku.API.Repositories.UserHaikuRepositories
  href: Haiku.html
  name: Haiku.API.Repositories.UserHaikuRepositories
  nameWithType: Haiku.API.Repositories.UserHaikuRepositories
  fullName: Haiku.API.Repositories.UserHaikuRepositories
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Repositories
    name: Repositories
    href: Haiku.API.Repositories.html
  - name: .
  - uid: Haiku.API.Repositories.UserHaikuRepositories
    name: UserHaikuRepositories
    href: Haiku.API.Repositories.UserHaikuRepositories.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Repositories
    name: Repositories
    href: Haiku.API.Repositories.html
  - name: .
  - uid: Haiku.API.Repositories.UserHaikuRepositories
    name: UserHaikuRepositories
    href: Haiku.API.Repositories.UserHaikuRepositories.html
- uid: Haiku.API.Services.UserServices
  commentId: N:Haiku.API.Services.UserServices
  href: Haiku.html
  name: Haiku.API.Services.UserServices
  nameWithType: Haiku.API.Services.UserServices
  fullName: Haiku.API.Services.UserServices
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Services
    name: Services
    href: Haiku.API.Services.html
  - name: .
  - uid: Haiku.API.Services.UserServices
    name: UserServices
    href: Haiku.API.Services.UserServices.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Services
    name: Services
    href: Haiku.API.Services.html
  - name: .
  - uid: Haiku.API.Services.UserServices
    name: UserServices
    href: Haiku.API.Services.UserServices.html
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: AutoMapper
  commentId: N:AutoMapper
  isExternal: true
  name: AutoMapper
  nameWithType: AutoMapper
  fullName: AutoMapper
- uid: Haiku.API.Dtos.UserHaikuDto
  commentId: T:Haiku.API.Dtos.UserHaikuDto
  parent: Haiku.API.Dtos
  href: Haiku.API.Dtos.UserHaikuDto.html
  name: UserHaikuDto
  nameWithType: UserHaikuDto
  fullName: Haiku.API.Dtos.UserHaikuDto
- uid: Haiku.API.Models.UserHaiku
  commentId: T:Haiku.API.Models.UserHaiku
  parent: Haiku.API.Models
  href: Haiku.API.Models.UserHaiku.html
  name: UserHaiku
  nameWithType: UserHaiku
  fullName: Haiku.API.Models.UserHaiku
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusAsync*
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusAsync
  href: Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_GetPaginatedUserHaikusAsync_System_Int32_System_Int32_System_String_
  name: GetPaginatedUserHaikusAsync
  nameWithType: UserHaikuService.GetPaginatedUserHaikusAsync
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusAsync
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusAsync(System.Int32,System.Int32,System.String)
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusAsync(System.Int32,System.Int32,System.String)
  parent: Haiku.API.Services.UserHaikuServices.IUserHaikuService
  isExternal: true
  href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetPaginatedUserHaikusAsync_System_Int32_System_Int32_System_String_
  name: GetPaginatedUserHaikusAsync(int, int, string)
  nameWithType: IUserHaikuService.GetPaginatedUserHaikusAsync(int, int, string)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusAsync(int, int, string)
  nameWithType.vb: IUserHaikuService.GetPaginatedUserHaikusAsync(Integer, Integer, String)
  fullName.vb: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusAsync(Integer, Integer, String)
  name.vb: GetPaginatedUserHaikusAsync(Integer, Integer, String)
  spec.csharp:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusAsync(System.Int32,System.Int32,System.String)
    name: GetPaginatedUserHaikusAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetPaginatedUserHaikusAsync_System_Int32_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusAsync(System.Int32,System.Int32,System.String)
    name: GetPaginatedUserHaikusAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetPaginatedUserHaikusAsync_System_Int32_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Dtos.UserHaikuDto}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Haiku.API.Dtos.UserHaikuDto}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<UserHaikuDto>>
  nameWithType: Task<IEnumerable<UserHaikuDto>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Haiku.API.Dtos.UserHaikuDto>>
  nameWithType.vb: Task(Of IEnumerable(Of UserHaikuDto))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Haiku.API.Dtos.UserHaikuDto))
  name.vb: Task(Of IEnumerable(Of UserHaikuDto))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Haiku.API.Dtos.UserHaikuDto
    name: UserHaikuDto
    href: Haiku.API.Dtos.UserHaikuDto.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Haiku.API.Dtos.UserHaikuDto
    name: UserHaikuDto
    href: Haiku.API.Dtos.UserHaikuDto.html
  - name: )
  - name: )
- uid: Haiku.API.Dtos
  commentId: N:Haiku.API.Dtos
  href: Haiku.html
  name: Haiku.API.Dtos
  nameWithType: Haiku.API.Dtos
  fullName: Haiku.API.Dtos
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Dtos
    name: Dtos
    href: Haiku.API.Dtos.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Dtos
    name: Dtos
    href: Haiku.API.Dtos.html
- uid: Haiku.API.Models
  commentId: N:Haiku.API.Models
  href: Haiku.html
  name: Haiku.API.Models
  nameWithType: Haiku.API.Models
  fullName: Haiku.API.Models
  spec.csharp:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Models
    name: Models
    href: Haiku.API.Models.html
  spec.vb:
  - uid: Haiku
    name: Haiku
    href: Haiku.html
  - name: .
  - uid: Haiku.API
    name: API
    href: Haiku.API.html
  - name: .
  - uid: Haiku.API.Models
    name: Models
    href: Haiku.API.Models.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Haiku.API.Models.User
  commentId: T:Haiku.API.Models.User
  parent: Haiku.API.Models
  href: Haiku.API.Models.User.html
  name: User
  nameWithType: User
  fullName: Haiku.API.Models.User
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusByUserIdAsync*
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusByUserIdAsync
  href: Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_GetPaginatedUserHaikusByUserIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  name: GetPaginatedUserHaikusByUserIdAsync
  nameWithType: UserHaikuService.GetPaginatedUserHaikusByUserIdAsync
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusByUserIdAsync
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  parent: Haiku.API.Services.UserHaikuServices.IUserHaikuService
  isExternal: true
  href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetPaginatedUserHaikusByUserIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  name: GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  nameWithType: IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  nameWithType.vb: IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
  fullName.vb: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
  name.vb: GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
  spec.csharp:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
    name: GetPaginatedUserHaikusByUserIdAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetPaginatedUserHaikusByUserIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
    name: GetPaginatedUserHaikusByUserIdAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetPaginatedUserHaikusByUserIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Haiku.API.Models.Author
  commentId: T:Haiku.API.Models.Author
  parent: Haiku.API.Models
  href: Haiku.API.Models.Author.html
  name: Author
  nameWithType: Author
  fullName: Haiku.API.Models.Author
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusByUserIdAsync*
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusByUserIdAsync
  href: Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_GetTotalUserHaikusByUserIdAsync_System_Int64_System_String_
  name: GetTotalUserHaikusByUserIdAsync
  nameWithType: UserHaikuService.GetTotalUserHaikusByUserIdAsync
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusByUserIdAsync
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusByUserIdAsync(System.Int64,System.String)
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusByUserIdAsync(System.Int64,System.String)
  parent: Haiku.API.Services.UserHaikuServices.IUserHaikuService
  isExternal: true
  href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetTotalUserHaikusByUserIdAsync_System_Int64_System_String_
  name: GetTotalUserHaikusByUserIdAsync(long, string)
  nameWithType: IUserHaikuService.GetTotalUserHaikusByUserIdAsync(long, string)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusByUserIdAsync(long, string)
  nameWithType.vb: IUserHaikuService.GetTotalUserHaikusByUserIdAsync(Long, String)
  fullName.vb: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusByUserIdAsync(Long, String)
  name.vb: GetTotalUserHaikusByUserIdAsync(Long, String)
  spec.csharp:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusByUserIdAsync(System.Int64,System.String)
    name: GetTotalUserHaikusByUserIdAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetTotalUserHaikusByUserIdAsync_System_Int64_System_String_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusByUserIdAsync(System.Int64,System.String)
    name: GetTotalUserHaikusByUserIdAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetTotalUserHaikusByUserIdAsync_System_Int64_System_String_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusAsync*
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusAsync
  href: Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_GetTotalUserHaikusAsync_System_String_
  name: GetTotalUserHaikusAsync
  nameWithType: UserHaikuService.GetTotalUserHaikusAsync
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusAsync
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusAsync(System.String)
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusAsync(System.String)
  parent: Haiku.API.Services.UserHaikuServices.IUserHaikuService
  isExternal: true
  href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetTotalUserHaikusAsync_System_String_
  name: GetTotalUserHaikusAsync(string)
  nameWithType: IUserHaikuService.GetTotalUserHaikusAsync(string)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusAsync(string)
  nameWithType.vb: IUserHaikuService.GetTotalUserHaikusAsync(String)
  fullName.vb: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusAsync(String)
  name.vb: GetTotalUserHaikusAsync(String)
  spec.csharp:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusAsync(System.String)
    name: GetTotalUserHaikusAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetTotalUserHaikusAsync_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusAsync(System.String)
    name: GetTotalUserHaikusAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetTotalUserHaikusAsync_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Haiku.API.Exceptions.NotFoundException
  commentId: T:Haiku.API.Exceptions.NotFoundException
  href: Haiku.API.Exceptions.NotFoundException.html
  name: NotFoundException
  nameWithType: NotFoundException
  fullName: Haiku.API.Exceptions.NotFoundException
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetUserHaikuByIdAsync*
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetUserHaikuByIdAsync
  href: Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_GetUserHaikuByIdAsync_System_Int64_
  name: GetUserHaikuByIdAsync
  nameWithType: UserHaikuService.GetUserHaikuByIdAsync
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetUserHaikuByIdAsync
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetUserHaikuByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetUserHaikuByIdAsync(System.Int64)
  parent: Haiku.API.Services.UserHaikuServices.IUserHaikuService
  isExternal: true
  href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetUserHaikuByIdAsync_System_Int64_
  name: GetUserHaikuByIdAsync(long)
  nameWithType: IUserHaikuService.GetUserHaikuByIdAsync(long)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetUserHaikuByIdAsync(long)
  nameWithType.vb: IUserHaikuService.GetUserHaikuByIdAsync(Long)
  fullName.vb: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetUserHaikuByIdAsync(Long)
  name.vb: GetUserHaikuByIdAsync(Long)
  spec.csharp:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetUserHaikuByIdAsync(System.Int64)
    name: GetUserHaikuByIdAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetUserHaikuByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetUserHaikuByIdAsync(System.Int64)
    name: GetUserHaikuByIdAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetUserHaikuByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.Threading.Tasks.Task{Haiku.API.Dtos.UserHaikuDto}
  commentId: T:System.Threading.Tasks.Task{Haiku.API.Dtos.UserHaikuDto}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UserHaikuDto>
  nameWithType: Task<UserHaikuDto>
  fullName: System.Threading.Tasks.Task<Haiku.API.Dtos.UserHaikuDto>
  nameWithType.vb: Task(Of UserHaikuDto)
  fullName.vb: System.Threading.Tasks.Task(Of Haiku.API.Dtos.UserHaikuDto)
  name.vb: Task(Of UserHaikuDto)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Haiku.API.Dtos.UserHaikuDto
    name: UserHaikuDto
    href: Haiku.API.Dtos.UserHaikuDto.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Haiku.API.Dtos.UserHaikuDto
    name: UserHaikuDto
    href: Haiku.API.Dtos.UserHaikuDto.html
  - name: )
- uid: Haiku.API.Exceptions.NotSavedException
  commentId: T:Haiku.API.Exceptions.NotSavedException
  href: Haiku.API.Exceptions.NotSavedException.html
  name: NotSavedException
  nameWithType: NotSavedException
  fullName: Haiku.API.Exceptions.NotSavedException
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.AddUserHaikuAsync*
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.AddUserHaikuAsync
  href: Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_AddUserHaikuAsync_Haiku_API_Dtos_UserHaikuDto_
  name: AddUserHaikuAsync
  nameWithType: UserHaikuService.AddUserHaikuAsync
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.AddUserHaikuAsync
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.AddUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.AddUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
  parent: Haiku.API.Services.UserHaikuServices.IUserHaikuService
  href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_AddUserHaikuAsync_Haiku_API_Dtos_UserHaikuDto_
  name: AddUserHaikuAsync(UserHaikuDto)
  nameWithType: IUserHaikuService.AddUserHaikuAsync(UserHaikuDto)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.AddUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
  spec.csharp:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.AddUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
    name: AddUserHaikuAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_AddUserHaikuAsync_Haiku_API_Dtos_UserHaikuDto_
  - name: (
  - uid: Haiku.API.Dtos.UserHaikuDto
    name: UserHaikuDto
    href: Haiku.API.Dtos.UserHaikuDto.html
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.AddUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
    name: AddUserHaikuAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_AddUserHaikuAsync_Haiku_API_Dtos_UserHaikuDto_
  - name: (
  - uid: Haiku.API.Dtos.UserHaikuDto
    name: UserHaikuDto
    href: Haiku.API.Dtos.UserHaikuDto.html
  - name: )
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.UpdateUserHaikuAsync*
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.UpdateUserHaikuAsync
  href: Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_UpdateUserHaikuAsync_System_Int64_Haiku_API_Dtos_UserHaikuDto_
  name: UpdateUserHaikuAsync
  nameWithType: UserHaikuService.UpdateUserHaikuAsync
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.UpdateUserHaikuAsync
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UpdateUserHaikuAsync(System.Int64,Haiku.API.Dtos.UserHaikuDto)
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.UpdateUserHaikuAsync(System.Int64,Haiku.API.Dtos.UserHaikuDto)
  parent: Haiku.API.Services.UserHaikuServices.IUserHaikuService
  isExternal: true
  href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_UpdateUserHaikuAsync_System_Int64_Haiku_API_Dtos_UserHaikuDto_
  name: UpdateUserHaikuAsync(long, UserHaikuDto)
  nameWithType: IUserHaikuService.UpdateUserHaikuAsync(long, UserHaikuDto)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UpdateUserHaikuAsync(long, Haiku.API.Dtos.UserHaikuDto)
  nameWithType.vb: IUserHaikuService.UpdateUserHaikuAsync(Long, UserHaikuDto)
  fullName.vb: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UpdateUserHaikuAsync(Long, Haiku.API.Dtos.UserHaikuDto)
  name.vb: UpdateUserHaikuAsync(Long, UserHaikuDto)
  spec.csharp:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UpdateUserHaikuAsync(System.Int64,Haiku.API.Dtos.UserHaikuDto)
    name: UpdateUserHaikuAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_UpdateUserHaikuAsync_System_Int64_Haiku_API_Dtos_UserHaikuDto_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Haiku.API.Dtos.UserHaikuDto
    name: UserHaikuDto
    href: Haiku.API.Dtos.UserHaikuDto.html
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UpdateUserHaikuAsync(System.Int64,Haiku.API.Dtos.UserHaikuDto)
    name: UpdateUserHaikuAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_UpdateUserHaikuAsync_System_Int64_Haiku_API_Dtos_UserHaikuDto_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Haiku.API.Dtos.UserHaikuDto
    name: UserHaikuDto
    href: Haiku.API.Dtos.UserHaikuDto.html
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.DeleteUserHaikuByIdAsync*
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.DeleteUserHaikuByIdAsync
  href: Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_DeleteUserHaikuByIdAsync_System_Int64_
  name: DeleteUserHaikuByIdAsync
  nameWithType: UserHaikuService.DeleteUserHaikuByIdAsync
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.DeleteUserHaikuByIdAsync
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.DeleteUserHaikuByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.DeleteUserHaikuByIdAsync(System.Int64)
  parent: Haiku.API.Services.UserHaikuServices.IUserHaikuService
  isExternal: true
  href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_DeleteUserHaikuByIdAsync_System_Int64_
  name: DeleteUserHaikuByIdAsync(long)
  nameWithType: IUserHaikuService.DeleteUserHaikuByIdAsync(long)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.DeleteUserHaikuByIdAsync(long)
  nameWithType.vb: IUserHaikuService.DeleteUserHaikuByIdAsync(Long)
  fullName.vb: Haiku.API.Services.UserHaikuServices.IUserHaikuService.DeleteUserHaikuByIdAsync(Long)
  name.vb: DeleteUserHaikuByIdAsync(Long)
  spec.csharp:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.DeleteUserHaikuByIdAsync(System.Int64)
    name: DeleteUserHaikuByIdAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_DeleteUserHaikuByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.DeleteUserHaikuByIdAsync(System.Int64)
    name: DeleteUserHaikuByIdAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_DeleteUserHaikuByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuExistsByIdAsync*
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuExistsByIdAsync
  href: Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_UserHaikuExistsByIdAsync_System_Int64_
  name: UserHaikuExistsByIdAsync
  nameWithType: UserHaikuService.UserHaikuExistsByIdAsync
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuExistsByIdAsync
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UserHaikuExistsByIdAsync(System.Int64)
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.UserHaikuExistsByIdAsync(System.Int64)
  parent: Haiku.API.Services.UserHaikuServices.IUserHaikuService
  isExternal: true
  href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_UserHaikuExistsByIdAsync_System_Int64_
  name: UserHaikuExistsByIdAsync(long)
  nameWithType: IUserHaikuService.UserHaikuExistsByIdAsync(long)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UserHaikuExistsByIdAsync(long)
  nameWithType.vb: IUserHaikuService.UserHaikuExistsByIdAsync(Long)
  fullName.vb: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UserHaikuExistsByIdAsync(Long)
  name.vb: UserHaikuExistsByIdAsync(Long)
  spec.csharp:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UserHaikuExistsByIdAsync(System.Int64)
    name: UserHaikuExistsByIdAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_UserHaikuExistsByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UserHaikuExistsByIdAsync(System.Int64)
    name: UserHaikuExistsByIdAsync
    href: Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_UserHaikuExistsByIdAsync_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
