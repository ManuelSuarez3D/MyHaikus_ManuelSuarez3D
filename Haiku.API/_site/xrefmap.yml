### YamlMime:XRefMap
sorted: true
references:
- uid: AuthorHaikuApi.Tests.UnitTests
  name: AuthorHaikuApi.Tests.UnitTests
  href: api/AuthorHaikuApi.Tests.UnitTests.html
  commentId: N:AuthorHaikuApi.Tests.UnitTests
  fullName: AuthorHaikuApi.Tests.UnitTests
  nameWithType: AuthorHaikuApi.Tests.UnitTests
- uid: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests
  name: AuthorHaikuServiceTests
  href: api/AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.html
  commentId: T:AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests
  fullName: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests
  nameWithType: AuthorHaikuServiceTests
- uid: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  name: AuthorHaikuServiceTests(ITestOutputHelper)
  href: api/AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.html#AuthorHaikuApi_Tests_UnitTests_AuthorHaikuServiceTests__ctor_Xunit_Abstractions_ITestOutputHelper_
  commentId: M:AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  name.vb: New(ITestOutputHelper)
  fullName: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.AuthorHaikuServiceTests(Xunit.Abstractions.ITestOutputHelper)
  fullName.vb: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.New(Xunit.Abstractions.ITestOutputHelper)
  nameWithType: AuthorHaikuServiceTests.AuthorHaikuServiceTests(ITestOutputHelper)
  nameWithType.vb: AuthorHaikuServiceTests.New(ITestOutputHelper)
- uid: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.#ctor*
  name: AuthorHaikuServiceTests
  href: api/AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.html#AuthorHaikuApi_Tests_UnitTests_AuthorHaikuServiceTests__ctor_
  commentId: Overload:AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.AuthorHaikuServiceTests
  fullName.vb: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.New
  nameWithType: AuthorHaikuServiceTests.AuthorHaikuServiceTests
  nameWithType.vb: AuthorHaikuServiceTests.New
- uid: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.CreateAuthorHaikuAsync_AddAuthorHaiku
  name: CreateAuthorHaikuAsync_AddAuthorHaiku()
  href: api/AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.html#AuthorHaikuApi_Tests_UnitTests_AuthorHaikuServiceTests_CreateAuthorHaikuAsync_AddAuthorHaiku
  commentId: M:AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.CreateAuthorHaikuAsync_AddAuthorHaiku
  fullName: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.CreateAuthorHaikuAsync_AddAuthorHaiku()
  nameWithType: AuthorHaikuServiceTests.CreateAuthorHaikuAsync_AddAuthorHaiku()
- uid: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.CreateAuthorHaikuAsync_AddAuthorHaiku*
  name: CreateAuthorHaikuAsync_AddAuthorHaiku
  href: api/AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.html#AuthorHaikuApi_Tests_UnitTests_AuthorHaikuServiceTests_CreateAuthorHaikuAsync_AddAuthorHaiku_
  commentId: Overload:AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.CreateAuthorHaikuAsync_AddAuthorHaiku
  isSpec: "True"
  fullName: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.CreateAuthorHaikuAsync_AddAuthorHaiku
  nameWithType: AuthorHaikuServiceTests.CreateAuthorHaikuAsync_AddAuthorHaiku
- uid: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.DeleteAuthorHaikuAsync_DeleteAuthorHaiku
  name: DeleteAuthorHaikuAsync_DeleteAuthorHaiku()
  href: api/AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.html#AuthorHaikuApi_Tests_UnitTests_AuthorHaikuServiceTests_DeleteAuthorHaikuAsync_DeleteAuthorHaiku
  commentId: M:AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.DeleteAuthorHaikuAsync_DeleteAuthorHaiku
  fullName: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.DeleteAuthorHaikuAsync_DeleteAuthorHaiku()
  nameWithType: AuthorHaikuServiceTests.DeleteAuthorHaikuAsync_DeleteAuthorHaiku()
- uid: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.DeleteAuthorHaikuAsync_DeleteAuthorHaiku*
  name: DeleteAuthorHaikuAsync_DeleteAuthorHaiku
  href: api/AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.html#AuthorHaikuApi_Tests_UnitTests_AuthorHaikuServiceTests_DeleteAuthorHaikuAsync_DeleteAuthorHaiku_
  commentId: Overload:AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.DeleteAuthorHaikuAsync_DeleteAuthorHaiku
  isSpec: "True"
  fullName: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.DeleteAuthorHaikuAsync_DeleteAuthorHaiku
  nameWithType: AuthorHaikuServiceTests.DeleteAuthorHaikuAsync_DeleteAuthorHaiku
- uid: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.GetAuthorHaikuAsync_ReturnAuthorHaiku
  name: GetAuthorHaikuAsync_ReturnAuthorHaiku()
  href: api/AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.html#AuthorHaikuApi_Tests_UnitTests_AuthorHaikuServiceTests_GetAuthorHaikuAsync_ReturnAuthorHaiku
  commentId: M:AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.GetAuthorHaikuAsync_ReturnAuthorHaiku
  fullName: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.GetAuthorHaikuAsync_ReturnAuthorHaiku()
  nameWithType: AuthorHaikuServiceTests.GetAuthorHaikuAsync_ReturnAuthorHaiku()
- uid: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.GetAuthorHaikuAsync_ReturnAuthorHaiku*
  name: GetAuthorHaikuAsync_ReturnAuthorHaiku
  href: api/AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.html#AuthorHaikuApi_Tests_UnitTests_AuthorHaikuServiceTests_GetAuthorHaikuAsync_ReturnAuthorHaiku_
  commentId: Overload:AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.GetAuthorHaikuAsync_ReturnAuthorHaiku
  isSpec: "True"
  fullName: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.GetAuthorHaikuAsync_ReturnAuthorHaiku
  nameWithType: AuthorHaikuServiceTests.GetAuthorHaikuAsync_ReturnAuthorHaiku
- uid: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.UpdateAuthorHaikuAsync_UpdateAuthorHaiku
  name: UpdateAuthorHaikuAsync_UpdateAuthorHaiku()
  href: api/AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.html#AuthorHaikuApi_Tests_UnitTests_AuthorHaikuServiceTests_UpdateAuthorHaikuAsync_UpdateAuthorHaiku
  commentId: M:AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.UpdateAuthorHaikuAsync_UpdateAuthorHaiku
  fullName: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.UpdateAuthorHaikuAsync_UpdateAuthorHaiku()
  nameWithType: AuthorHaikuServiceTests.UpdateAuthorHaikuAsync_UpdateAuthorHaiku()
- uid: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.UpdateAuthorHaikuAsync_UpdateAuthorHaiku*
  name: UpdateAuthorHaikuAsync_UpdateAuthorHaiku
  href: api/AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.html#AuthorHaikuApi_Tests_UnitTests_AuthorHaikuServiceTests_UpdateAuthorHaikuAsync_UpdateAuthorHaiku_
  commentId: Overload:AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.UpdateAuthorHaikuAsync_UpdateAuthorHaiku
  isSpec: "True"
  fullName: AuthorHaikuApi.Tests.UnitTests.AuthorHaikuServiceTests.UpdateAuthorHaikuAsync_UpdateAuthorHaiku
  nameWithType: AuthorHaikuServiceTests.UpdateAuthorHaikuAsync_UpdateAuthorHaiku
- uid: Haiku.API.Controllers
  name: Haiku.API.Controllers
  href: api/Haiku.API.Controllers.html
  commentId: N:Haiku.API.Controllers
  fullName: Haiku.API.Controllers
  nameWithType: Haiku.API.Controllers
- uid: Haiku.API.Controllers.AuthorController
  name: AuthorController
  href: api/Haiku.API.Controllers.AuthorController.html
  commentId: T:Haiku.API.Controllers.AuthorController
  fullName: Haiku.API.Controllers.AuthorController
  nameWithType: AuthorController
- uid: Haiku.API.Controllers.AuthorController.#ctor(Haiku.API.Services.AuthorServices.IAuthorService,Haiku.API.Services.PaginationService.IPaginationService,Haiku.API.Services.XmlSerializationServices.IXmlSerializationService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Controllers.AuthorController})
  name: AuthorController(IAuthorService, IPaginationService, IXmlSerializationService, ILogger<AuthorController>)
  href: api/Haiku.API.Controllers.AuthorController.html#Haiku_API_Controllers_AuthorController__ctor_Haiku_API_Services_AuthorServices_IAuthorService_Haiku_API_Services_PaginationService_IPaginationService_Haiku_API_Services_XmlSerializationServices_IXmlSerializationService_Microsoft_Extensions_Logging_ILogger_Haiku_API_Controllers_AuthorController__
  commentId: M:Haiku.API.Controllers.AuthorController.#ctor(Haiku.API.Services.AuthorServices.IAuthorService,Haiku.API.Services.PaginationService.IPaginationService,Haiku.API.Services.XmlSerializationServices.IXmlSerializationService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Controllers.AuthorController})
  name.vb: New(IAuthorService, IPaginationService, IXmlSerializationService, ILogger(Of AuthorController))
  fullName: Haiku.API.Controllers.AuthorController.AuthorController(Haiku.API.Services.AuthorServices.IAuthorService, Haiku.API.Services.PaginationService.IPaginationService, Haiku.API.Services.XmlSerializationServices.IXmlSerializationService, Microsoft.Extensions.Logging.ILogger<Haiku.API.Controllers.AuthorController>)
  fullName.vb: Haiku.API.Controllers.AuthorController.New(Haiku.API.Services.AuthorServices.IAuthorService, Haiku.API.Services.PaginationService.IPaginationService, Haiku.API.Services.XmlSerializationServices.IXmlSerializationService, Microsoft.Extensions.Logging.ILogger(Of Haiku.API.Controllers.AuthorController))
  nameWithType: AuthorController.AuthorController(IAuthorService, IPaginationService, IXmlSerializationService, ILogger<AuthorController>)
  nameWithType.vb: AuthorController.New(IAuthorService, IPaginationService, IXmlSerializationService, ILogger(Of AuthorController))
- uid: Haiku.API.Controllers.AuthorController.#ctor*
  name: AuthorController
  href: api/Haiku.API.Controllers.AuthorController.html#Haiku_API_Controllers_AuthorController__ctor_
  commentId: Overload:Haiku.API.Controllers.AuthorController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Controllers.AuthorController.AuthorController
  fullName.vb: Haiku.API.Controllers.AuthorController.New
  nameWithType: AuthorController.AuthorController
  nameWithType.vb: AuthorController.New
- uid: Haiku.API.Controllers.AuthorController.DeleteAuthorAsync(System.Int64)
  name: DeleteAuthorAsync(long)
  href: api/Haiku.API.Controllers.AuthorController.html#Haiku_API_Controllers_AuthorController_DeleteAuthorAsync_System_Int64_
  commentId: M:Haiku.API.Controllers.AuthorController.DeleteAuthorAsync(System.Int64)
  name.vb: DeleteAuthorAsync(Long)
  fullName: Haiku.API.Controllers.AuthorController.DeleteAuthorAsync(long)
  fullName.vb: Haiku.API.Controllers.AuthorController.DeleteAuthorAsync(Long)
  nameWithType: AuthorController.DeleteAuthorAsync(long)
  nameWithType.vb: AuthorController.DeleteAuthorAsync(Long)
- uid: Haiku.API.Controllers.AuthorController.DeleteAuthorAsync*
  name: DeleteAuthorAsync
  href: api/Haiku.API.Controllers.AuthorController.html#Haiku_API_Controllers_AuthorController_DeleteAuthorAsync_
  commentId: Overload:Haiku.API.Controllers.AuthorController.DeleteAuthorAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.AuthorController.DeleteAuthorAsync
  nameWithType: AuthorController.DeleteAuthorAsync
- uid: Haiku.API.Controllers.AuthorController.GetAllPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
  name: GetAllPaginatedAuthorsAsync(int, int, string?)
  href: api/Haiku.API.Controllers.AuthorController.html#Haiku_API_Controllers_AuthorController_GetAllPaginatedAuthorsAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Controllers.AuthorController.GetAllPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
  name.vb: GetAllPaginatedAuthorsAsync(Integer, Integer, String)
  fullName: Haiku.API.Controllers.AuthorController.GetAllPaginatedAuthorsAsync(int, int, string?)
  fullName.vb: Haiku.API.Controllers.AuthorController.GetAllPaginatedAuthorsAsync(Integer, Integer, String)
  nameWithType: AuthorController.GetAllPaginatedAuthorsAsync(int, int, string?)
  nameWithType.vb: AuthorController.GetAllPaginatedAuthorsAsync(Integer, Integer, String)
- uid: Haiku.API.Controllers.AuthorController.GetAllPaginatedAuthorsAsync*
  name: GetAllPaginatedAuthorsAsync
  href: api/Haiku.API.Controllers.AuthorController.html#Haiku_API_Controllers_AuthorController_GetAllPaginatedAuthorsAsync_
  commentId: Overload:Haiku.API.Controllers.AuthorController.GetAllPaginatedAuthorsAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.AuthorController.GetAllPaginatedAuthorsAsync
  nameWithType: AuthorController.GetAllPaginatedAuthorsAsync
- uid: Haiku.API.Controllers.AuthorController.GetAuthorByIdAsync(System.Int64)
  name: GetAuthorByIdAsync(long)
  href: api/Haiku.API.Controllers.AuthorController.html#Haiku_API_Controllers_AuthorController_GetAuthorByIdAsync_System_Int64_
  commentId: M:Haiku.API.Controllers.AuthorController.GetAuthorByIdAsync(System.Int64)
  name.vb: GetAuthorByIdAsync(Long)
  fullName: Haiku.API.Controllers.AuthorController.GetAuthorByIdAsync(long)
  fullName.vb: Haiku.API.Controllers.AuthorController.GetAuthorByIdAsync(Long)
  nameWithType: AuthorController.GetAuthorByIdAsync(long)
  nameWithType.vb: AuthorController.GetAuthorByIdAsync(Long)
- uid: Haiku.API.Controllers.AuthorController.GetAuthorByIdAsync*
  name: GetAuthorByIdAsync
  href: api/Haiku.API.Controllers.AuthorController.html#Haiku_API_Controllers_AuthorController_GetAuthorByIdAsync_
  commentId: Overload:Haiku.API.Controllers.AuthorController.GetAuthorByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.AuthorController.GetAuthorByIdAsync
  nameWithType: AuthorController.GetAuthorByIdAsync
- uid: Haiku.API.Controllers.AuthorController.PostAuthorAsync(Haiku.API.Dtos.AuthorDto)
  name: PostAuthorAsync(AuthorDto)
  href: api/Haiku.API.Controllers.AuthorController.html#Haiku_API_Controllers_AuthorController_PostAuthorAsync_Haiku_API_Dtos_AuthorDto_
  commentId: M:Haiku.API.Controllers.AuthorController.PostAuthorAsync(Haiku.API.Dtos.AuthorDto)
  fullName: Haiku.API.Controllers.AuthorController.PostAuthorAsync(Haiku.API.Dtos.AuthorDto)
  nameWithType: AuthorController.PostAuthorAsync(AuthorDto)
- uid: Haiku.API.Controllers.AuthorController.PostAuthorAsync*
  name: PostAuthorAsync
  href: api/Haiku.API.Controllers.AuthorController.html#Haiku_API_Controllers_AuthorController_PostAuthorAsync_
  commentId: Overload:Haiku.API.Controllers.AuthorController.PostAuthorAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.AuthorController.PostAuthorAsync
  nameWithType: AuthorController.PostAuthorAsync
- uid: Haiku.API.Controllers.AuthorController.PutAuthorAsync(System.Int64,Haiku.API.Dtos.AuthorDto)
  name: PutAuthorAsync(long, AuthorDto)
  href: api/Haiku.API.Controllers.AuthorController.html#Haiku_API_Controllers_AuthorController_PutAuthorAsync_System_Int64_Haiku_API_Dtos_AuthorDto_
  commentId: M:Haiku.API.Controllers.AuthorController.PutAuthorAsync(System.Int64,Haiku.API.Dtos.AuthorDto)
  name.vb: PutAuthorAsync(Long, AuthorDto)
  fullName: Haiku.API.Controllers.AuthorController.PutAuthorAsync(long, Haiku.API.Dtos.AuthorDto)
  fullName.vb: Haiku.API.Controllers.AuthorController.PutAuthorAsync(Long, Haiku.API.Dtos.AuthorDto)
  nameWithType: AuthorController.PutAuthorAsync(long, AuthorDto)
  nameWithType.vb: AuthorController.PutAuthorAsync(Long, AuthorDto)
- uid: Haiku.API.Controllers.AuthorController.PutAuthorAsync*
  name: PutAuthorAsync
  href: api/Haiku.API.Controllers.AuthorController.html#Haiku_API_Controllers_AuthorController_PutAuthorAsync_
  commentId: Overload:Haiku.API.Controllers.AuthorController.PutAuthorAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.AuthorController.PutAuthorAsync
  nameWithType: AuthorController.PutAuthorAsync
- uid: Haiku.API.Controllers.AuthorHaikuController
  name: AuthorHaikuController
  href: api/Haiku.API.Controllers.AuthorHaikuController.html
  commentId: T:Haiku.API.Controllers.AuthorHaikuController
  fullName: Haiku.API.Controllers.AuthorHaikuController
  nameWithType: AuthorHaikuController
- uid: Haiku.API.Controllers.AuthorHaikuController.#ctor(Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService,Haiku.API.Services.PaginationService.IPaginationService,Haiku.API.Services.XmlSerializationServices.IXmlSerializationService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Controllers.AuthorHaikuController})
  name: AuthorHaikuController(IAuthorHaikuService, IPaginationService, IXmlSerializationService, ILogger<AuthorHaikuController>)
  href: api/Haiku.API.Controllers.AuthorHaikuController.html#Haiku_API_Controllers_AuthorHaikuController__ctor_Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_Haiku_API_Services_PaginationService_IPaginationService_Haiku_API_Services_XmlSerializationServices_IXmlSerializationService_Microsoft_Extensions_Logging_ILogger_Haiku_API_Controllers_AuthorHaikuController__
  commentId: M:Haiku.API.Controllers.AuthorHaikuController.#ctor(Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService,Haiku.API.Services.PaginationService.IPaginationService,Haiku.API.Services.XmlSerializationServices.IXmlSerializationService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Controllers.AuthorHaikuController})
  name.vb: New(IAuthorHaikuService, IPaginationService, IXmlSerializationService, ILogger(Of AuthorHaikuController))
  fullName: Haiku.API.Controllers.AuthorHaikuController.AuthorHaikuController(Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService, Haiku.API.Services.PaginationService.IPaginationService, Haiku.API.Services.XmlSerializationServices.IXmlSerializationService, Microsoft.Extensions.Logging.ILogger<Haiku.API.Controllers.AuthorHaikuController>)
  fullName.vb: Haiku.API.Controllers.AuthorHaikuController.New(Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService, Haiku.API.Services.PaginationService.IPaginationService, Haiku.API.Services.XmlSerializationServices.IXmlSerializationService, Microsoft.Extensions.Logging.ILogger(Of Haiku.API.Controllers.AuthorHaikuController))
  nameWithType: AuthorHaikuController.AuthorHaikuController(IAuthorHaikuService, IPaginationService, IXmlSerializationService, ILogger<AuthorHaikuController>)
  nameWithType.vb: AuthorHaikuController.New(IAuthorHaikuService, IPaginationService, IXmlSerializationService, ILogger(Of AuthorHaikuController))
- uid: Haiku.API.Controllers.AuthorHaikuController.#ctor*
  name: AuthorHaikuController
  href: api/Haiku.API.Controllers.AuthorHaikuController.html#Haiku_API_Controllers_AuthorHaikuController__ctor_
  commentId: Overload:Haiku.API.Controllers.AuthorHaikuController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Controllers.AuthorHaikuController.AuthorHaikuController
  fullName.vb: Haiku.API.Controllers.AuthorHaikuController.New
  nameWithType: AuthorHaikuController.AuthorHaikuController
  nameWithType.vb: AuthorHaikuController.New
- uid: Haiku.API.Controllers.AuthorHaikuController.DeleteAuthorHaikuAsync(System.Int64)
  name: DeleteAuthorHaikuAsync(long)
  href: api/Haiku.API.Controllers.AuthorHaikuController.html#Haiku_API_Controllers_AuthorHaikuController_DeleteAuthorHaikuAsync_System_Int64_
  commentId: M:Haiku.API.Controllers.AuthorHaikuController.DeleteAuthorHaikuAsync(System.Int64)
  name.vb: DeleteAuthorHaikuAsync(Long)
  fullName: Haiku.API.Controllers.AuthorHaikuController.DeleteAuthorHaikuAsync(long)
  fullName.vb: Haiku.API.Controllers.AuthorHaikuController.DeleteAuthorHaikuAsync(Long)
  nameWithType: AuthorHaikuController.DeleteAuthorHaikuAsync(long)
  nameWithType.vb: AuthorHaikuController.DeleteAuthorHaikuAsync(Long)
- uid: Haiku.API.Controllers.AuthorHaikuController.DeleteAuthorHaikuAsync*
  name: DeleteAuthorHaikuAsync
  href: api/Haiku.API.Controllers.AuthorHaikuController.html#Haiku_API_Controllers_AuthorHaikuController_DeleteAuthorHaikuAsync_
  commentId: Overload:Haiku.API.Controllers.AuthorHaikuController.DeleteAuthorHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.AuthorHaikuController.DeleteAuthorHaikuAsync
  nameWithType: AuthorHaikuController.DeleteAuthorHaikuAsync
- uid: Haiku.API.Controllers.AuthorHaikuController.GetAllPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  name: GetAllPaginatedAuthorHaikusAsync(int, int, string?)
  href: api/Haiku.API.Controllers.AuthorHaikuController.html#Haiku_API_Controllers_AuthorHaikuController_GetAllPaginatedAuthorHaikusAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Controllers.AuthorHaikuController.GetAllPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  name.vb: GetAllPaginatedAuthorHaikusAsync(Integer, Integer, String)
  fullName: Haiku.API.Controllers.AuthorHaikuController.GetAllPaginatedAuthorHaikusAsync(int, int, string?)
  fullName.vb: Haiku.API.Controllers.AuthorHaikuController.GetAllPaginatedAuthorHaikusAsync(Integer, Integer, String)
  nameWithType: AuthorHaikuController.GetAllPaginatedAuthorHaikusAsync(int, int, string?)
  nameWithType.vb: AuthorHaikuController.GetAllPaginatedAuthorHaikusAsync(Integer, Integer, String)
- uid: Haiku.API.Controllers.AuthorHaikuController.GetAllPaginatedAuthorHaikusAsync*
  name: GetAllPaginatedAuthorHaikusAsync
  href: api/Haiku.API.Controllers.AuthorHaikuController.html#Haiku_API_Controllers_AuthorHaikuController_GetAllPaginatedAuthorHaikusAsync_
  commentId: Overload:Haiku.API.Controllers.AuthorHaikuController.GetAllPaginatedAuthorHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.AuthorHaikuController.GetAllPaginatedAuthorHaikusAsync
  nameWithType: AuthorHaikuController.GetAllPaginatedAuthorHaikusAsync
- uid: Haiku.API.Controllers.AuthorHaikuController.GetAuthorHaikuByIdAsync(System.Int64)
  name: GetAuthorHaikuByIdAsync(long)
  href: api/Haiku.API.Controllers.AuthorHaikuController.html#Haiku_API_Controllers_AuthorHaikuController_GetAuthorHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Controllers.AuthorHaikuController.GetAuthorHaikuByIdAsync(System.Int64)
  name.vb: GetAuthorHaikuByIdAsync(Long)
  fullName: Haiku.API.Controllers.AuthorHaikuController.GetAuthorHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Controllers.AuthorHaikuController.GetAuthorHaikuByIdAsync(Long)
  nameWithType: AuthorHaikuController.GetAuthorHaikuByIdAsync(long)
  nameWithType.vb: AuthorHaikuController.GetAuthorHaikuByIdAsync(Long)
- uid: Haiku.API.Controllers.AuthorHaikuController.GetAuthorHaikuByIdAsync*
  name: GetAuthorHaikuByIdAsync
  href: api/Haiku.API.Controllers.AuthorHaikuController.html#Haiku_API_Controllers_AuthorHaikuController_GetAuthorHaikuByIdAsync_
  commentId: Overload:Haiku.API.Controllers.AuthorHaikuController.GetAuthorHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.AuthorHaikuController.GetAuthorHaikuByIdAsync
  nameWithType: AuthorHaikuController.GetAuthorHaikuByIdAsync
- uid: Haiku.API.Controllers.AuthorHaikuController.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name: GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string?)
  href: api/Haiku.API.Controllers.AuthorHaikuController.html#Haiku_API_Controllers_AuthorHaikuController_GetPaginatedAuthorHaikusByAuthorIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Controllers.AuthorHaikuController.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  fullName: Haiku.API.Controllers.AuthorHaikuController.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string?)
  fullName.vb: Haiku.API.Controllers.AuthorHaikuController.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  nameWithType: AuthorHaikuController.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string?)
  nameWithType.vb: AuthorHaikuController.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
- uid: Haiku.API.Controllers.AuthorHaikuController.GetPaginatedAuthorHaikusByAuthorIdAsync*
  name: GetPaginatedAuthorHaikusByAuthorIdAsync
  href: api/Haiku.API.Controllers.AuthorHaikuController.html#Haiku_API_Controllers_AuthorHaikuController_GetPaginatedAuthorHaikusByAuthorIdAsync_
  commentId: Overload:Haiku.API.Controllers.AuthorHaikuController.GetPaginatedAuthorHaikusByAuthorIdAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.AuthorHaikuController.GetPaginatedAuthorHaikusByAuthorIdAsync
  nameWithType: AuthorHaikuController.GetPaginatedAuthorHaikusByAuthorIdAsync
- uid: Haiku.API.Controllers.AuthorHaikuController.PostAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
  name: PostAuthorHaikuAsync(AuthorHaikuDto)
  href: api/Haiku.API.Controllers.AuthorHaikuController.html#Haiku_API_Controllers_AuthorHaikuController_PostAuthorHaikuAsync_Haiku_API_Dtos_AuthorHaikuDto_
  commentId: M:Haiku.API.Controllers.AuthorHaikuController.PostAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
  fullName: Haiku.API.Controllers.AuthorHaikuController.PostAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
  nameWithType: AuthorHaikuController.PostAuthorHaikuAsync(AuthorHaikuDto)
- uid: Haiku.API.Controllers.AuthorHaikuController.PostAuthorHaikuAsync*
  name: PostAuthorHaikuAsync
  href: api/Haiku.API.Controllers.AuthorHaikuController.html#Haiku_API_Controllers_AuthorHaikuController_PostAuthorHaikuAsync_
  commentId: Overload:Haiku.API.Controllers.AuthorHaikuController.PostAuthorHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.AuthorHaikuController.PostAuthorHaikuAsync
  nameWithType: AuthorHaikuController.PostAuthorHaikuAsync
- uid: Haiku.API.Controllers.AuthorHaikuController.PutAuthorHaikuAsync(System.Int64,Haiku.API.Dtos.AuthorHaikuDto)
  name: PutAuthorHaikuAsync(long, AuthorHaikuDto)
  href: api/Haiku.API.Controllers.AuthorHaikuController.html#Haiku_API_Controllers_AuthorHaikuController_PutAuthorHaikuAsync_System_Int64_Haiku_API_Dtos_AuthorHaikuDto_
  commentId: M:Haiku.API.Controllers.AuthorHaikuController.PutAuthorHaikuAsync(System.Int64,Haiku.API.Dtos.AuthorHaikuDto)
  name.vb: PutAuthorHaikuAsync(Long, AuthorHaikuDto)
  fullName: Haiku.API.Controllers.AuthorHaikuController.PutAuthorHaikuAsync(long, Haiku.API.Dtos.AuthorHaikuDto)
  fullName.vb: Haiku.API.Controllers.AuthorHaikuController.PutAuthorHaikuAsync(Long, Haiku.API.Dtos.AuthorHaikuDto)
  nameWithType: AuthorHaikuController.PutAuthorHaikuAsync(long, AuthorHaikuDto)
  nameWithType.vb: AuthorHaikuController.PutAuthorHaikuAsync(Long, AuthorHaikuDto)
- uid: Haiku.API.Controllers.AuthorHaikuController.PutAuthorHaikuAsync*
  name: PutAuthorHaikuAsync
  href: api/Haiku.API.Controllers.AuthorHaikuController.html#Haiku_API_Controllers_AuthorHaikuController_PutAuthorHaikuAsync_
  commentId: Overload:Haiku.API.Controllers.AuthorHaikuController.PutAuthorHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.AuthorHaikuController.PutAuthorHaikuAsync
  nameWithType: AuthorHaikuController.PutAuthorHaikuAsync
- uid: Haiku.API.Controllers.LoginController
  name: LoginController
  href: api/Haiku.API.Controllers.LoginController.html
  commentId: T:Haiku.API.Controllers.LoginController
  fullName: Haiku.API.Controllers.LoginController
  nameWithType: LoginController
- uid: Haiku.API.Controllers.LoginController.#ctor(Haiku.API.Services.AuthServices.IAuthService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Controllers.LoginController})
  name: LoginController(IAuthService, ILogger<LoginController>)
  href: api/Haiku.API.Controllers.LoginController.html#Haiku_API_Controllers_LoginController__ctor_Haiku_API_Services_AuthServices_IAuthService_Microsoft_Extensions_Logging_ILogger_Haiku_API_Controllers_LoginController__
  commentId: M:Haiku.API.Controllers.LoginController.#ctor(Haiku.API.Services.AuthServices.IAuthService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Controllers.LoginController})
  name.vb: New(IAuthService, ILogger(Of LoginController))
  fullName: Haiku.API.Controllers.LoginController.LoginController(Haiku.API.Services.AuthServices.IAuthService, Microsoft.Extensions.Logging.ILogger<Haiku.API.Controllers.LoginController>)
  fullName.vb: Haiku.API.Controllers.LoginController.New(Haiku.API.Services.AuthServices.IAuthService, Microsoft.Extensions.Logging.ILogger(Of Haiku.API.Controllers.LoginController))
  nameWithType: LoginController.LoginController(IAuthService, ILogger<LoginController>)
  nameWithType.vb: LoginController.New(IAuthService, ILogger(Of LoginController))
- uid: Haiku.API.Controllers.LoginController.#ctor*
  name: LoginController
  href: api/Haiku.API.Controllers.LoginController.html#Haiku_API_Controllers_LoginController__ctor_
  commentId: Overload:Haiku.API.Controllers.LoginController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Controllers.LoginController.LoginController
  fullName.vb: Haiku.API.Controllers.LoginController.New
  nameWithType: LoginController.LoginController
  nameWithType.vb: LoginController.New
- uid: Haiku.API.Controllers.LoginController.PostLoginUser(Haiku.API.Dtos.LoginDto)
  name: PostLoginUser(LoginDto)
  href: api/Haiku.API.Controllers.LoginController.html#Haiku_API_Controllers_LoginController_PostLoginUser_Haiku_API_Dtos_LoginDto_
  commentId: M:Haiku.API.Controllers.LoginController.PostLoginUser(Haiku.API.Dtos.LoginDto)
  fullName: Haiku.API.Controllers.LoginController.PostLoginUser(Haiku.API.Dtos.LoginDto)
  nameWithType: LoginController.PostLoginUser(LoginDto)
- uid: Haiku.API.Controllers.LoginController.PostLoginUser*
  name: PostLoginUser
  href: api/Haiku.API.Controllers.LoginController.html#Haiku_API_Controllers_LoginController_PostLoginUser_
  commentId: Overload:Haiku.API.Controllers.LoginController.PostLoginUser
  isSpec: "True"
  fullName: Haiku.API.Controllers.LoginController.PostLoginUser
  nameWithType: LoginController.PostLoginUser
- uid: Haiku.API.Controllers.RegisterController
  name: RegisterController
  href: api/Haiku.API.Controllers.RegisterController.html
  commentId: T:Haiku.API.Controllers.RegisterController
  fullName: Haiku.API.Controllers.RegisterController
  nameWithType: RegisterController
- uid: Haiku.API.Controllers.RegisterController.#ctor(Haiku.API.Services.UserServices.IUserService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Controllers.RegisterController})
  name: RegisterController(IUserService, ILogger<RegisterController>)
  href: api/Haiku.API.Controllers.RegisterController.html#Haiku_API_Controllers_RegisterController__ctor_Haiku_API_Services_UserServices_IUserService_Microsoft_Extensions_Logging_ILogger_Haiku_API_Controllers_RegisterController__
  commentId: M:Haiku.API.Controllers.RegisterController.#ctor(Haiku.API.Services.UserServices.IUserService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Controllers.RegisterController})
  name.vb: New(IUserService, ILogger(Of RegisterController))
  fullName: Haiku.API.Controllers.RegisterController.RegisterController(Haiku.API.Services.UserServices.IUserService, Microsoft.Extensions.Logging.ILogger<Haiku.API.Controllers.RegisterController>)
  fullName.vb: Haiku.API.Controllers.RegisterController.New(Haiku.API.Services.UserServices.IUserService, Microsoft.Extensions.Logging.ILogger(Of Haiku.API.Controllers.RegisterController))
  nameWithType: RegisterController.RegisterController(IUserService, ILogger<RegisterController>)
  nameWithType.vb: RegisterController.New(IUserService, ILogger(Of RegisterController))
- uid: Haiku.API.Controllers.RegisterController.#ctor*
  name: RegisterController
  href: api/Haiku.API.Controllers.RegisterController.html#Haiku_API_Controllers_RegisterController__ctor_
  commentId: Overload:Haiku.API.Controllers.RegisterController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Controllers.RegisterController.RegisterController
  fullName.vb: Haiku.API.Controllers.RegisterController.New
  nameWithType: RegisterController.RegisterController
  nameWithType.vb: RegisterController.New
- uid: Haiku.API.Controllers.RegisterController.GetExistingUsernameVerification(System.String)
  name: GetExistingUsernameVerification(string)
  href: api/Haiku.API.Controllers.RegisterController.html#Haiku_API_Controllers_RegisterController_GetExistingUsernameVerification_System_String_
  commentId: M:Haiku.API.Controllers.RegisterController.GetExistingUsernameVerification(System.String)
  name.vb: GetExistingUsernameVerification(String)
  fullName: Haiku.API.Controllers.RegisterController.GetExistingUsernameVerification(string)
  fullName.vb: Haiku.API.Controllers.RegisterController.GetExistingUsernameVerification(String)
  nameWithType: RegisterController.GetExistingUsernameVerification(string)
  nameWithType.vb: RegisterController.GetExistingUsernameVerification(String)
- uid: Haiku.API.Controllers.RegisterController.GetExistingUsernameVerification*
  name: GetExistingUsernameVerification
  href: api/Haiku.API.Controllers.RegisterController.html#Haiku_API_Controllers_RegisterController_GetExistingUsernameVerification_
  commentId: Overload:Haiku.API.Controllers.RegisterController.GetExistingUsernameVerification
  isSpec: "True"
  fullName: Haiku.API.Controllers.RegisterController.GetExistingUsernameVerification
  nameWithType: RegisterController.GetExistingUsernameVerification
- uid: Haiku.API.Controllers.RegisterController.PostRegisterUser(Haiku.API.Dtos.RegisterDto)
  name: PostRegisterUser(RegisterDto)
  href: api/Haiku.API.Controllers.RegisterController.html#Haiku_API_Controllers_RegisterController_PostRegisterUser_Haiku_API_Dtos_RegisterDto_
  commentId: M:Haiku.API.Controllers.RegisterController.PostRegisterUser(Haiku.API.Dtos.RegisterDto)
  fullName: Haiku.API.Controllers.RegisterController.PostRegisterUser(Haiku.API.Dtos.RegisterDto)
  nameWithType: RegisterController.PostRegisterUser(RegisterDto)
- uid: Haiku.API.Controllers.RegisterController.PostRegisterUser*
  name: PostRegisterUser
  href: api/Haiku.API.Controllers.RegisterController.html#Haiku_API_Controllers_RegisterController_PostRegisterUser_
  commentId: Overload:Haiku.API.Controllers.RegisterController.PostRegisterUser
  isSpec: "True"
  fullName: Haiku.API.Controllers.RegisterController.PostRegisterUser
  nameWithType: RegisterController.PostRegisterUser
- uid: Haiku.API.Controllers.UserController
  name: UserController
  href: api/Haiku.API.Controllers.UserController.html
  commentId: T:Haiku.API.Controllers.UserController
  fullName: Haiku.API.Controllers.UserController
  nameWithType: UserController
- uid: Haiku.API.Controllers.UserController.#ctor(Haiku.API.Services.UserServices.IUserService,Haiku.API.Services.PaginationService.IPaginationService,Haiku.API.Services.XmlSerializationServices.IXmlSerializationService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Controllers.UserController})
  name: UserController(IUserService, IPaginationService, IXmlSerializationService, ILogger<UserController>)
  href: api/Haiku.API.Controllers.UserController.html#Haiku_API_Controllers_UserController__ctor_Haiku_API_Services_UserServices_IUserService_Haiku_API_Services_PaginationService_IPaginationService_Haiku_API_Services_XmlSerializationServices_IXmlSerializationService_Microsoft_Extensions_Logging_ILogger_Haiku_API_Controllers_UserController__
  commentId: M:Haiku.API.Controllers.UserController.#ctor(Haiku.API.Services.UserServices.IUserService,Haiku.API.Services.PaginationService.IPaginationService,Haiku.API.Services.XmlSerializationServices.IXmlSerializationService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Controllers.UserController})
  name.vb: New(IUserService, IPaginationService, IXmlSerializationService, ILogger(Of UserController))
  fullName: Haiku.API.Controllers.UserController.UserController(Haiku.API.Services.UserServices.IUserService, Haiku.API.Services.PaginationService.IPaginationService, Haiku.API.Services.XmlSerializationServices.IXmlSerializationService, Microsoft.Extensions.Logging.ILogger<Haiku.API.Controllers.UserController>)
  fullName.vb: Haiku.API.Controllers.UserController.New(Haiku.API.Services.UserServices.IUserService, Haiku.API.Services.PaginationService.IPaginationService, Haiku.API.Services.XmlSerializationServices.IXmlSerializationService, Microsoft.Extensions.Logging.ILogger(Of Haiku.API.Controllers.UserController))
  nameWithType: UserController.UserController(IUserService, IPaginationService, IXmlSerializationService, ILogger<UserController>)
  nameWithType.vb: UserController.New(IUserService, IPaginationService, IXmlSerializationService, ILogger(Of UserController))
- uid: Haiku.API.Controllers.UserController.#ctor*
  name: UserController
  href: api/Haiku.API.Controllers.UserController.html#Haiku_API_Controllers_UserController__ctor_
  commentId: Overload:Haiku.API.Controllers.UserController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Controllers.UserController.UserController
  fullName.vb: Haiku.API.Controllers.UserController.New
  nameWithType: UserController.UserController
  nameWithType.vb: UserController.New
- uid: Haiku.API.Controllers.UserController.DeleteUserAsync(System.Int64)
  name: DeleteUserAsync(long)
  href: api/Haiku.API.Controllers.UserController.html#Haiku_API_Controllers_UserController_DeleteUserAsync_System_Int64_
  commentId: M:Haiku.API.Controllers.UserController.DeleteUserAsync(System.Int64)
  name.vb: DeleteUserAsync(Long)
  fullName: Haiku.API.Controllers.UserController.DeleteUserAsync(long)
  fullName.vb: Haiku.API.Controllers.UserController.DeleteUserAsync(Long)
  nameWithType: UserController.DeleteUserAsync(long)
  nameWithType.vb: UserController.DeleteUserAsync(Long)
- uid: Haiku.API.Controllers.UserController.DeleteUserAsync*
  name: DeleteUserAsync
  href: api/Haiku.API.Controllers.UserController.html#Haiku_API_Controllers_UserController_DeleteUserAsync_
  commentId: Overload:Haiku.API.Controllers.UserController.DeleteUserAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.UserController.DeleteUserAsync
  nameWithType: UserController.DeleteUserAsync
- uid: Haiku.API.Controllers.UserController.GetAllPaginatedUsersAsync(System.Int32,System.Int32,System.String)
  name: GetAllPaginatedUsersAsync(int, int, string?)
  href: api/Haiku.API.Controllers.UserController.html#Haiku_API_Controllers_UserController_GetAllPaginatedUsersAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Controllers.UserController.GetAllPaginatedUsersAsync(System.Int32,System.Int32,System.String)
  name.vb: GetAllPaginatedUsersAsync(Integer, Integer, String)
  fullName: Haiku.API.Controllers.UserController.GetAllPaginatedUsersAsync(int, int, string?)
  fullName.vb: Haiku.API.Controllers.UserController.GetAllPaginatedUsersAsync(Integer, Integer, String)
  nameWithType: UserController.GetAllPaginatedUsersAsync(int, int, string?)
  nameWithType.vb: UserController.GetAllPaginatedUsersAsync(Integer, Integer, String)
- uid: Haiku.API.Controllers.UserController.GetAllPaginatedUsersAsync*
  name: GetAllPaginatedUsersAsync
  href: api/Haiku.API.Controllers.UserController.html#Haiku_API_Controllers_UserController_GetAllPaginatedUsersAsync_
  commentId: Overload:Haiku.API.Controllers.UserController.GetAllPaginatedUsersAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.UserController.GetAllPaginatedUsersAsync
  nameWithType: UserController.GetAllPaginatedUsersAsync
- uid: Haiku.API.Controllers.UserController.GetUserByIdAsync(System.Int64)
  name: GetUserByIdAsync(long)
  href: api/Haiku.API.Controllers.UserController.html#Haiku_API_Controllers_UserController_GetUserByIdAsync_System_Int64_
  commentId: M:Haiku.API.Controllers.UserController.GetUserByIdAsync(System.Int64)
  name.vb: GetUserByIdAsync(Long)
  fullName: Haiku.API.Controllers.UserController.GetUserByIdAsync(long)
  fullName.vb: Haiku.API.Controllers.UserController.GetUserByIdAsync(Long)
  nameWithType: UserController.GetUserByIdAsync(long)
  nameWithType.vb: UserController.GetUserByIdAsync(Long)
- uid: Haiku.API.Controllers.UserController.GetUserByIdAsync*
  name: GetUserByIdAsync
  href: api/Haiku.API.Controllers.UserController.html#Haiku_API_Controllers_UserController_GetUserByIdAsync_
  commentId: Overload:Haiku.API.Controllers.UserController.GetUserByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.UserController.GetUserByIdAsync
  nameWithType: UserController.GetUserByIdAsync
- uid: Haiku.API.Controllers.UserController.PutUserAsync(System.Int64,Haiku.API.Dtos.UserDto)
  name: PutUserAsync(long, UserDto)
  href: api/Haiku.API.Controllers.UserController.html#Haiku_API_Controllers_UserController_PutUserAsync_System_Int64_Haiku_API_Dtos_UserDto_
  commentId: M:Haiku.API.Controllers.UserController.PutUserAsync(System.Int64,Haiku.API.Dtos.UserDto)
  name.vb: PutUserAsync(Long, UserDto)
  fullName: Haiku.API.Controllers.UserController.PutUserAsync(long, Haiku.API.Dtos.UserDto)
  fullName.vb: Haiku.API.Controllers.UserController.PutUserAsync(Long, Haiku.API.Dtos.UserDto)
  nameWithType: UserController.PutUserAsync(long, UserDto)
  nameWithType.vb: UserController.PutUserAsync(Long, UserDto)
- uid: Haiku.API.Controllers.UserController.PutUserAsync*
  name: PutUserAsync
  href: api/Haiku.API.Controllers.UserController.html#Haiku_API_Controllers_UserController_PutUserAsync_
  commentId: Overload:Haiku.API.Controllers.UserController.PutUserAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.UserController.PutUserAsync
  nameWithType: UserController.PutUserAsync
- uid: Haiku.API.Controllers.UserHaikuController
  name: UserHaikuController
  href: api/Haiku.API.Controllers.UserHaikuController.html
  commentId: T:Haiku.API.Controllers.UserHaikuController
  fullName: Haiku.API.Controllers.UserHaikuController
  nameWithType: UserHaikuController
- uid: Haiku.API.Controllers.UserHaikuController.#ctor(Haiku.API.Services.UserHaikuServices.IUserHaikuService,Haiku.API.Services.PaginationService.IPaginationService,Haiku.API.Services.XmlSerializationServices.IXmlSerializationService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Controllers.UserHaikuController})
  name: UserHaikuController(IUserHaikuService, IPaginationService, IXmlSerializationService, ILogger<UserHaikuController>)
  href: api/Haiku.API.Controllers.UserHaikuController.html#Haiku_API_Controllers_UserHaikuController__ctor_Haiku_API_Services_UserHaikuServices_IUserHaikuService_Haiku_API_Services_PaginationService_IPaginationService_Haiku_API_Services_XmlSerializationServices_IXmlSerializationService_Microsoft_Extensions_Logging_ILogger_Haiku_API_Controllers_UserHaikuController__
  commentId: M:Haiku.API.Controllers.UserHaikuController.#ctor(Haiku.API.Services.UserHaikuServices.IUserHaikuService,Haiku.API.Services.PaginationService.IPaginationService,Haiku.API.Services.XmlSerializationServices.IXmlSerializationService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Controllers.UserHaikuController})
  name.vb: New(IUserHaikuService, IPaginationService, IXmlSerializationService, ILogger(Of UserHaikuController))
  fullName: Haiku.API.Controllers.UserHaikuController.UserHaikuController(Haiku.API.Services.UserHaikuServices.IUserHaikuService, Haiku.API.Services.PaginationService.IPaginationService, Haiku.API.Services.XmlSerializationServices.IXmlSerializationService, Microsoft.Extensions.Logging.ILogger<Haiku.API.Controllers.UserHaikuController>)
  fullName.vb: Haiku.API.Controllers.UserHaikuController.New(Haiku.API.Services.UserHaikuServices.IUserHaikuService, Haiku.API.Services.PaginationService.IPaginationService, Haiku.API.Services.XmlSerializationServices.IXmlSerializationService, Microsoft.Extensions.Logging.ILogger(Of Haiku.API.Controllers.UserHaikuController))
  nameWithType: UserHaikuController.UserHaikuController(IUserHaikuService, IPaginationService, IXmlSerializationService, ILogger<UserHaikuController>)
  nameWithType.vb: UserHaikuController.New(IUserHaikuService, IPaginationService, IXmlSerializationService, ILogger(Of UserHaikuController))
- uid: Haiku.API.Controllers.UserHaikuController.#ctor*
  name: UserHaikuController
  href: api/Haiku.API.Controllers.UserHaikuController.html#Haiku_API_Controllers_UserHaikuController__ctor_
  commentId: Overload:Haiku.API.Controllers.UserHaikuController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Controllers.UserHaikuController.UserHaikuController
  fullName.vb: Haiku.API.Controllers.UserHaikuController.New
  nameWithType: UserHaikuController.UserHaikuController
  nameWithType.vb: UserHaikuController.New
- uid: Haiku.API.Controllers.UserHaikuController.DeleteUserHaikuAsync(System.Int64)
  name: DeleteUserHaikuAsync(long)
  href: api/Haiku.API.Controllers.UserHaikuController.html#Haiku_API_Controllers_UserHaikuController_DeleteUserHaikuAsync_System_Int64_
  commentId: M:Haiku.API.Controllers.UserHaikuController.DeleteUserHaikuAsync(System.Int64)
  name.vb: DeleteUserHaikuAsync(Long)
  fullName: Haiku.API.Controllers.UserHaikuController.DeleteUserHaikuAsync(long)
  fullName.vb: Haiku.API.Controllers.UserHaikuController.DeleteUserHaikuAsync(Long)
  nameWithType: UserHaikuController.DeleteUserHaikuAsync(long)
  nameWithType.vb: UserHaikuController.DeleteUserHaikuAsync(Long)
- uid: Haiku.API.Controllers.UserHaikuController.DeleteUserHaikuAsync*
  name: DeleteUserHaikuAsync
  href: api/Haiku.API.Controllers.UserHaikuController.html#Haiku_API_Controllers_UserHaikuController_DeleteUserHaikuAsync_
  commentId: Overload:Haiku.API.Controllers.UserHaikuController.DeleteUserHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.UserHaikuController.DeleteUserHaikuAsync
  nameWithType: UserHaikuController.DeleteUserHaikuAsync
- uid: Haiku.API.Controllers.UserHaikuController.GetAllPaginatedHaikusAsync(System.Int32,System.Int32,System.String)
  name: GetAllPaginatedHaikusAsync(int, int, string?)
  href: api/Haiku.API.Controllers.UserHaikuController.html#Haiku_API_Controllers_UserHaikuController_GetAllPaginatedHaikusAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Controllers.UserHaikuController.GetAllPaginatedHaikusAsync(System.Int32,System.Int32,System.String)
  name.vb: GetAllPaginatedHaikusAsync(Integer, Integer, String)
  fullName: Haiku.API.Controllers.UserHaikuController.GetAllPaginatedHaikusAsync(int, int, string?)
  fullName.vb: Haiku.API.Controllers.UserHaikuController.GetAllPaginatedHaikusAsync(Integer, Integer, String)
  nameWithType: UserHaikuController.GetAllPaginatedHaikusAsync(int, int, string?)
  nameWithType.vb: UserHaikuController.GetAllPaginatedHaikusAsync(Integer, Integer, String)
- uid: Haiku.API.Controllers.UserHaikuController.GetAllPaginatedHaikusAsync*
  name: GetAllPaginatedHaikusAsync
  href: api/Haiku.API.Controllers.UserHaikuController.html#Haiku_API_Controllers_UserHaikuController_GetAllPaginatedHaikusAsync_
  commentId: Overload:Haiku.API.Controllers.UserHaikuController.GetAllPaginatedHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.UserHaikuController.GetAllPaginatedHaikusAsync
  nameWithType: UserHaikuController.GetAllPaginatedHaikusAsync
- uid: Haiku.API.Controllers.UserHaikuController.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name: GetPaginatedUserHaikusByUserIdAsync(long, int, int, string?)
  href: api/Haiku.API.Controllers.UserHaikuController.html#Haiku_API_Controllers_UserHaikuController_GetPaginatedUserHaikusByUserIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Controllers.UserHaikuController.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
  fullName: Haiku.API.Controllers.UserHaikuController.GetPaginatedUserHaikusByUserIdAsync(long, int, int, string?)
  fullName.vb: Haiku.API.Controllers.UserHaikuController.GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
  nameWithType: UserHaikuController.GetPaginatedUserHaikusByUserIdAsync(long, int, int, string?)
  nameWithType.vb: UserHaikuController.GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
- uid: Haiku.API.Controllers.UserHaikuController.GetPaginatedUserHaikusByUserIdAsync*
  name: GetPaginatedUserHaikusByUserIdAsync
  href: api/Haiku.API.Controllers.UserHaikuController.html#Haiku_API_Controllers_UserHaikuController_GetPaginatedUserHaikusByUserIdAsync_
  commentId: Overload:Haiku.API.Controllers.UserHaikuController.GetPaginatedUserHaikusByUserIdAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.UserHaikuController.GetPaginatedUserHaikusByUserIdAsync
  nameWithType: UserHaikuController.GetPaginatedUserHaikusByUserIdAsync
- uid: Haiku.API.Controllers.UserHaikuController.GetUserHaikuByIdAsync(System.Int64)
  name: GetUserHaikuByIdAsync(long)
  href: api/Haiku.API.Controllers.UserHaikuController.html#Haiku_API_Controllers_UserHaikuController_GetUserHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Controllers.UserHaikuController.GetUserHaikuByIdAsync(System.Int64)
  name.vb: GetUserHaikuByIdAsync(Long)
  fullName: Haiku.API.Controllers.UserHaikuController.GetUserHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Controllers.UserHaikuController.GetUserHaikuByIdAsync(Long)
  nameWithType: UserHaikuController.GetUserHaikuByIdAsync(long)
  nameWithType.vb: UserHaikuController.GetUserHaikuByIdAsync(Long)
- uid: Haiku.API.Controllers.UserHaikuController.GetUserHaikuByIdAsync*
  name: GetUserHaikuByIdAsync
  href: api/Haiku.API.Controllers.UserHaikuController.html#Haiku_API_Controllers_UserHaikuController_GetUserHaikuByIdAsync_
  commentId: Overload:Haiku.API.Controllers.UserHaikuController.GetUserHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.UserHaikuController.GetUserHaikuByIdAsync
  nameWithType: UserHaikuController.GetUserHaikuByIdAsync
- uid: Haiku.API.Controllers.UserHaikuController.PostUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
  name: PostUserHaikuAsync(UserHaikuDto)
  href: api/Haiku.API.Controllers.UserHaikuController.html#Haiku_API_Controllers_UserHaikuController_PostUserHaikuAsync_Haiku_API_Dtos_UserHaikuDto_
  commentId: M:Haiku.API.Controllers.UserHaikuController.PostUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
  fullName: Haiku.API.Controllers.UserHaikuController.PostUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
  nameWithType: UserHaikuController.PostUserHaikuAsync(UserHaikuDto)
- uid: Haiku.API.Controllers.UserHaikuController.PostUserHaikuAsync*
  name: PostUserHaikuAsync
  href: api/Haiku.API.Controllers.UserHaikuController.html#Haiku_API_Controllers_UserHaikuController_PostUserHaikuAsync_
  commentId: Overload:Haiku.API.Controllers.UserHaikuController.PostUserHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.UserHaikuController.PostUserHaikuAsync
  nameWithType: UserHaikuController.PostUserHaikuAsync
- uid: Haiku.API.Controllers.UserHaikuController.PutUserHaikuAsync(System.Int64,Haiku.API.Dtos.UserHaikuDto)
  name: PutUserHaikuAsync(long, UserHaikuDto)
  href: api/Haiku.API.Controllers.UserHaikuController.html#Haiku_API_Controllers_UserHaikuController_PutUserHaikuAsync_System_Int64_Haiku_API_Dtos_UserHaikuDto_
  commentId: M:Haiku.API.Controllers.UserHaikuController.PutUserHaikuAsync(System.Int64,Haiku.API.Dtos.UserHaikuDto)
  name.vb: PutUserHaikuAsync(Long, UserHaikuDto)
  fullName: Haiku.API.Controllers.UserHaikuController.PutUserHaikuAsync(long, Haiku.API.Dtos.UserHaikuDto)
  fullName.vb: Haiku.API.Controllers.UserHaikuController.PutUserHaikuAsync(Long, Haiku.API.Dtos.UserHaikuDto)
  nameWithType: UserHaikuController.PutUserHaikuAsync(long, UserHaikuDto)
  nameWithType.vb: UserHaikuController.PutUserHaikuAsync(Long, UserHaikuDto)
- uid: Haiku.API.Controllers.UserHaikuController.PutUserHaikuAsync*
  name: PutUserHaikuAsync
  href: api/Haiku.API.Controllers.UserHaikuController.html#Haiku_API_Controllers_UserHaikuController_PutUserHaikuAsync_
  commentId: Overload:Haiku.API.Controllers.UserHaikuController.PutUserHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.UserHaikuController.PutUserHaikuAsync
  nameWithType: UserHaikuController.PutUserHaikuAsync
- uid: Haiku.API.Controllers.UserProfileController
  name: UserProfileController
  href: api/Haiku.API.Controllers.UserProfileController.html
  commentId: T:Haiku.API.Controllers.UserProfileController
  fullName: Haiku.API.Controllers.UserProfileController
  nameWithType: UserProfileController
- uid: Haiku.API.Controllers.UserProfileController.#ctor(Haiku.API.Services.IUserProfileServices.IUserProfileService,Haiku.API.Services.PaginationService.IPaginationService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Controllers.UserProfileController})
  name: UserProfileController(IUserProfileService, IPaginationService, ILogger<UserProfileController>)
  href: api/Haiku.API.Controllers.UserProfileController.html#Haiku_API_Controllers_UserProfileController__ctor_Haiku_API_Services_IUserProfileServices_IUserProfileService_Haiku_API_Services_PaginationService_IPaginationService_Microsoft_Extensions_Logging_ILogger_Haiku_API_Controllers_UserProfileController__
  commentId: M:Haiku.API.Controllers.UserProfileController.#ctor(Haiku.API.Services.IUserProfileServices.IUserProfileService,Haiku.API.Services.PaginationService.IPaginationService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Controllers.UserProfileController})
  name.vb: New(IUserProfileService, IPaginationService, ILogger(Of UserProfileController))
  fullName: Haiku.API.Controllers.UserProfileController.UserProfileController(Haiku.API.Services.IUserProfileServices.IUserProfileService, Haiku.API.Services.PaginationService.IPaginationService, Microsoft.Extensions.Logging.ILogger<Haiku.API.Controllers.UserProfileController>)
  fullName.vb: Haiku.API.Controllers.UserProfileController.New(Haiku.API.Services.IUserProfileServices.IUserProfileService, Haiku.API.Services.PaginationService.IPaginationService, Microsoft.Extensions.Logging.ILogger(Of Haiku.API.Controllers.UserProfileController))
  nameWithType: UserProfileController.UserProfileController(IUserProfileService, IPaginationService, ILogger<UserProfileController>)
  nameWithType.vb: UserProfileController.New(IUserProfileService, IPaginationService, ILogger(Of UserProfileController))
- uid: Haiku.API.Controllers.UserProfileController.#ctor*
  name: UserProfileController
  href: api/Haiku.API.Controllers.UserProfileController.html#Haiku_API_Controllers_UserProfileController__ctor_
  commentId: Overload:Haiku.API.Controllers.UserProfileController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Controllers.UserProfileController.UserProfileController
  fullName.vb: Haiku.API.Controllers.UserProfileController.New
  nameWithType: UserProfileController.UserProfileController
  nameWithType.vb: UserProfileController.New
- uid: Haiku.API.Controllers.UserProfileController.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List{System.Int64})
  name: GetAllUserProfilesByUserIdsAsync(List<long>)
  href: api/Haiku.API.Controllers.UserProfileController.html#Haiku_API_Controllers_UserProfileController_GetAllUserProfilesByUserIdsAsync_System_Collections_Generic_List_System_Int64__
  commentId: M:Haiku.API.Controllers.UserProfileController.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List{System.Int64})
  name.vb: GetAllUserProfilesByUserIdsAsync(List(Of Long))
  fullName: Haiku.API.Controllers.UserProfileController.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List<long>)
  fullName.vb: Haiku.API.Controllers.UserProfileController.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List(Of Long))
  nameWithType: UserProfileController.GetAllUserProfilesByUserIdsAsync(List<long>)
  nameWithType.vb: UserProfileController.GetAllUserProfilesByUserIdsAsync(List(Of Long))
- uid: Haiku.API.Controllers.UserProfileController.GetAllUserProfilesByUserIdsAsync*
  name: GetAllUserProfilesByUserIdsAsync
  href: api/Haiku.API.Controllers.UserProfileController.html#Haiku_API_Controllers_UserProfileController_GetAllUserProfilesByUserIdsAsync_
  commentId: Overload:Haiku.API.Controllers.UserProfileController.GetAllUserProfilesByUserIdsAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.UserProfileController.GetAllUserProfilesByUserIdsAsync
  nameWithType: UserProfileController.GetAllUserProfilesByUserIdsAsync
- uid: Haiku.API.Controllers.UserProfileController.GetUserProfileByIdAsync(System.Int64)
  name: GetUserProfileByIdAsync(long)
  href: api/Haiku.API.Controllers.UserProfileController.html#Haiku_API_Controllers_UserProfileController_GetUserProfileByIdAsync_System_Int64_
  commentId: M:Haiku.API.Controllers.UserProfileController.GetUserProfileByIdAsync(System.Int64)
  name.vb: GetUserProfileByIdAsync(Long)
  fullName: Haiku.API.Controllers.UserProfileController.GetUserProfileByIdAsync(long)
  fullName.vb: Haiku.API.Controllers.UserProfileController.GetUserProfileByIdAsync(Long)
  nameWithType: UserProfileController.GetUserProfileByIdAsync(long)
  nameWithType.vb: UserProfileController.GetUserProfileByIdAsync(Long)
- uid: Haiku.API.Controllers.UserProfileController.GetUserProfileByIdAsync*
  name: GetUserProfileByIdAsync
  href: api/Haiku.API.Controllers.UserProfileController.html#Haiku_API_Controllers_UserProfileController_GetUserProfileByIdAsync_
  commentId: Overload:Haiku.API.Controllers.UserProfileController.GetUserProfileByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.UserProfileController.GetUserProfileByIdAsync
  nameWithType: UserProfileController.GetUserProfileByIdAsync
- uid: Haiku.API.Controllers.UserProfileController.GetUserProfileByUserIdAsync(System.Int64)
  name: GetUserProfileByUserIdAsync(long)
  href: api/Haiku.API.Controllers.UserProfileController.html#Haiku_API_Controllers_UserProfileController_GetUserProfileByUserIdAsync_System_Int64_
  commentId: M:Haiku.API.Controllers.UserProfileController.GetUserProfileByUserIdAsync(System.Int64)
  name.vb: GetUserProfileByUserIdAsync(Long)
  fullName: Haiku.API.Controllers.UserProfileController.GetUserProfileByUserIdAsync(long)
  fullName.vb: Haiku.API.Controllers.UserProfileController.GetUserProfileByUserIdAsync(Long)
  nameWithType: UserProfileController.GetUserProfileByUserIdAsync(long)
  nameWithType.vb: UserProfileController.GetUserProfileByUserIdAsync(Long)
- uid: Haiku.API.Controllers.UserProfileController.GetUserProfileByUserIdAsync*
  name: GetUserProfileByUserIdAsync
  href: api/Haiku.API.Controllers.UserProfileController.html#Haiku_API_Controllers_UserProfileController_GetUserProfileByUserIdAsync_
  commentId: Overload:Haiku.API.Controllers.UserProfileController.GetUserProfileByUserIdAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.UserProfileController.GetUserProfileByUserIdAsync
  nameWithType: UserProfileController.GetUserProfileByUserIdAsync
- uid: Haiku.API.Controllers.UserProfileController.PostUserProfileAsync(Haiku.API.Dtos.UserProfileDto)
  name: PostUserProfileAsync(UserProfileDto)
  href: api/Haiku.API.Controllers.UserProfileController.html#Haiku_API_Controllers_UserProfileController_PostUserProfileAsync_Haiku_API_Dtos_UserProfileDto_
  commentId: M:Haiku.API.Controllers.UserProfileController.PostUserProfileAsync(Haiku.API.Dtos.UserProfileDto)
  fullName: Haiku.API.Controllers.UserProfileController.PostUserProfileAsync(Haiku.API.Dtos.UserProfileDto)
  nameWithType: UserProfileController.PostUserProfileAsync(UserProfileDto)
- uid: Haiku.API.Controllers.UserProfileController.PostUserProfileAsync*
  name: PostUserProfileAsync
  href: api/Haiku.API.Controllers.UserProfileController.html#Haiku_API_Controllers_UserProfileController_PostUserProfileAsync_
  commentId: Overload:Haiku.API.Controllers.UserProfileController.PostUserProfileAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.UserProfileController.PostUserProfileAsync
  nameWithType: UserProfileController.PostUserProfileAsync
- uid: Haiku.API.Controllers.UserProfileController.PostUserProfileImage(Microsoft.AspNetCore.Http.IFormFile)
  name: PostUserProfileImage(IFormFile)
  href: api/Haiku.API.Controllers.UserProfileController.html#Haiku_API_Controllers_UserProfileController_PostUserProfileImage_Microsoft_AspNetCore_Http_IFormFile_
  commentId: M:Haiku.API.Controllers.UserProfileController.PostUserProfileImage(Microsoft.AspNetCore.Http.IFormFile)
  fullName: Haiku.API.Controllers.UserProfileController.PostUserProfileImage(Microsoft.AspNetCore.Http.IFormFile)
  nameWithType: UserProfileController.PostUserProfileImage(IFormFile)
- uid: Haiku.API.Controllers.UserProfileController.PostUserProfileImage*
  name: PostUserProfileImage
  href: api/Haiku.API.Controllers.UserProfileController.html#Haiku_API_Controllers_UserProfileController_PostUserProfileImage_
  commentId: Overload:Haiku.API.Controllers.UserProfileController.PostUserProfileImage
  isSpec: "True"
  fullName: Haiku.API.Controllers.UserProfileController.PostUserProfileImage
  nameWithType: UserProfileController.PostUserProfileImage
- uid: Haiku.API.Controllers.UserProfileController.PutUserProfileAsync(System.Int64,Haiku.API.Dtos.UserProfileDto)
  name: PutUserProfileAsync(long, UserProfileDto)
  href: api/Haiku.API.Controllers.UserProfileController.html#Haiku_API_Controllers_UserProfileController_PutUserProfileAsync_System_Int64_Haiku_API_Dtos_UserProfileDto_
  commentId: M:Haiku.API.Controllers.UserProfileController.PutUserProfileAsync(System.Int64,Haiku.API.Dtos.UserProfileDto)
  name.vb: PutUserProfileAsync(Long, UserProfileDto)
  fullName: Haiku.API.Controllers.UserProfileController.PutUserProfileAsync(long, Haiku.API.Dtos.UserProfileDto)
  fullName.vb: Haiku.API.Controllers.UserProfileController.PutUserProfileAsync(Long, Haiku.API.Dtos.UserProfileDto)
  nameWithType: UserProfileController.PutUserProfileAsync(long, UserProfileDto)
  nameWithType.vb: UserProfileController.PutUserProfileAsync(Long, UserProfileDto)
- uid: Haiku.API.Controllers.UserProfileController.PutUserProfileAsync*
  name: PutUserProfileAsync
  href: api/Haiku.API.Controllers.UserProfileController.html#Haiku_API_Controllers_UserProfileController_PutUserProfileAsync_
  commentId: Overload:Haiku.API.Controllers.UserProfileController.PutUserProfileAsync
  isSpec: "True"
  fullName: Haiku.API.Controllers.UserProfileController.PutUserProfileAsync
  nameWithType: UserProfileController.PutUserProfileAsync
- uid: Haiku.API.Database
  name: Haiku.API.Database
  href: api/Haiku.API.Database.html
  commentId: N:Haiku.API.Database
  fullName: Haiku.API.Database
  nameWithType: Haiku.API.Database
- uid: Haiku.API.Database.HaikuAPIContext
  name: HaikuAPIContext
  href: api/Haiku.API.Database.HaikuAPIContext.html
  commentId: T:Haiku.API.Database.HaikuAPIContext
  fullName: Haiku.API.Database.HaikuAPIContext
  nameWithType: HaikuAPIContext
- uid: Haiku.API.Database.HaikuAPIContext.#ctor
  name: HaikuAPIContext()
  href: api/Haiku.API.Database.HaikuAPIContext.html#Haiku_API_Database_HaikuAPIContext__ctor
  commentId: M:Haiku.API.Database.HaikuAPIContext.#ctor
  name.vb: New()
  fullName: Haiku.API.Database.HaikuAPIContext.HaikuAPIContext()
  fullName.vb: Haiku.API.Database.HaikuAPIContext.New()
  nameWithType: HaikuAPIContext.HaikuAPIContext()
  nameWithType.vb: HaikuAPIContext.New()
- uid: Haiku.API.Database.HaikuAPIContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Haiku.API.Database.HaikuAPIContext})
  name: HaikuAPIContext(DbContextOptions<HaikuAPIContext>)
  href: api/Haiku.API.Database.HaikuAPIContext.html#Haiku_API_Database_HaikuAPIContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_Haiku_API_Database_HaikuAPIContext__
  commentId: M:Haiku.API.Database.HaikuAPIContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Haiku.API.Database.HaikuAPIContext})
  name.vb: New(DbContextOptions(Of HaikuAPIContext))
  fullName: Haiku.API.Database.HaikuAPIContext.HaikuAPIContext(Microsoft.EntityFrameworkCore.DbContextOptions<Haiku.API.Database.HaikuAPIContext>)
  fullName.vb: Haiku.API.Database.HaikuAPIContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of Haiku.API.Database.HaikuAPIContext))
  nameWithType: HaikuAPIContext.HaikuAPIContext(DbContextOptions<HaikuAPIContext>)
  nameWithType.vb: HaikuAPIContext.New(DbContextOptions(Of HaikuAPIContext))
- uid: Haiku.API.Database.HaikuAPIContext.#ctor*
  name: HaikuAPIContext
  href: api/Haiku.API.Database.HaikuAPIContext.html#Haiku_API_Database_HaikuAPIContext__ctor_
  commentId: Overload:Haiku.API.Database.HaikuAPIContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Database.HaikuAPIContext.HaikuAPIContext
  fullName.vb: Haiku.API.Database.HaikuAPIContext.New
  nameWithType: HaikuAPIContext.HaikuAPIContext
  nameWithType.vb: HaikuAPIContext.New
- uid: Haiku.API.Database.HaikuAPIContext.AuthorHaikus
  name: AuthorHaikus
  href: api/Haiku.API.Database.HaikuAPIContext.html#Haiku_API_Database_HaikuAPIContext_AuthorHaikus
  commentId: P:Haiku.API.Database.HaikuAPIContext.AuthorHaikus
  fullName: Haiku.API.Database.HaikuAPIContext.AuthorHaikus
  nameWithType: HaikuAPIContext.AuthorHaikus
- uid: Haiku.API.Database.HaikuAPIContext.AuthorHaikus*
  name: AuthorHaikus
  href: api/Haiku.API.Database.HaikuAPIContext.html#Haiku_API_Database_HaikuAPIContext_AuthorHaikus_
  commentId: Overload:Haiku.API.Database.HaikuAPIContext.AuthorHaikus
  isSpec: "True"
  fullName: Haiku.API.Database.HaikuAPIContext.AuthorHaikus
  nameWithType: HaikuAPIContext.AuthorHaikus
- uid: Haiku.API.Database.HaikuAPIContext.Authors
  name: Authors
  href: api/Haiku.API.Database.HaikuAPIContext.html#Haiku_API_Database_HaikuAPIContext_Authors
  commentId: P:Haiku.API.Database.HaikuAPIContext.Authors
  fullName: Haiku.API.Database.HaikuAPIContext.Authors
  nameWithType: HaikuAPIContext.Authors
- uid: Haiku.API.Database.HaikuAPIContext.Authors*
  name: Authors
  href: api/Haiku.API.Database.HaikuAPIContext.html#Haiku_API_Database_HaikuAPIContext_Authors_
  commentId: Overload:Haiku.API.Database.HaikuAPIContext.Authors
  isSpec: "True"
  fullName: Haiku.API.Database.HaikuAPIContext.Authors
  nameWithType: HaikuAPIContext.Authors
- uid: Haiku.API.Database.HaikuAPIContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/Haiku.API.Database.HaikuAPIContext.html#Haiku_API_Database_HaikuAPIContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:Haiku.API.Database.HaikuAPIContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: Haiku.API.Database.HaikuAPIContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: HaikuAPIContext.OnModelCreating(ModelBuilder)
- uid: Haiku.API.Database.HaikuAPIContext.OnModelCreating*
  name: OnModelCreating
  href: api/Haiku.API.Database.HaikuAPIContext.html#Haiku_API_Database_HaikuAPIContext_OnModelCreating_
  commentId: Overload:Haiku.API.Database.HaikuAPIContext.OnModelCreating
  isSpec: "True"
  fullName: Haiku.API.Database.HaikuAPIContext.OnModelCreating
  nameWithType: HaikuAPIContext.OnModelCreating
- uid: Haiku.API.Database.HaikuAPIContext.Roles
  name: Roles
  href: api/Haiku.API.Database.HaikuAPIContext.html#Haiku_API_Database_HaikuAPIContext_Roles
  commentId: P:Haiku.API.Database.HaikuAPIContext.Roles
  fullName: Haiku.API.Database.HaikuAPIContext.Roles
  nameWithType: HaikuAPIContext.Roles
- uid: Haiku.API.Database.HaikuAPIContext.Roles*
  name: Roles
  href: api/Haiku.API.Database.HaikuAPIContext.html#Haiku_API_Database_HaikuAPIContext_Roles_
  commentId: Overload:Haiku.API.Database.HaikuAPIContext.Roles
  isSpec: "True"
  fullName: Haiku.API.Database.HaikuAPIContext.Roles
  nameWithType: HaikuAPIContext.Roles
- uid: Haiku.API.Database.HaikuAPIContext.UserHaikus
  name: UserHaikus
  href: api/Haiku.API.Database.HaikuAPIContext.html#Haiku_API_Database_HaikuAPIContext_UserHaikus
  commentId: P:Haiku.API.Database.HaikuAPIContext.UserHaikus
  fullName: Haiku.API.Database.HaikuAPIContext.UserHaikus
  nameWithType: HaikuAPIContext.UserHaikus
- uid: Haiku.API.Database.HaikuAPIContext.UserHaikus*
  name: UserHaikus
  href: api/Haiku.API.Database.HaikuAPIContext.html#Haiku_API_Database_HaikuAPIContext_UserHaikus_
  commentId: Overload:Haiku.API.Database.HaikuAPIContext.UserHaikus
  isSpec: "True"
  fullName: Haiku.API.Database.HaikuAPIContext.UserHaikus
  nameWithType: HaikuAPIContext.UserHaikus
- uid: Haiku.API.Database.HaikuAPIContext.UserProfiles
  name: UserProfiles
  href: api/Haiku.API.Database.HaikuAPIContext.html#Haiku_API_Database_HaikuAPIContext_UserProfiles
  commentId: P:Haiku.API.Database.HaikuAPIContext.UserProfiles
  fullName: Haiku.API.Database.HaikuAPIContext.UserProfiles
  nameWithType: HaikuAPIContext.UserProfiles
- uid: Haiku.API.Database.HaikuAPIContext.UserProfiles*
  name: UserProfiles
  href: api/Haiku.API.Database.HaikuAPIContext.html#Haiku_API_Database_HaikuAPIContext_UserProfiles_
  commentId: Overload:Haiku.API.Database.HaikuAPIContext.UserProfiles
  isSpec: "True"
  fullName: Haiku.API.Database.HaikuAPIContext.UserProfiles
  nameWithType: HaikuAPIContext.UserProfiles
- uid: Haiku.API.Database.HaikuAPIContext.Users
  name: Users
  href: api/Haiku.API.Database.HaikuAPIContext.html#Haiku_API_Database_HaikuAPIContext_Users
  commentId: P:Haiku.API.Database.HaikuAPIContext.Users
  fullName: Haiku.API.Database.HaikuAPIContext.Users
  nameWithType: HaikuAPIContext.Users
- uid: Haiku.API.Database.HaikuAPIContext.Users*
  name: Users
  href: api/Haiku.API.Database.HaikuAPIContext.html#Haiku_API_Database_HaikuAPIContext_Users_
  commentId: Overload:Haiku.API.Database.HaikuAPIContext.Users
  isSpec: "True"
  fullName: Haiku.API.Database.HaikuAPIContext.Users
  nameWithType: HaikuAPIContext.Users
- uid: Haiku.API.Dtos
  name: Haiku.API.Dtos
  href: api/Haiku.API.Dtos.html
  commentId: N:Haiku.API.Dtos
  fullName: Haiku.API.Dtos
  nameWithType: Haiku.API.Dtos
- uid: Haiku.API.Dtos.AuthorDto
  name: AuthorDto
  href: api/Haiku.API.Dtos.AuthorDto.html
  commentId: T:Haiku.API.Dtos.AuthorDto
  fullName: Haiku.API.Dtos.AuthorDto
  nameWithType: AuthorDto
- uid: Haiku.API.Dtos.AuthorDto.Bio
  name: Bio
  href: api/Haiku.API.Dtos.AuthorDto.html#Haiku_API_Dtos_AuthorDto_Bio
  commentId: P:Haiku.API.Dtos.AuthorDto.Bio
  fullName: Haiku.API.Dtos.AuthorDto.Bio
  nameWithType: AuthorDto.Bio
- uid: Haiku.API.Dtos.AuthorDto.Bio*
  name: Bio
  href: api/Haiku.API.Dtos.AuthorDto.html#Haiku_API_Dtos_AuthorDto_Bio_
  commentId: Overload:Haiku.API.Dtos.AuthorDto.Bio
  isSpec: "True"
  fullName: Haiku.API.Dtos.AuthorDto.Bio
  nameWithType: AuthorDto.Bio
- uid: Haiku.API.Dtos.AuthorDto.Id
  name: Id
  href: api/Haiku.API.Dtos.AuthorDto.html#Haiku_API_Dtos_AuthorDto_Id
  commentId: P:Haiku.API.Dtos.AuthorDto.Id
  fullName: Haiku.API.Dtos.AuthorDto.Id
  nameWithType: AuthorDto.Id
- uid: Haiku.API.Dtos.AuthorDto.Id*
  name: Id
  href: api/Haiku.API.Dtos.AuthorDto.html#Haiku_API_Dtos_AuthorDto_Id_
  commentId: Overload:Haiku.API.Dtos.AuthorDto.Id
  isSpec: "True"
  fullName: Haiku.API.Dtos.AuthorDto.Id
  nameWithType: AuthorDto.Id
- uid: Haiku.API.Dtos.AuthorDto.Name
  name: Name
  href: api/Haiku.API.Dtos.AuthorDto.html#Haiku_API_Dtos_AuthorDto_Name
  commentId: P:Haiku.API.Dtos.AuthorDto.Name
  fullName: Haiku.API.Dtos.AuthorDto.Name
  nameWithType: AuthorDto.Name
- uid: Haiku.API.Dtos.AuthorDto.Name*
  name: Name
  href: api/Haiku.API.Dtos.AuthorDto.html#Haiku_API_Dtos_AuthorDto_Name_
  commentId: Overload:Haiku.API.Dtos.AuthorDto.Name
  isSpec: "True"
  fullName: Haiku.API.Dtos.AuthorDto.Name
  nameWithType: AuthorDto.Name
- uid: Haiku.API.Dtos.AuthorHaikuDto
  name: AuthorHaikuDto
  href: api/Haiku.API.Dtos.AuthorHaikuDto.html
  commentId: T:Haiku.API.Dtos.AuthorHaikuDto
  fullName: Haiku.API.Dtos.AuthorHaikuDto
  nameWithType: AuthorHaikuDto
- uid: Haiku.API.Dtos.AuthorHaikuDto.AuthorId
  name: AuthorId
  href: api/Haiku.API.Dtos.AuthorHaikuDto.html#Haiku_API_Dtos_AuthorHaikuDto_AuthorId
  commentId: P:Haiku.API.Dtos.AuthorHaikuDto.AuthorId
  fullName: Haiku.API.Dtos.AuthorHaikuDto.AuthorId
  nameWithType: AuthorHaikuDto.AuthorId
- uid: Haiku.API.Dtos.AuthorHaikuDto.AuthorId*
  name: AuthorId
  href: api/Haiku.API.Dtos.AuthorHaikuDto.html#Haiku_API_Dtos_AuthorHaikuDto_AuthorId_
  commentId: Overload:Haiku.API.Dtos.AuthorHaikuDto.AuthorId
  isSpec: "True"
  fullName: Haiku.API.Dtos.AuthorHaikuDto.AuthorId
  nameWithType: AuthorHaikuDto.AuthorId
- uid: Haiku.API.Dtos.AuthorHaikuDto.Id
  name: Id
  href: api/Haiku.API.Dtos.AuthorHaikuDto.html#Haiku_API_Dtos_AuthorHaikuDto_Id
  commentId: P:Haiku.API.Dtos.AuthorHaikuDto.Id
  fullName: Haiku.API.Dtos.AuthorHaikuDto.Id
  nameWithType: AuthorHaikuDto.Id
- uid: Haiku.API.Dtos.AuthorHaikuDto.Id*
  name: Id
  href: api/Haiku.API.Dtos.AuthorHaikuDto.html#Haiku_API_Dtos_AuthorHaikuDto_Id_
  commentId: Overload:Haiku.API.Dtos.AuthorHaikuDto.Id
  isSpec: "True"
  fullName: Haiku.API.Dtos.AuthorHaikuDto.Id
  nameWithType: AuthorHaikuDto.Id
- uid: Haiku.API.Dtos.AuthorHaikuDto.LineOne
  name: LineOne
  href: api/Haiku.API.Dtos.AuthorHaikuDto.html#Haiku_API_Dtos_AuthorHaikuDto_LineOne
  commentId: P:Haiku.API.Dtos.AuthorHaikuDto.LineOne
  fullName: Haiku.API.Dtos.AuthorHaikuDto.LineOne
  nameWithType: AuthorHaikuDto.LineOne
- uid: Haiku.API.Dtos.AuthorHaikuDto.LineOne*
  name: LineOne
  href: api/Haiku.API.Dtos.AuthorHaikuDto.html#Haiku_API_Dtos_AuthorHaikuDto_LineOne_
  commentId: Overload:Haiku.API.Dtos.AuthorHaikuDto.LineOne
  isSpec: "True"
  fullName: Haiku.API.Dtos.AuthorHaikuDto.LineOne
  nameWithType: AuthorHaikuDto.LineOne
- uid: Haiku.API.Dtos.AuthorHaikuDto.LineThree
  name: LineThree
  href: api/Haiku.API.Dtos.AuthorHaikuDto.html#Haiku_API_Dtos_AuthorHaikuDto_LineThree
  commentId: P:Haiku.API.Dtos.AuthorHaikuDto.LineThree
  fullName: Haiku.API.Dtos.AuthorHaikuDto.LineThree
  nameWithType: AuthorHaikuDto.LineThree
- uid: Haiku.API.Dtos.AuthorHaikuDto.LineThree*
  name: LineThree
  href: api/Haiku.API.Dtos.AuthorHaikuDto.html#Haiku_API_Dtos_AuthorHaikuDto_LineThree_
  commentId: Overload:Haiku.API.Dtos.AuthorHaikuDto.LineThree
  isSpec: "True"
  fullName: Haiku.API.Dtos.AuthorHaikuDto.LineThree
  nameWithType: AuthorHaikuDto.LineThree
- uid: Haiku.API.Dtos.AuthorHaikuDto.LineTwo
  name: LineTwo
  href: api/Haiku.API.Dtos.AuthorHaikuDto.html#Haiku_API_Dtos_AuthorHaikuDto_LineTwo
  commentId: P:Haiku.API.Dtos.AuthorHaikuDto.LineTwo
  fullName: Haiku.API.Dtos.AuthorHaikuDto.LineTwo
  nameWithType: AuthorHaikuDto.LineTwo
- uid: Haiku.API.Dtos.AuthorHaikuDto.LineTwo*
  name: LineTwo
  href: api/Haiku.API.Dtos.AuthorHaikuDto.html#Haiku_API_Dtos_AuthorHaikuDto_LineTwo_
  commentId: Overload:Haiku.API.Dtos.AuthorHaikuDto.LineTwo
  isSpec: "True"
  fullName: Haiku.API.Dtos.AuthorHaikuDto.LineTwo
  nameWithType: AuthorHaikuDto.LineTwo
- uid: Haiku.API.Dtos.AuthorHaikuDto.Title
  name: Title
  href: api/Haiku.API.Dtos.AuthorHaikuDto.html#Haiku_API_Dtos_AuthorHaikuDto_Title
  commentId: P:Haiku.API.Dtos.AuthorHaikuDto.Title
  fullName: Haiku.API.Dtos.AuthorHaikuDto.Title
  nameWithType: AuthorHaikuDto.Title
- uid: Haiku.API.Dtos.AuthorHaikuDto.Title*
  name: Title
  href: api/Haiku.API.Dtos.AuthorHaikuDto.html#Haiku_API_Dtos_AuthorHaikuDto_Title_
  commentId: Overload:Haiku.API.Dtos.AuthorHaikuDto.Title
  isSpec: "True"
  fullName: Haiku.API.Dtos.AuthorHaikuDto.Title
  nameWithType: AuthorHaikuDto.Title
- uid: Haiku.API.Dtos.JWTokenDto
  name: JWTokenDto
  href: api/Haiku.API.Dtos.JWTokenDto.html
  commentId: T:Haiku.API.Dtos.JWTokenDto
  fullName: Haiku.API.Dtos.JWTokenDto
  nameWithType: JWTokenDto
- uid: Haiku.API.Dtos.JWTokenDto.Token
  name: Token
  href: api/Haiku.API.Dtos.JWTokenDto.html#Haiku_API_Dtos_JWTokenDto_Token
  commentId: P:Haiku.API.Dtos.JWTokenDto.Token
  fullName: Haiku.API.Dtos.JWTokenDto.Token
  nameWithType: JWTokenDto.Token
- uid: Haiku.API.Dtos.JWTokenDto.Token*
  name: Token
  href: api/Haiku.API.Dtos.JWTokenDto.html#Haiku_API_Dtos_JWTokenDto_Token_
  commentId: Overload:Haiku.API.Dtos.JWTokenDto.Token
  isSpec: "True"
  fullName: Haiku.API.Dtos.JWTokenDto.Token
  nameWithType: JWTokenDto.Token
- uid: Haiku.API.Dtos.LoginDto
  name: LoginDto
  href: api/Haiku.API.Dtos.LoginDto.html
  commentId: T:Haiku.API.Dtos.LoginDto
  fullName: Haiku.API.Dtos.LoginDto
  nameWithType: LoginDto
- uid: Haiku.API.Dtos.LoginDto.Id
  name: Id
  href: api/Haiku.API.Dtos.LoginDto.html#Haiku_API_Dtos_LoginDto_Id
  commentId: P:Haiku.API.Dtos.LoginDto.Id
  fullName: Haiku.API.Dtos.LoginDto.Id
  nameWithType: LoginDto.Id
- uid: Haiku.API.Dtos.LoginDto.Id*
  name: Id
  href: api/Haiku.API.Dtos.LoginDto.html#Haiku_API_Dtos_LoginDto_Id_
  commentId: Overload:Haiku.API.Dtos.LoginDto.Id
  isSpec: "True"
  fullName: Haiku.API.Dtos.LoginDto.Id
  nameWithType: LoginDto.Id
- uid: Haiku.API.Dtos.LoginDto.Password
  name: Password
  href: api/Haiku.API.Dtos.LoginDto.html#Haiku_API_Dtos_LoginDto_Password
  commentId: P:Haiku.API.Dtos.LoginDto.Password
  fullName: Haiku.API.Dtos.LoginDto.Password
  nameWithType: LoginDto.Password
- uid: Haiku.API.Dtos.LoginDto.Password*
  name: Password
  href: api/Haiku.API.Dtos.LoginDto.html#Haiku_API_Dtos_LoginDto_Password_
  commentId: Overload:Haiku.API.Dtos.LoginDto.Password
  isSpec: "True"
  fullName: Haiku.API.Dtos.LoginDto.Password
  nameWithType: LoginDto.Password
- uid: Haiku.API.Dtos.LoginDto.Username
  name: Username
  href: api/Haiku.API.Dtos.LoginDto.html#Haiku_API_Dtos_LoginDto_Username
  commentId: P:Haiku.API.Dtos.LoginDto.Username
  fullName: Haiku.API.Dtos.LoginDto.Username
  nameWithType: LoginDto.Username
- uid: Haiku.API.Dtos.LoginDto.Username*
  name: Username
  href: api/Haiku.API.Dtos.LoginDto.html#Haiku_API_Dtos_LoginDto_Username_
  commentId: Overload:Haiku.API.Dtos.LoginDto.Username
  isSpec: "True"
  fullName: Haiku.API.Dtos.LoginDto.Username
  nameWithType: LoginDto.Username
- uid: Haiku.API.Dtos.PaginationMetaDataDto
  name: PaginationMetaDataDto
  href: api/Haiku.API.Dtos.PaginationMetaDataDto.html
  commentId: T:Haiku.API.Dtos.PaginationMetaDataDto
  fullName: Haiku.API.Dtos.PaginationMetaDataDto
  nameWithType: PaginationMetaDataDto
- uid: Haiku.API.Dtos.PaginationMetaDataDto.CurrentPage
  name: CurrentPage
  href: api/Haiku.API.Dtos.PaginationMetaDataDto.html#Haiku_API_Dtos_PaginationMetaDataDto_CurrentPage
  commentId: P:Haiku.API.Dtos.PaginationMetaDataDto.CurrentPage
  fullName: Haiku.API.Dtos.PaginationMetaDataDto.CurrentPage
  nameWithType: PaginationMetaDataDto.CurrentPage
- uid: Haiku.API.Dtos.PaginationMetaDataDto.CurrentPage*
  name: CurrentPage
  href: api/Haiku.API.Dtos.PaginationMetaDataDto.html#Haiku_API_Dtos_PaginationMetaDataDto_CurrentPage_
  commentId: Overload:Haiku.API.Dtos.PaginationMetaDataDto.CurrentPage
  isSpec: "True"
  fullName: Haiku.API.Dtos.PaginationMetaDataDto.CurrentPage
  nameWithType: PaginationMetaDataDto.CurrentPage
- uid: Haiku.API.Dtos.PaginationMetaDataDto.PageSize
  name: PageSize
  href: api/Haiku.API.Dtos.PaginationMetaDataDto.html#Haiku_API_Dtos_PaginationMetaDataDto_PageSize
  commentId: P:Haiku.API.Dtos.PaginationMetaDataDto.PageSize
  fullName: Haiku.API.Dtos.PaginationMetaDataDto.PageSize
  nameWithType: PaginationMetaDataDto.PageSize
- uid: Haiku.API.Dtos.PaginationMetaDataDto.PageSize*
  name: PageSize
  href: api/Haiku.API.Dtos.PaginationMetaDataDto.html#Haiku_API_Dtos_PaginationMetaDataDto_PageSize_
  commentId: Overload:Haiku.API.Dtos.PaginationMetaDataDto.PageSize
  isSpec: "True"
  fullName: Haiku.API.Dtos.PaginationMetaDataDto.PageSize
  nameWithType: PaginationMetaDataDto.PageSize
- uid: Haiku.API.Dtos.PaginationMetaDataDto.TotalCount
  name: TotalCount
  href: api/Haiku.API.Dtos.PaginationMetaDataDto.html#Haiku_API_Dtos_PaginationMetaDataDto_TotalCount
  commentId: P:Haiku.API.Dtos.PaginationMetaDataDto.TotalCount
  fullName: Haiku.API.Dtos.PaginationMetaDataDto.TotalCount
  nameWithType: PaginationMetaDataDto.TotalCount
- uid: Haiku.API.Dtos.PaginationMetaDataDto.TotalCount*
  name: TotalCount
  href: api/Haiku.API.Dtos.PaginationMetaDataDto.html#Haiku_API_Dtos_PaginationMetaDataDto_TotalCount_
  commentId: Overload:Haiku.API.Dtos.PaginationMetaDataDto.TotalCount
  isSpec: "True"
  fullName: Haiku.API.Dtos.PaginationMetaDataDto.TotalCount
  nameWithType: PaginationMetaDataDto.TotalCount
- uid: Haiku.API.Dtos.PaginationMetaDataDto.TotalPages
  name: TotalPages
  href: api/Haiku.API.Dtos.PaginationMetaDataDto.html#Haiku_API_Dtos_PaginationMetaDataDto_TotalPages
  commentId: P:Haiku.API.Dtos.PaginationMetaDataDto.TotalPages
  fullName: Haiku.API.Dtos.PaginationMetaDataDto.TotalPages
  nameWithType: PaginationMetaDataDto.TotalPages
- uid: Haiku.API.Dtos.PaginationMetaDataDto.TotalPages*
  name: TotalPages
  href: api/Haiku.API.Dtos.PaginationMetaDataDto.html#Haiku_API_Dtos_PaginationMetaDataDto_TotalPages_
  commentId: Overload:Haiku.API.Dtos.PaginationMetaDataDto.TotalPages
  isSpec: "True"
  fullName: Haiku.API.Dtos.PaginationMetaDataDto.TotalPages
  nameWithType: PaginationMetaDataDto.TotalPages
- uid: Haiku.API.Dtos.RegisterDto
  name: RegisterDto
  href: api/Haiku.API.Dtos.RegisterDto.html
  commentId: T:Haiku.API.Dtos.RegisterDto
  fullName: Haiku.API.Dtos.RegisterDto
  nameWithType: RegisterDto
- uid: Haiku.API.Dtos.RegisterDto.ConfirmPassword
  name: ConfirmPassword
  href: api/Haiku.API.Dtos.RegisterDto.html#Haiku_API_Dtos_RegisterDto_ConfirmPassword
  commentId: P:Haiku.API.Dtos.RegisterDto.ConfirmPassword
  fullName: Haiku.API.Dtos.RegisterDto.ConfirmPassword
  nameWithType: RegisterDto.ConfirmPassword
- uid: Haiku.API.Dtos.RegisterDto.ConfirmPassword*
  name: ConfirmPassword
  href: api/Haiku.API.Dtos.RegisterDto.html#Haiku_API_Dtos_RegisterDto_ConfirmPassword_
  commentId: Overload:Haiku.API.Dtos.RegisterDto.ConfirmPassword
  isSpec: "True"
  fullName: Haiku.API.Dtos.RegisterDto.ConfirmPassword
  nameWithType: RegisterDto.ConfirmPassword
- uid: Haiku.API.Dtos.RegisterDto.Id
  name: Id
  href: api/Haiku.API.Dtos.RegisterDto.html#Haiku_API_Dtos_RegisterDto_Id
  commentId: P:Haiku.API.Dtos.RegisterDto.Id
  fullName: Haiku.API.Dtos.RegisterDto.Id
  nameWithType: RegisterDto.Id
- uid: Haiku.API.Dtos.RegisterDto.Id*
  name: Id
  href: api/Haiku.API.Dtos.RegisterDto.html#Haiku_API_Dtos_RegisterDto_Id_
  commentId: Overload:Haiku.API.Dtos.RegisterDto.Id
  isSpec: "True"
  fullName: Haiku.API.Dtos.RegisterDto.Id
  nameWithType: RegisterDto.Id
- uid: Haiku.API.Dtos.RegisterDto.Password
  name: Password
  href: api/Haiku.API.Dtos.RegisterDto.html#Haiku_API_Dtos_RegisterDto_Password
  commentId: P:Haiku.API.Dtos.RegisterDto.Password
  fullName: Haiku.API.Dtos.RegisterDto.Password
  nameWithType: RegisterDto.Password
- uid: Haiku.API.Dtos.RegisterDto.Password*
  name: Password
  href: api/Haiku.API.Dtos.RegisterDto.html#Haiku_API_Dtos_RegisterDto_Password_
  commentId: Overload:Haiku.API.Dtos.RegisterDto.Password
  isSpec: "True"
  fullName: Haiku.API.Dtos.RegisterDto.Password
  nameWithType: RegisterDto.Password
- uid: Haiku.API.Dtos.RegisterDto.Username
  name: Username
  href: api/Haiku.API.Dtos.RegisterDto.html#Haiku_API_Dtos_RegisterDto_Username
  commentId: P:Haiku.API.Dtos.RegisterDto.Username
  fullName: Haiku.API.Dtos.RegisterDto.Username
  nameWithType: RegisterDto.Username
- uid: Haiku.API.Dtos.RegisterDto.Username*
  name: Username
  href: api/Haiku.API.Dtos.RegisterDto.html#Haiku_API_Dtos_RegisterDto_Username_
  commentId: Overload:Haiku.API.Dtos.RegisterDto.Username
  isSpec: "True"
  fullName: Haiku.API.Dtos.RegisterDto.Username
  nameWithType: RegisterDto.Username
- uid: Haiku.API.Dtos.UserDto
  name: UserDto
  href: api/Haiku.API.Dtos.UserDto.html
  commentId: T:Haiku.API.Dtos.UserDto
  fullName: Haiku.API.Dtos.UserDto
  nameWithType: UserDto
- uid: Haiku.API.Dtos.UserDto.Id
  name: Id
  href: api/Haiku.API.Dtos.UserDto.html#Haiku_API_Dtos_UserDto_Id
  commentId: P:Haiku.API.Dtos.UserDto.Id
  fullName: Haiku.API.Dtos.UserDto.Id
  nameWithType: UserDto.Id
- uid: Haiku.API.Dtos.UserDto.Id*
  name: Id
  href: api/Haiku.API.Dtos.UserDto.html#Haiku_API_Dtos_UserDto_Id_
  commentId: Overload:Haiku.API.Dtos.UserDto.Id
  isSpec: "True"
  fullName: Haiku.API.Dtos.UserDto.Id
  nameWithType: UserDto.Id
- uid: Haiku.API.Dtos.UserDto.Password
  name: Password
  href: api/Haiku.API.Dtos.UserDto.html#Haiku_API_Dtos_UserDto_Password
  commentId: P:Haiku.API.Dtos.UserDto.Password
  fullName: Haiku.API.Dtos.UserDto.Password
  nameWithType: UserDto.Password
- uid: Haiku.API.Dtos.UserDto.Password*
  name: Password
  href: api/Haiku.API.Dtos.UserDto.html#Haiku_API_Dtos_UserDto_Password_
  commentId: Overload:Haiku.API.Dtos.UserDto.Password
  isSpec: "True"
  fullName: Haiku.API.Dtos.UserDto.Password
  nameWithType: UserDto.Password
- uid: Haiku.API.Dtos.UserDto.RoleId
  name: RoleId
  href: api/Haiku.API.Dtos.UserDto.html#Haiku_API_Dtos_UserDto_RoleId
  commentId: P:Haiku.API.Dtos.UserDto.RoleId
  fullName: Haiku.API.Dtos.UserDto.RoleId
  nameWithType: UserDto.RoleId
- uid: Haiku.API.Dtos.UserDto.RoleId*
  name: RoleId
  href: api/Haiku.API.Dtos.UserDto.html#Haiku_API_Dtos_UserDto_RoleId_
  commentId: Overload:Haiku.API.Dtos.UserDto.RoleId
  isSpec: "True"
  fullName: Haiku.API.Dtos.UserDto.RoleId
  nameWithType: UserDto.RoleId
- uid: Haiku.API.Dtos.UserDto.Username
  name: Username
  href: api/Haiku.API.Dtos.UserDto.html#Haiku_API_Dtos_UserDto_Username
  commentId: P:Haiku.API.Dtos.UserDto.Username
  fullName: Haiku.API.Dtos.UserDto.Username
  nameWithType: UserDto.Username
- uid: Haiku.API.Dtos.UserDto.Username*
  name: Username
  href: api/Haiku.API.Dtos.UserDto.html#Haiku_API_Dtos_UserDto_Username_
  commentId: Overload:Haiku.API.Dtos.UserDto.Username
  isSpec: "True"
  fullName: Haiku.API.Dtos.UserDto.Username
  nameWithType: UserDto.Username
- uid: Haiku.API.Dtos.UserHaikuDto
  name: UserHaikuDto
  href: api/Haiku.API.Dtos.UserHaikuDto.html
  commentId: T:Haiku.API.Dtos.UserHaikuDto
  fullName: Haiku.API.Dtos.UserHaikuDto
  nameWithType: UserHaikuDto
- uid: Haiku.API.Dtos.UserHaikuDto.Id
  name: Id
  href: api/Haiku.API.Dtos.UserHaikuDto.html#Haiku_API_Dtos_UserHaikuDto_Id
  commentId: P:Haiku.API.Dtos.UserHaikuDto.Id
  fullName: Haiku.API.Dtos.UserHaikuDto.Id
  nameWithType: UserHaikuDto.Id
- uid: Haiku.API.Dtos.UserHaikuDto.Id*
  name: Id
  href: api/Haiku.API.Dtos.UserHaikuDto.html#Haiku_API_Dtos_UserHaikuDto_Id_
  commentId: Overload:Haiku.API.Dtos.UserHaikuDto.Id
  isSpec: "True"
  fullName: Haiku.API.Dtos.UserHaikuDto.Id
  nameWithType: UserHaikuDto.Id
- uid: Haiku.API.Dtos.UserHaikuDto.LineOne
  name: LineOne
  href: api/Haiku.API.Dtos.UserHaikuDto.html#Haiku_API_Dtos_UserHaikuDto_LineOne
  commentId: P:Haiku.API.Dtos.UserHaikuDto.LineOne
  fullName: Haiku.API.Dtos.UserHaikuDto.LineOne
  nameWithType: UserHaikuDto.LineOne
- uid: Haiku.API.Dtos.UserHaikuDto.LineOne*
  name: LineOne
  href: api/Haiku.API.Dtos.UserHaikuDto.html#Haiku_API_Dtos_UserHaikuDto_LineOne_
  commentId: Overload:Haiku.API.Dtos.UserHaikuDto.LineOne
  isSpec: "True"
  fullName: Haiku.API.Dtos.UserHaikuDto.LineOne
  nameWithType: UserHaikuDto.LineOne
- uid: Haiku.API.Dtos.UserHaikuDto.LineThree
  name: LineThree
  href: api/Haiku.API.Dtos.UserHaikuDto.html#Haiku_API_Dtos_UserHaikuDto_LineThree
  commentId: P:Haiku.API.Dtos.UserHaikuDto.LineThree
  fullName: Haiku.API.Dtos.UserHaikuDto.LineThree
  nameWithType: UserHaikuDto.LineThree
- uid: Haiku.API.Dtos.UserHaikuDto.LineThree*
  name: LineThree
  href: api/Haiku.API.Dtos.UserHaikuDto.html#Haiku_API_Dtos_UserHaikuDto_LineThree_
  commentId: Overload:Haiku.API.Dtos.UserHaikuDto.LineThree
  isSpec: "True"
  fullName: Haiku.API.Dtos.UserHaikuDto.LineThree
  nameWithType: UserHaikuDto.LineThree
- uid: Haiku.API.Dtos.UserHaikuDto.LineTwo
  name: LineTwo
  href: api/Haiku.API.Dtos.UserHaikuDto.html#Haiku_API_Dtos_UserHaikuDto_LineTwo
  commentId: P:Haiku.API.Dtos.UserHaikuDto.LineTwo
  fullName: Haiku.API.Dtos.UserHaikuDto.LineTwo
  nameWithType: UserHaikuDto.LineTwo
- uid: Haiku.API.Dtos.UserHaikuDto.LineTwo*
  name: LineTwo
  href: api/Haiku.API.Dtos.UserHaikuDto.html#Haiku_API_Dtos_UserHaikuDto_LineTwo_
  commentId: Overload:Haiku.API.Dtos.UserHaikuDto.LineTwo
  isSpec: "True"
  fullName: Haiku.API.Dtos.UserHaikuDto.LineTwo
  nameWithType: UserHaikuDto.LineTwo
- uid: Haiku.API.Dtos.UserHaikuDto.Title
  name: Title
  href: api/Haiku.API.Dtos.UserHaikuDto.html#Haiku_API_Dtos_UserHaikuDto_Title
  commentId: P:Haiku.API.Dtos.UserHaikuDto.Title
  fullName: Haiku.API.Dtos.UserHaikuDto.Title
  nameWithType: UserHaikuDto.Title
- uid: Haiku.API.Dtos.UserHaikuDto.Title*
  name: Title
  href: api/Haiku.API.Dtos.UserHaikuDto.html#Haiku_API_Dtos_UserHaikuDto_Title_
  commentId: Overload:Haiku.API.Dtos.UserHaikuDto.Title
  isSpec: "True"
  fullName: Haiku.API.Dtos.UserHaikuDto.Title
  nameWithType: UserHaikuDto.Title
- uid: Haiku.API.Dtos.UserHaikuDto.UserId
  name: UserId
  href: api/Haiku.API.Dtos.UserHaikuDto.html#Haiku_API_Dtos_UserHaikuDto_UserId
  commentId: P:Haiku.API.Dtos.UserHaikuDto.UserId
  fullName: Haiku.API.Dtos.UserHaikuDto.UserId
  nameWithType: UserHaikuDto.UserId
- uid: Haiku.API.Dtos.UserHaikuDto.UserId*
  name: UserId
  href: api/Haiku.API.Dtos.UserHaikuDto.html#Haiku_API_Dtos_UserHaikuDto_UserId_
  commentId: Overload:Haiku.API.Dtos.UserHaikuDto.UserId
  isSpec: "True"
  fullName: Haiku.API.Dtos.UserHaikuDto.UserId
  nameWithType: UserHaikuDto.UserId
- uid: Haiku.API.Dtos.UserProfileDto
  name: UserProfileDto
  href: api/Haiku.API.Dtos.UserProfileDto.html
  commentId: T:Haiku.API.Dtos.UserProfileDto
  fullName: Haiku.API.Dtos.UserProfileDto
  nameWithType: UserProfileDto
- uid: Haiku.API.Dtos.UserProfileDto.Bio
  name: Bio
  href: api/Haiku.API.Dtos.UserProfileDto.html#Haiku_API_Dtos_UserProfileDto_Bio
  commentId: P:Haiku.API.Dtos.UserProfileDto.Bio
  fullName: Haiku.API.Dtos.UserProfileDto.Bio
  nameWithType: UserProfileDto.Bio
- uid: Haiku.API.Dtos.UserProfileDto.Bio*
  name: Bio
  href: api/Haiku.API.Dtos.UserProfileDto.html#Haiku_API_Dtos_UserProfileDto_Bio_
  commentId: Overload:Haiku.API.Dtos.UserProfileDto.Bio
  isSpec: "True"
  fullName: Haiku.API.Dtos.UserProfileDto.Bio
  nameWithType: UserProfileDto.Bio
- uid: Haiku.API.Dtos.UserProfileDto.Id
  name: Id
  href: api/Haiku.API.Dtos.UserProfileDto.html#Haiku_API_Dtos_UserProfileDto_Id
  commentId: P:Haiku.API.Dtos.UserProfileDto.Id
  fullName: Haiku.API.Dtos.UserProfileDto.Id
  nameWithType: UserProfileDto.Id
- uid: Haiku.API.Dtos.UserProfileDto.Id*
  name: Id
  href: api/Haiku.API.Dtos.UserProfileDto.html#Haiku_API_Dtos_UserProfileDto_Id_
  commentId: Overload:Haiku.API.Dtos.UserProfileDto.Id
  isSpec: "True"
  fullName: Haiku.API.Dtos.UserProfileDto.Id
  nameWithType: UserProfileDto.Id
- uid: Haiku.API.Dtos.UserProfileDto.ImageUrl
  name: ImageUrl
  href: api/Haiku.API.Dtos.UserProfileDto.html#Haiku_API_Dtos_UserProfileDto_ImageUrl
  commentId: P:Haiku.API.Dtos.UserProfileDto.ImageUrl
  fullName: Haiku.API.Dtos.UserProfileDto.ImageUrl
  nameWithType: UserProfileDto.ImageUrl
- uid: Haiku.API.Dtos.UserProfileDto.ImageUrl*
  name: ImageUrl
  href: api/Haiku.API.Dtos.UserProfileDto.html#Haiku_API_Dtos_UserProfileDto_ImageUrl_
  commentId: Overload:Haiku.API.Dtos.UserProfileDto.ImageUrl
  isSpec: "True"
  fullName: Haiku.API.Dtos.UserProfileDto.ImageUrl
  nameWithType: UserProfileDto.ImageUrl
- uid: Haiku.API.Dtos.UserProfileDto.UserId
  name: UserId
  href: api/Haiku.API.Dtos.UserProfileDto.html#Haiku_API_Dtos_UserProfileDto_UserId
  commentId: P:Haiku.API.Dtos.UserProfileDto.UserId
  fullName: Haiku.API.Dtos.UserProfileDto.UserId
  nameWithType: UserProfileDto.UserId
- uid: Haiku.API.Dtos.UserProfileDto.UserId*
  name: UserId
  href: api/Haiku.API.Dtos.UserProfileDto.html#Haiku_API_Dtos_UserProfileDto_UserId_
  commentId: Overload:Haiku.API.Dtos.UserProfileDto.UserId
  isSpec: "True"
  fullName: Haiku.API.Dtos.UserProfileDto.UserId
  nameWithType: UserProfileDto.UserId
- uid: Haiku.API.Exceptions
  name: Haiku.API.Exceptions
  href: api/Haiku.API.Exceptions.html
  commentId: N:Haiku.API.Exceptions
  fullName: Haiku.API.Exceptions
  nameWithType: Haiku.API.Exceptions
- uid: Haiku.API.Exceptions.NotFoundException
  name: NotFoundException
  href: api/Haiku.API.Exceptions.NotFoundException.html
  commentId: T:Haiku.API.Exceptions.NotFoundException
  fullName: Haiku.API.Exceptions.NotFoundException
  nameWithType: NotFoundException
- uid: Haiku.API.Exceptions.NotFoundException.#ctor(System.String)
  name: NotFoundException(string)
  href: api/Haiku.API.Exceptions.NotFoundException.html#Haiku_API_Exceptions_NotFoundException__ctor_System_String_
  commentId: M:Haiku.API.Exceptions.NotFoundException.#ctor(System.String)
  name.vb: New(String)
  fullName: Haiku.API.Exceptions.NotFoundException.NotFoundException(string)
  fullName.vb: Haiku.API.Exceptions.NotFoundException.New(String)
  nameWithType: NotFoundException.NotFoundException(string)
  nameWithType.vb: NotFoundException.New(String)
- uid: Haiku.API.Exceptions.NotFoundException.#ctor*
  name: NotFoundException
  href: api/Haiku.API.Exceptions.NotFoundException.html#Haiku_API_Exceptions_NotFoundException__ctor_
  commentId: Overload:Haiku.API.Exceptions.NotFoundException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Exceptions.NotFoundException.NotFoundException
  fullName.vb: Haiku.API.Exceptions.NotFoundException.New
  nameWithType: NotFoundException.NotFoundException
  nameWithType.vb: NotFoundException.New
- uid: Haiku.API.Exceptions.NotSavedException
  name: NotSavedException
  href: api/Haiku.API.Exceptions.NotSavedException.html
  commentId: T:Haiku.API.Exceptions.NotSavedException
  fullName: Haiku.API.Exceptions.NotSavedException
  nameWithType: NotSavedException
- uid: Haiku.API.Exceptions.NotSavedException.#ctor(System.String)
  name: NotSavedException(string)
  href: api/Haiku.API.Exceptions.NotSavedException.html#Haiku_API_Exceptions_NotSavedException__ctor_System_String_
  commentId: M:Haiku.API.Exceptions.NotSavedException.#ctor(System.String)
  name.vb: New(String)
  fullName: Haiku.API.Exceptions.NotSavedException.NotSavedException(string)
  fullName.vb: Haiku.API.Exceptions.NotSavedException.New(String)
  nameWithType: NotSavedException.NotSavedException(string)
  nameWithType.vb: NotSavedException.New(String)
- uid: Haiku.API.Exceptions.NotSavedException.#ctor*
  name: NotSavedException
  href: api/Haiku.API.Exceptions.NotSavedException.html#Haiku_API_Exceptions_NotSavedException__ctor_
  commentId: Overload:Haiku.API.Exceptions.NotSavedException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Exceptions.NotSavedException.NotSavedException
  fullName.vb: Haiku.API.Exceptions.NotSavedException.New
  nameWithType: NotSavedException.NotSavedException
  nameWithType.vb: NotSavedException.New
- uid: Haiku.API.Exceptions.UsernameAlreadyTakenException
  name: UsernameAlreadyTakenException
  href: api/Haiku.API.Exceptions.UsernameAlreadyTakenException.html
  commentId: T:Haiku.API.Exceptions.UsernameAlreadyTakenException
  fullName: Haiku.API.Exceptions.UsernameAlreadyTakenException
  nameWithType: UsernameAlreadyTakenException
- uid: Haiku.API.Exceptions.UsernameAlreadyTakenException.#ctor(System.String)
  name: UsernameAlreadyTakenException(string)
  href: api/Haiku.API.Exceptions.UsernameAlreadyTakenException.html#Haiku_API_Exceptions_UsernameAlreadyTakenException__ctor_System_String_
  commentId: M:Haiku.API.Exceptions.UsernameAlreadyTakenException.#ctor(System.String)
  name.vb: New(String)
  fullName: Haiku.API.Exceptions.UsernameAlreadyTakenException.UsernameAlreadyTakenException(string)
  fullName.vb: Haiku.API.Exceptions.UsernameAlreadyTakenException.New(String)
  nameWithType: UsernameAlreadyTakenException.UsernameAlreadyTakenException(string)
  nameWithType.vb: UsernameAlreadyTakenException.New(String)
- uid: Haiku.API.Exceptions.UsernameAlreadyTakenException.#ctor*
  name: UsernameAlreadyTakenException
  href: api/Haiku.API.Exceptions.UsernameAlreadyTakenException.html#Haiku_API_Exceptions_UsernameAlreadyTakenException__ctor_
  commentId: Overload:Haiku.API.Exceptions.UsernameAlreadyTakenException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Exceptions.UsernameAlreadyTakenException.UsernameAlreadyTakenException
  fullName.vb: Haiku.API.Exceptions.UsernameAlreadyTakenException.New
  nameWithType: UsernameAlreadyTakenException.UsernameAlreadyTakenException
  nameWithType.vb: UsernameAlreadyTakenException.New
- uid: Haiku.API.Mapping
  name: Haiku.API.Mapping
  href: api/Haiku.API.Mapping.html
  commentId: N:Haiku.API.Mapping
  fullName: Haiku.API.Mapping
  nameWithType: Haiku.API.Mapping
- uid: Haiku.API.Mapping.AuthorHaikuMapping
  name: AuthorHaikuMapping
  href: api/Haiku.API.Mapping.AuthorHaikuMapping.html
  commentId: T:Haiku.API.Mapping.AuthorHaikuMapping
  fullName: Haiku.API.Mapping.AuthorHaikuMapping
  nameWithType: AuthorHaikuMapping
- uid: Haiku.API.Mapping.AuthorHaikuMapping.#ctor
  name: AuthorHaikuMapping()
  href: api/Haiku.API.Mapping.AuthorHaikuMapping.html#Haiku_API_Mapping_AuthorHaikuMapping__ctor
  commentId: M:Haiku.API.Mapping.AuthorHaikuMapping.#ctor
  name.vb: New()
  fullName: Haiku.API.Mapping.AuthorHaikuMapping.AuthorHaikuMapping()
  fullName.vb: Haiku.API.Mapping.AuthorHaikuMapping.New()
  nameWithType: AuthorHaikuMapping.AuthorHaikuMapping()
  nameWithType.vb: AuthorHaikuMapping.New()
- uid: Haiku.API.Mapping.AuthorHaikuMapping.#ctor*
  name: AuthorHaikuMapping
  href: api/Haiku.API.Mapping.AuthorHaikuMapping.html#Haiku_API_Mapping_AuthorHaikuMapping__ctor_
  commentId: Overload:Haiku.API.Mapping.AuthorHaikuMapping.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Mapping.AuthorHaikuMapping.AuthorHaikuMapping
  fullName.vb: Haiku.API.Mapping.AuthorHaikuMapping.New
  nameWithType: AuthorHaikuMapping.AuthorHaikuMapping
  nameWithType.vb: AuthorHaikuMapping.New
- uid: Haiku.API.Mapping.AuthorMapping
  name: AuthorMapping
  href: api/Haiku.API.Mapping.AuthorMapping.html
  commentId: T:Haiku.API.Mapping.AuthorMapping
  fullName: Haiku.API.Mapping.AuthorMapping
  nameWithType: AuthorMapping
- uid: Haiku.API.Mapping.AuthorMapping.#ctor
  name: AuthorMapping()
  href: api/Haiku.API.Mapping.AuthorMapping.html#Haiku_API_Mapping_AuthorMapping__ctor
  commentId: M:Haiku.API.Mapping.AuthorMapping.#ctor
  name.vb: New()
  fullName: Haiku.API.Mapping.AuthorMapping.AuthorMapping()
  fullName.vb: Haiku.API.Mapping.AuthorMapping.New()
  nameWithType: AuthorMapping.AuthorMapping()
  nameWithType.vb: AuthorMapping.New()
- uid: Haiku.API.Mapping.AuthorMapping.#ctor*
  name: AuthorMapping
  href: api/Haiku.API.Mapping.AuthorMapping.html#Haiku_API_Mapping_AuthorMapping__ctor_
  commentId: Overload:Haiku.API.Mapping.AuthorMapping.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Mapping.AuthorMapping.AuthorMapping
  fullName.vb: Haiku.API.Mapping.AuthorMapping.New
  nameWithType: AuthorMapping.AuthorMapping
  nameWithType.vb: AuthorMapping.New
- uid: Haiku.API.Mapping.UserHaikuMapping
  name: UserHaikuMapping
  href: api/Haiku.API.Mapping.UserHaikuMapping.html
  commentId: T:Haiku.API.Mapping.UserHaikuMapping
  fullName: Haiku.API.Mapping.UserHaikuMapping
  nameWithType: UserHaikuMapping
- uid: Haiku.API.Mapping.UserHaikuMapping.#ctor
  name: UserHaikuMapping()
  href: api/Haiku.API.Mapping.UserHaikuMapping.html#Haiku_API_Mapping_UserHaikuMapping__ctor
  commentId: M:Haiku.API.Mapping.UserHaikuMapping.#ctor
  name.vb: New()
  fullName: Haiku.API.Mapping.UserHaikuMapping.UserHaikuMapping()
  fullName.vb: Haiku.API.Mapping.UserHaikuMapping.New()
  nameWithType: UserHaikuMapping.UserHaikuMapping()
  nameWithType.vb: UserHaikuMapping.New()
- uid: Haiku.API.Mapping.UserHaikuMapping.#ctor*
  name: UserHaikuMapping
  href: api/Haiku.API.Mapping.UserHaikuMapping.html#Haiku_API_Mapping_UserHaikuMapping__ctor_
  commentId: Overload:Haiku.API.Mapping.UserHaikuMapping.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Mapping.UserHaikuMapping.UserHaikuMapping
  fullName.vb: Haiku.API.Mapping.UserHaikuMapping.New
  nameWithType: UserHaikuMapping.UserHaikuMapping
  nameWithType.vb: UserHaikuMapping.New
- uid: Haiku.API.Mapping.UserMapping
  name: UserMapping
  href: api/Haiku.API.Mapping.UserMapping.html
  commentId: T:Haiku.API.Mapping.UserMapping
  fullName: Haiku.API.Mapping.UserMapping
  nameWithType: UserMapping
- uid: Haiku.API.Mapping.UserMapping.#ctor
  name: UserMapping()
  href: api/Haiku.API.Mapping.UserMapping.html#Haiku_API_Mapping_UserMapping__ctor
  commentId: M:Haiku.API.Mapping.UserMapping.#ctor
  name.vb: New()
  fullName: Haiku.API.Mapping.UserMapping.UserMapping()
  fullName.vb: Haiku.API.Mapping.UserMapping.New()
  nameWithType: UserMapping.UserMapping()
  nameWithType.vb: UserMapping.New()
- uid: Haiku.API.Mapping.UserMapping.#ctor*
  name: UserMapping
  href: api/Haiku.API.Mapping.UserMapping.html#Haiku_API_Mapping_UserMapping__ctor_
  commentId: Overload:Haiku.API.Mapping.UserMapping.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Mapping.UserMapping.UserMapping
  fullName.vb: Haiku.API.Mapping.UserMapping.New
  nameWithType: UserMapping.UserMapping
  nameWithType.vb: UserMapping.New
- uid: Haiku.API.Mapping.UserProfileMapping
  name: UserProfileMapping
  href: api/Haiku.API.Mapping.UserProfileMapping.html
  commentId: T:Haiku.API.Mapping.UserProfileMapping
  fullName: Haiku.API.Mapping.UserProfileMapping
  nameWithType: UserProfileMapping
- uid: Haiku.API.Mapping.UserProfileMapping.#ctor
  name: UserProfileMapping()
  href: api/Haiku.API.Mapping.UserProfileMapping.html#Haiku_API_Mapping_UserProfileMapping__ctor
  commentId: M:Haiku.API.Mapping.UserProfileMapping.#ctor
  name.vb: New()
  fullName: Haiku.API.Mapping.UserProfileMapping.UserProfileMapping()
  fullName.vb: Haiku.API.Mapping.UserProfileMapping.New()
  nameWithType: UserProfileMapping.UserProfileMapping()
  nameWithType.vb: UserProfileMapping.New()
- uid: Haiku.API.Mapping.UserProfileMapping.#ctor*
  name: UserProfileMapping
  href: api/Haiku.API.Mapping.UserProfileMapping.html#Haiku_API_Mapping_UserProfileMapping__ctor_
  commentId: Overload:Haiku.API.Mapping.UserProfileMapping.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Mapping.UserProfileMapping.UserProfileMapping
  fullName.vb: Haiku.API.Mapping.UserProfileMapping.New
  nameWithType: UserProfileMapping.UserProfileMapping
  nameWithType.vb: UserProfileMapping.New
- uid: Haiku.API.Migrations
  name: Haiku.API.Migrations
  href: api/Haiku.API.Migrations.html
  commentId: N:Haiku.API.Migrations
  fullName: Haiku.API.Migrations
  nameWithType: Haiku.API.Migrations
- uid: Haiku.API.Migrations.Test
  name: Test
  href: api/Haiku.API.Migrations.Test.html
  commentId: T:Haiku.API.Migrations.Test
  fullName: Haiku.API.Migrations.Test
  nameWithType: Test
- uid: Haiku.API.Migrations.Test.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/Haiku.API.Migrations.Test.html#Haiku_API_Migrations_Test_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:Haiku.API.Migrations.Test.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: Haiku.API.Migrations.Test.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: Test.BuildTargetModel(ModelBuilder)
- uid: Haiku.API.Migrations.Test.BuildTargetModel*
  name: BuildTargetModel
  href: api/Haiku.API.Migrations.Test.html#Haiku_API_Migrations_Test_BuildTargetModel_
  commentId: Overload:Haiku.API.Migrations.Test.BuildTargetModel
  isSpec: "True"
  fullName: Haiku.API.Migrations.Test.BuildTargetModel
  nameWithType: Test.BuildTargetModel
- uid: Haiku.API.Migrations.Test.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/Haiku.API.Migrations.Test.html#Haiku_API_Migrations_Test_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Haiku.API.Migrations.Test.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Haiku.API.Migrations.Test.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: Test.Down(MigrationBuilder)
- uid: Haiku.API.Migrations.Test.Down*
  name: Down
  href: api/Haiku.API.Migrations.Test.html#Haiku_API_Migrations_Test_Down_
  commentId: Overload:Haiku.API.Migrations.Test.Down
  isSpec: "True"
  fullName: Haiku.API.Migrations.Test.Down
  nameWithType: Test.Down
- uid: Haiku.API.Migrations.Test.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/Haiku.API.Migrations.Test.html#Haiku_API_Migrations_Test_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Haiku.API.Migrations.Test.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Haiku.API.Migrations.Test.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: Test.Up(MigrationBuilder)
- uid: Haiku.API.Migrations.Test.Up*
  name: Up
  href: api/Haiku.API.Migrations.Test.html#Haiku_API_Migrations_Test_Up_
  commentId: Overload:Haiku.API.Migrations.Test.Up
  isSpec: "True"
  fullName: Haiku.API.Migrations.Test.Up
  nameWithType: Test.Up
- uid: Haiku.API.Models
  name: Haiku.API.Models
  href: api/Haiku.API.Models.html
  commentId: N:Haiku.API.Models
  fullName: Haiku.API.Models
  nameWithType: Haiku.API.Models
- uid: Haiku.API.Models.Author
  name: Author
  href: api/Haiku.API.Models.Author.html
  commentId: T:Haiku.API.Models.Author
  fullName: Haiku.API.Models.Author
  nameWithType: Author
- uid: Haiku.API.Models.Author.AuthorHaikus
  name: AuthorHaikus
  href: api/Haiku.API.Models.Author.html#Haiku_API_Models_Author_AuthorHaikus
  commentId: P:Haiku.API.Models.Author.AuthorHaikus
  fullName: Haiku.API.Models.Author.AuthorHaikus
  nameWithType: Author.AuthorHaikus
- uid: Haiku.API.Models.Author.AuthorHaikus*
  name: AuthorHaikus
  href: api/Haiku.API.Models.Author.html#Haiku_API_Models_Author_AuthorHaikus_
  commentId: Overload:Haiku.API.Models.Author.AuthorHaikus
  isSpec: "True"
  fullName: Haiku.API.Models.Author.AuthorHaikus
  nameWithType: Author.AuthorHaikus
- uid: Haiku.API.Models.Author.Bio
  name: Bio
  href: api/Haiku.API.Models.Author.html#Haiku_API_Models_Author_Bio
  commentId: P:Haiku.API.Models.Author.Bio
  fullName: Haiku.API.Models.Author.Bio
  nameWithType: Author.Bio
- uid: Haiku.API.Models.Author.Bio*
  name: Bio
  href: api/Haiku.API.Models.Author.html#Haiku_API_Models_Author_Bio_
  commentId: Overload:Haiku.API.Models.Author.Bio
  isSpec: "True"
  fullName: Haiku.API.Models.Author.Bio
  nameWithType: Author.Bio
- uid: Haiku.API.Models.Author.Id
  name: Id
  href: api/Haiku.API.Models.Author.html#Haiku_API_Models_Author_Id
  commentId: P:Haiku.API.Models.Author.Id
  fullName: Haiku.API.Models.Author.Id
  nameWithType: Author.Id
- uid: Haiku.API.Models.Author.Id*
  name: Id
  href: api/Haiku.API.Models.Author.html#Haiku_API_Models_Author_Id_
  commentId: Overload:Haiku.API.Models.Author.Id
  isSpec: "True"
  fullName: Haiku.API.Models.Author.Id
  nameWithType: Author.Id
- uid: Haiku.API.Models.Author.Name
  name: Name
  href: api/Haiku.API.Models.Author.html#Haiku_API_Models_Author_Name
  commentId: P:Haiku.API.Models.Author.Name
  fullName: Haiku.API.Models.Author.Name
  nameWithType: Author.Name
- uid: Haiku.API.Models.Author.Name*
  name: Name
  href: api/Haiku.API.Models.Author.html#Haiku_API_Models_Author_Name_
  commentId: Overload:Haiku.API.Models.Author.Name
  isSpec: "True"
  fullName: Haiku.API.Models.Author.Name
  nameWithType: Author.Name
- uid: Haiku.API.Models.AuthorHaiku
  name: AuthorHaiku
  href: api/Haiku.API.Models.AuthorHaiku.html
  commentId: T:Haiku.API.Models.AuthorHaiku
  fullName: Haiku.API.Models.AuthorHaiku
  nameWithType: AuthorHaiku
- uid: Haiku.API.Models.AuthorHaiku.Author
  name: Author
  href: api/Haiku.API.Models.AuthorHaiku.html#Haiku_API_Models_AuthorHaiku_Author
  commentId: P:Haiku.API.Models.AuthorHaiku.Author
  fullName: Haiku.API.Models.AuthorHaiku.Author
  nameWithType: AuthorHaiku.Author
- uid: Haiku.API.Models.AuthorHaiku.Author*
  name: Author
  href: api/Haiku.API.Models.AuthorHaiku.html#Haiku_API_Models_AuthorHaiku_Author_
  commentId: Overload:Haiku.API.Models.AuthorHaiku.Author
  isSpec: "True"
  fullName: Haiku.API.Models.AuthorHaiku.Author
  nameWithType: AuthorHaiku.Author
- uid: Haiku.API.Models.AuthorHaiku.AuthorId
  name: AuthorId
  href: api/Haiku.API.Models.AuthorHaiku.html#Haiku_API_Models_AuthorHaiku_AuthorId
  commentId: P:Haiku.API.Models.AuthorHaiku.AuthorId
  fullName: Haiku.API.Models.AuthorHaiku.AuthorId
  nameWithType: AuthorHaiku.AuthorId
- uid: Haiku.API.Models.AuthorHaiku.AuthorId*
  name: AuthorId
  href: api/Haiku.API.Models.AuthorHaiku.html#Haiku_API_Models_AuthorHaiku_AuthorId_
  commentId: Overload:Haiku.API.Models.AuthorHaiku.AuthorId
  isSpec: "True"
  fullName: Haiku.API.Models.AuthorHaiku.AuthorId
  nameWithType: AuthorHaiku.AuthorId
- uid: Haiku.API.Models.AuthorHaiku.Id
  name: Id
  href: api/Haiku.API.Models.AuthorHaiku.html#Haiku_API_Models_AuthorHaiku_Id
  commentId: P:Haiku.API.Models.AuthorHaiku.Id
  fullName: Haiku.API.Models.AuthorHaiku.Id
  nameWithType: AuthorHaiku.Id
- uid: Haiku.API.Models.AuthorHaiku.Id*
  name: Id
  href: api/Haiku.API.Models.AuthorHaiku.html#Haiku_API_Models_AuthorHaiku_Id_
  commentId: Overload:Haiku.API.Models.AuthorHaiku.Id
  isSpec: "True"
  fullName: Haiku.API.Models.AuthorHaiku.Id
  nameWithType: AuthorHaiku.Id
- uid: Haiku.API.Models.AuthorHaiku.LineOne
  name: LineOne
  href: api/Haiku.API.Models.AuthorHaiku.html#Haiku_API_Models_AuthorHaiku_LineOne
  commentId: P:Haiku.API.Models.AuthorHaiku.LineOne
  fullName: Haiku.API.Models.AuthorHaiku.LineOne
  nameWithType: AuthorHaiku.LineOne
- uid: Haiku.API.Models.AuthorHaiku.LineOne*
  name: LineOne
  href: api/Haiku.API.Models.AuthorHaiku.html#Haiku_API_Models_AuthorHaiku_LineOne_
  commentId: Overload:Haiku.API.Models.AuthorHaiku.LineOne
  isSpec: "True"
  fullName: Haiku.API.Models.AuthorHaiku.LineOne
  nameWithType: AuthorHaiku.LineOne
- uid: Haiku.API.Models.AuthorHaiku.LineThree
  name: LineThree
  href: api/Haiku.API.Models.AuthorHaiku.html#Haiku_API_Models_AuthorHaiku_LineThree
  commentId: P:Haiku.API.Models.AuthorHaiku.LineThree
  fullName: Haiku.API.Models.AuthorHaiku.LineThree
  nameWithType: AuthorHaiku.LineThree
- uid: Haiku.API.Models.AuthorHaiku.LineThree*
  name: LineThree
  href: api/Haiku.API.Models.AuthorHaiku.html#Haiku_API_Models_AuthorHaiku_LineThree_
  commentId: Overload:Haiku.API.Models.AuthorHaiku.LineThree
  isSpec: "True"
  fullName: Haiku.API.Models.AuthorHaiku.LineThree
  nameWithType: AuthorHaiku.LineThree
- uid: Haiku.API.Models.AuthorHaiku.LineTwo
  name: LineTwo
  href: api/Haiku.API.Models.AuthorHaiku.html#Haiku_API_Models_AuthorHaiku_LineTwo
  commentId: P:Haiku.API.Models.AuthorHaiku.LineTwo
  fullName: Haiku.API.Models.AuthorHaiku.LineTwo
  nameWithType: AuthorHaiku.LineTwo
- uid: Haiku.API.Models.AuthorHaiku.LineTwo*
  name: LineTwo
  href: api/Haiku.API.Models.AuthorHaiku.html#Haiku_API_Models_AuthorHaiku_LineTwo_
  commentId: Overload:Haiku.API.Models.AuthorHaiku.LineTwo
  isSpec: "True"
  fullName: Haiku.API.Models.AuthorHaiku.LineTwo
  nameWithType: AuthorHaiku.LineTwo
- uid: Haiku.API.Models.AuthorHaiku.Title
  name: Title
  href: api/Haiku.API.Models.AuthorHaiku.html#Haiku_API_Models_AuthorHaiku_Title
  commentId: P:Haiku.API.Models.AuthorHaiku.Title
  fullName: Haiku.API.Models.AuthorHaiku.Title
  nameWithType: AuthorHaiku.Title
- uid: Haiku.API.Models.AuthorHaiku.Title*
  name: Title
  href: api/Haiku.API.Models.AuthorHaiku.html#Haiku_API_Models_AuthorHaiku_Title_
  commentId: Overload:Haiku.API.Models.AuthorHaiku.Title
  isSpec: "True"
  fullName: Haiku.API.Models.AuthorHaiku.Title
  nameWithType: AuthorHaiku.Title
- uid: Haiku.API.Models.ErrorDetails
  name: ErrorDetails
  href: api/Haiku.API.Models.ErrorDetails.html
  commentId: T:Haiku.API.Models.ErrorDetails
  fullName: Haiku.API.Models.ErrorDetails
  nameWithType: ErrorDetails
- uid: Haiku.API.Models.ErrorDetails.Message
  name: Message
  href: api/Haiku.API.Models.ErrorDetails.html#Haiku_API_Models_ErrorDetails_Message
  commentId: P:Haiku.API.Models.ErrorDetails.Message
  fullName: Haiku.API.Models.ErrorDetails.Message
  nameWithType: ErrorDetails.Message
- uid: Haiku.API.Models.ErrorDetails.Message*
  name: Message
  href: api/Haiku.API.Models.ErrorDetails.html#Haiku_API_Models_ErrorDetails_Message_
  commentId: Overload:Haiku.API.Models.ErrorDetails.Message
  isSpec: "True"
  fullName: Haiku.API.Models.ErrorDetails.Message
  nameWithType: ErrorDetails.Message
- uid: Haiku.API.Models.ErrorDetails.StatusCode
  name: StatusCode
  href: api/Haiku.API.Models.ErrorDetails.html#Haiku_API_Models_ErrorDetails_StatusCode
  commentId: P:Haiku.API.Models.ErrorDetails.StatusCode
  fullName: Haiku.API.Models.ErrorDetails.StatusCode
  nameWithType: ErrorDetails.StatusCode
- uid: Haiku.API.Models.ErrorDetails.StatusCode*
  name: StatusCode
  href: api/Haiku.API.Models.ErrorDetails.html#Haiku_API_Models_ErrorDetails_StatusCode_
  commentId: Overload:Haiku.API.Models.ErrorDetails.StatusCode
  isSpec: "True"
  fullName: Haiku.API.Models.ErrorDetails.StatusCode
  nameWithType: ErrorDetails.StatusCode
- uid: Haiku.API.Models.ErrorDetails.ToXml
  name: ToXml()
  href: api/Haiku.API.Models.ErrorDetails.html#Haiku_API_Models_ErrorDetails_ToXml
  commentId: M:Haiku.API.Models.ErrorDetails.ToXml
  fullName: Haiku.API.Models.ErrorDetails.ToXml()
  nameWithType: ErrorDetails.ToXml()
- uid: Haiku.API.Models.ErrorDetails.ToXml*
  name: ToXml
  href: api/Haiku.API.Models.ErrorDetails.html#Haiku_API_Models_ErrorDetails_ToXml_
  commentId: Overload:Haiku.API.Models.ErrorDetails.ToXml
  isSpec: "True"
  fullName: Haiku.API.Models.ErrorDetails.ToXml
  nameWithType: ErrorDetails.ToXml
- uid: Haiku.API.Models.JWToken
  name: JWToken
  href: api/Haiku.API.Models.JWToken.html
  commentId: T:Haiku.API.Models.JWToken
  fullName: Haiku.API.Models.JWToken
  nameWithType: JWToken
- uid: Haiku.API.Models.JWToken.ExpiresIn
  name: ExpiresIn
  href: api/Haiku.API.Models.JWToken.html#Haiku_API_Models_JWToken_ExpiresIn
  commentId: P:Haiku.API.Models.JWToken.ExpiresIn
  fullName: Haiku.API.Models.JWToken.ExpiresIn
  nameWithType: JWToken.ExpiresIn
- uid: Haiku.API.Models.JWToken.ExpiresIn*
  name: ExpiresIn
  href: api/Haiku.API.Models.JWToken.html#Haiku_API_Models_JWToken_ExpiresIn_
  commentId: Overload:Haiku.API.Models.JWToken.ExpiresIn
  isSpec: "True"
  fullName: Haiku.API.Models.JWToken.ExpiresIn
  nameWithType: JWToken.ExpiresIn
- uid: Haiku.API.Models.JWToken.Id
  name: Id
  href: api/Haiku.API.Models.JWToken.html#Haiku_API_Models_JWToken_Id
  commentId: P:Haiku.API.Models.JWToken.Id
  fullName: Haiku.API.Models.JWToken.Id
  nameWithType: JWToken.Id
- uid: Haiku.API.Models.JWToken.Id*
  name: Id
  href: api/Haiku.API.Models.JWToken.html#Haiku_API_Models_JWToken_Id_
  commentId: Overload:Haiku.API.Models.JWToken.Id
  isSpec: "True"
  fullName: Haiku.API.Models.JWToken.Id
  nameWithType: JWToken.Id
- uid: Haiku.API.Models.JWToken.Token
  name: Token
  href: api/Haiku.API.Models.JWToken.html#Haiku_API_Models_JWToken_Token
  commentId: P:Haiku.API.Models.JWToken.Token
  fullName: Haiku.API.Models.JWToken.Token
  nameWithType: JWToken.Token
- uid: Haiku.API.Models.JWToken.Token*
  name: Token
  href: api/Haiku.API.Models.JWToken.html#Haiku_API_Models_JWToken_Token_
  commentId: Overload:Haiku.API.Models.JWToken.Token
  isSpec: "True"
  fullName: Haiku.API.Models.JWToken.Token
  nameWithType: JWToken.Token
- uid: Haiku.API.Models.JWToken.UserId
  name: UserId
  href: api/Haiku.API.Models.JWToken.html#Haiku_API_Models_JWToken_UserId
  commentId: P:Haiku.API.Models.JWToken.UserId
  fullName: Haiku.API.Models.JWToken.UserId
  nameWithType: JWToken.UserId
- uid: Haiku.API.Models.JWToken.UserId*
  name: UserId
  href: api/Haiku.API.Models.JWToken.html#Haiku_API_Models_JWToken_UserId_
  commentId: Overload:Haiku.API.Models.JWToken.UserId
  isSpec: "True"
  fullName: Haiku.API.Models.JWToken.UserId
  nameWithType: JWToken.UserId
- uid: Haiku.API.Models.JwtSettings
  name: JwtSettings
  href: api/Haiku.API.Models.JwtSettings.html
  commentId: T:Haiku.API.Models.JwtSettings
  fullName: Haiku.API.Models.JwtSettings
  nameWithType: JwtSettings
- uid: Haiku.API.Models.JwtSettings.Audience
  name: Audience
  href: api/Haiku.API.Models.JwtSettings.html#Haiku_API_Models_JwtSettings_Audience
  commentId: P:Haiku.API.Models.JwtSettings.Audience
  fullName: Haiku.API.Models.JwtSettings.Audience
  nameWithType: JwtSettings.Audience
- uid: Haiku.API.Models.JwtSettings.Audience*
  name: Audience
  href: api/Haiku.API.Models.JwtSettings.html#Haiku_API_Models_JwtSettings_Audience_
  commentId: Overload:Haiku.API.Models.JwtSettings.Audience
  isSpec: "True"
  fullName: Haiku.API.Models.JwtSettings.Audience
  nameWithType: JwtSettings.Audience
- uid: Haiku.API.Models.JwtSettings.Issuer
  name: Issuer
  href: api/Haiku.API.Models.JwtSettings.html#Haiku_API_Models_JwtSettings_Issuer
  commentId: P:Haiku.API.Models.JwtSettings.Issuer
  fullName: Haiku.API.Models.JwtSettings.Issuer
  nameWithType: JwtSettings.Issuer
- uid: Haiku.API.Models.JwtSettings.Issuer*
  name: Issuer
  href: api/Haiku.API.Models.JwtSettings.html#Haiku_API_Models_JwtSettings_Issuer_
  commentId: Overload:Haiku.API.Models.JwtSettings.Issuer
  isSpec: "True"
  fullName: Haiku.API.Models.JwtSettings.Issuer
  nameWithType: JwtSettings.Issuer
- uid: Haiku.API.Models.JwtSettings.Key
  name: Key
  href: api/Haiku.API.Models.JwtSettings.html#Haiku_API_Models_JwtSettings_Key
  commentId: P:Haiku.API.Models.JwtSettings.Key
  fullName: Haiku.API.Models.JwtSettings.Key
  nameWithType: JwtSettings.Key
- uid: Haiku.API.Models.JwtSettings.Key*
  name: Key
  href: api/Haiku.API.Models.JwtSettings.html#Haiku_API_Models_JwtSettings_Key_
  commentId: Overload:Haiku.API.Models.JwtSettings.Key
  isSpec: "True"
  fullName: Haiku.API.Models.JwtSettings.Key
  nameWithType: JwtSettings.Key
- uid: Haiku.API.Models.Login
  name: Login
  href: api/Haiku.API.Models.Login.html
  commentId: T:Haiku.API.Models.Login
  fullName: Haiku.API.Models.Login
  nameWithType: Login
- uid: Haiku.API.Models.Login.Id
  name: Id
  href: api/Haiku.API.Models.Login.html#Haiku_API_Models_Login_Id
  commentId: P:Haiku.API.Models.Login.Id
  fullName: Haiku.API.Models.Login.Id
  nameWithType: Login.Id
- uid: Haiku.API.Models.Login.Id*
  name: Id
  href: api/Haiku.API.Models.Login.html#Haiku_API_Models_Login_Id_
  commentId: Overload:Haiku.API.Models.Login.Id
  isSpec: "True"
  fullName: Haiku.API.Models.Login.Id
  nameWithType: Login.Id
- uid: Haiku.API.Models.Login.Password
  name: Password
  href: api/Haiku.API.Models.Login.html#Haiku_API_Models_Login_Password
  commentId: P:Haiku.API.Models.Login.Password
  fullName: Haiku.API.Models.Login.Password
  nameWithType: Login.Password
- uid: Haiku.API.Models.Login.Password*
  name: Password
  href: api/Haiku.API.Models.Login.html#Haiku_API_Models_Login_Password_
  commentId: Overload:Haiku.API.Models.Login.Password
  isSpec: "True"
  fullName: Haiku.API.Models.Login.Password
  nameWithType: Login.Password
- uid: Haiku.API.Models.Login.Username
  name: Username
  href: api/Haiku.API.Models.Login.html#Haiku_API_Models_Login_Username
  commentId: P:Haiku.API.Models.Login.Username
  fullName: Haiku.API.Models.Login.Username
  nameWithType: Login.Username
- uid: Haiku.API.Models.Login.Username*
  name: Username
  href: api/Haiku.API.Models.Login.html#Haiku_API_Models_Login_Username_
  commentId: Overload:Haiku.API.Models.Login.Username
  isSpec: "True"
  fullName: Haiku.API.Models.Login.Username
  nameWithType: Login.Username
- uid: Haiku.API.Models.PaginationMetaData
  name: PaginationMetaData
  href: api/Haiku.API.Models.PaginationMetaData.html
  commentId: T:Haiku.API.Models.PaginationMetaData
  fullName: Haiku.API.Models.PaginationMetaData
  nameWithType: PaginationMetaData
- uid: Haiku.API.Models.PaginationMetaData.CurrentPage
  name: CurrentPage
  href: api/Haiku.API.Models.PaginationMetaData.html#Haiku_API_Models_PaginationMetaData_CurrentPage
  commentId: P:Haiku.API.Models.PaginationMetaData.CurrentPage
  fullName: Haiku.API.Models.PaginationMetaData.CurrentPage
  nameWithType: PaginationMetaData.CurrentPage
- uid: Haiku.API.Models.PaginationMetaData.CurrentPage*
  name: CurrentPage
  href: api/Haiku.API.Models.PaginationMetaData.html#Haiku_API_Models_PaginationMetaData_CurrentPage_
  commentId: Overload:Haiku.API.Models.PaginationMetaData.CurrentPage
  isSpec: "True"
  fullName: Haiku.API.Models.PaginationMetaData.CurrentPage
  nameWithType: PaginationMetaData.CurrentPage
- uid: Haiku.API.Models.PaginationMetaData.PageSize
  name: PageSize
  href: api/Haiku.API.Models.PaginationMetaData.html#Haiku_API_Models_PaginationMetaData_PageSize
  commentId: P:Haiku.API.Models.PaginationMetaData.PageSize
  fullName: Haiku.API.Models.PaginationMetaData.PageSize
  nameWithType: PaginationMetaData.PageSize
- uid: Haiku.API.Models.PaginationMetaData.PageSize*
  name: PageSize
  href: api/Haiku.API.Models.PaginationMetaData.html#Haiku_API_Models_PaginationMetaData_PageSize_
  commentId: Overload:Haiku.API.Models.PaginationMetaData.PageSize
  isSpec: "True"
  fullName: Haiku.API.Models.PaginationMetaData.PageSize
  nameWithType: PaginationMetaData.PageSize
- uid: Haiku.API.Models.PaginationMetaData.TotalCount
  name: TotalCount
  href: api/Haiku.API.Models.PaginationMetaData.html#Haiku_API_Models_PaginationMetaData_TotalCount
  commentId: P:Haiku.API.Models.PaginationMetaData.TotalCount
  fullName: Haiku.API.Models.PaginationMetaData.TotalCount
  nameWithType: PaginationMetaData.TotalCount
- uid: Haiku.API.Models.PaginationMetaData.TotalCount*
  name: TotalCount
  href: api/Haiku.API.Models.PaginationMetaData.html#Haiku_API_Models_PaginationMetaData_TotalCount_
  commentId: Overload:Haiku.API.Models.PaginationMetaData.TotalCount
  isSpec: "True"
  fullName: Haiku.API.Models.PaginationMetaData.TotalCount
  nameWithType: PaginationMetaData.TotalCount
- uid: Haiku.API.Models.PaginationMetaData.TotalPages
  name: TotalPages
  href: api/Haiku.API.Models.PaginationMetaData.html#Haiku_API_Models_PaginationMetaData_TotalPages
  commentId: P:Haiku.API.Models.PaginationMetaData.TotalPages
  fullName: Haiku.API.Models.PaginationMetaData.TotalPages
  nameWithType: PaginationMetaData.TotalPages
- uid: Haiku.API.Models.PaginationMetaData.TotalPages*
  name: TotalPages
  href: api/Haiku.API.Models.PaginationMetaData.html#Haiku_API_Models_PaginationMetaData_TotalPages_
  commentId: Overload:Haiku.API.Models.PaginationMetaData.TotalPages
  isSpec: "True"
  fullName: Haiku.API.Models.PaginationMetaData.TotalPages
  nameWithType: PaginationMetaData.TotalPages
- uid: Haiku.API.Models.Register
  name: Register
  href: api/Haiku.API.Models.Register.html
  commentId: T:Haiku.API.Models.Register
  fullName: Haiku.API.Models.Register
  nameWithType: Register
- uid: Haiku.API.Models.Register.ConfirmPassword
  name: ConfirmPassword
  href: api/Haiku.API.Models.Register.html#Haiku_API_Models_Register_ConfirmPassword
  commentId: P:Haiku.API.Models.Register.ConfirmPassword
  fullName: Haiku.API.Models.Register.ConfirmPassword
  nameWithType: Register.ConfirmPassword
- uid: Haiku.API.Models.Register.ConfirmPassword*
  name: ConfirmPassword
  href: api/Haiku.API.Models.Register.html#Haiku_API_Models_Register_ConfirmPassword_
  commentId: Overload:Haiku.API.Models.Register.ConfirmPassword
  isSpec: "True"
  fullName: Haiku.API.Models.Register.ConfirmPassword
  nameWithType: Register.ConfirmPassword
- uid: Haiku.API.Models.Register.Id
  name: Id
  href: api/Haiku.API.Models.Register.html#Haiku_API_Models_Register_Id
  commentId: P:Haiku.API.Models.Register.Id
  fullName: Haiku.API.Models.Register.Id
  nameWithType: Register.Id
- uid: Haiku.API.Models.Register.Id*
  name: Id
  href: api/Haiku.API.Models.Register.html#Haiku_API_Models_Register_Id_
  commentId: Overload:Haiku.API.Models.Register.Id
  isSpec: "True"
  fullName: Haiku.API.Models.Register.Id
  nameWithType: Register.Id
- uid: Haiku.API.Models.Register.Password
  name: Password
  href: api/Haiku.API.Models.Register.html#Haiku_API_Models_Register_Password
  commentId: P:Haiku.API.Models.Register.Password
  fullName: Haiku.API.Models.Register.Password
  nameWithType: Register.Password
- uid: Haiku.API.Models.Register.Password*
  name: Password
  href: api/Haiku.API.Models.Register.html#Haiku_API_Models_Register_Password_
  commentId: Overload:Haiku.API.Models.Register.Password
  isSpec: "True"
  fullName: Haiku.API.Models.Register.Password
  nameWithType: Register.Password
- uid: Haiku.API.Models.Register.Username
  name: Username
  href: api/Haiku.API.Models.Register.html#Haiku_API_Models_Register_Username
  commentId: P:Haiku.API.Models.Register.Username
  fullName: Haiku.API.Models.Register.Username
  nameWithType: Register.Username
- uid: Haiku.API.Models.Register.Username*
  name: Username
  href: api/Haiku.API.Models.Register.html#Haiku_API_Models_Register_Username_
  commentId: Overload:Haiku.API.Models.Register.Username
  isSpec: "True"
  fullName: Haiku.API.Models.Register.Username
  nameWithType: Register.Username
- uid: Haiku.API.Models.Role
  name: Role
  href: api/Haiku.API.Models.Role.html
  commentId: T:Haiku.API.Models.Role
  fullName: Haiku.API.Models.Role
  nameWithType: Role
- uid: Haiku.API.Models.Role.Id
  name: Id
  href: api/Haiku.API.Models.Role.html#Haiku_API_Models_Role_Id
  commentId: P:Haiku.API.Models.Role.Id
  fullName: Haiku.API.Models.Role.Id
  nameWithType: Role.Id
- uid: Haiku.API.Models.Role.Id*
  name: Id
  href: api/Haiku.API.Models.Role.html#Haiku_API_Models_Role_Id_
  commentId: Overload:Haiku.API.Models.Role.Id
  isSpec: "True"
  fullName: Haiku.API.Models.Role.Id
  nameWithType: Role.Id
- uid: Haiku.API.Models.Role.Title
  name: Title
  href: api/Haiku.API.Models.Role.html#Haiku_API_Models_Role_Title
  commentId: P:Haiku.API.Models.Role.Title
  fullName: Haiku.API.Models.Role.Title
  nameWithType: Role.Title
- uid: Haiku.API.Models.Role.Title*
  name: Title
  href: api/Haiku.API.Models.Role.html#Haiku_API_Models_Role_Title_
  commentId: Overload:Haiku.API.Models.Role.Title
  isSpec: "True"
  fullName: Haiku.API.Models.Role.Title
  nameWithType: Role.Title
- uid: Haiku.API.Models.Role.Users
  name: Users
  href: api/Haiku.API.Models.Role.html#Haiku_API_Models_Role_Users
  commentId: P:Haiku.API.Models.Role.Users
  fullName: Haiku.API.Models.Role.Users
  nameWithType: Role.Users
- uid: Haiku.API.Models.Role.Users*
  name: Users
  href: api/Haiku.API.Models.Role.html#Haiku_API_Models_Role_Users_
  commentId: Overload:Haiku.API.Models.Role.Users
  isSpec: "True"
  fullName: Haiku.API.Models.Role.Users
  nameWithType: Role.Users
- uid: Haiku.API.Models.User
  name: User
  href: api/Haiku.API.Models.User.html
  commentId: T:Haiku.API.Models.User
  fullName: Haiku.API.Models.User
  nameWithType: User
- uid: Haiku.API.Models.User.Id
  name: Id
  href: api/Haiku.API.Models.User.html#Haiku_API_Models_User_Id
  commentId: P:Haiku.API.Models.User.Id
  fullName: Haiku.API.Models.User.Id
  nameWithType: User.Id
- uid: Haiku.API.Models.User.Id*
  name: Id
  href: api/Haiku.API.Models.User.html#Haiku_API_Models_User_Id_
  commentId: Overload:Haiku.API.Models.User.Id
  isSpec: "True"
  fullName: Haiku.API.Models.User.Id
  nameWithType: User.Id
- uid: Haiku.API.Models.User.Password
  name: Password
  href: api/Haiku.API.Models.User.html#Haiku_API_Models_User_Password
  commentId: P:Haiku.API.Models.User.Password
  fullName: Haiku.API.Models.User.Password
  nameWithType: User.Password
- uid: Haiku.API.Models.User.Password*
  name: Password
  href: api/Haiku.API.Models.User.html#Haiku_API_Models_User_Password_
  commentId: Overload:Haiku.API.Models.User.Password
  isSpec: "True"
  fullName: Haiku.API.Models.User.Password
  nameWithType: User.Password
- uid: Haiku.API.Models.User.Profile
  name: Profile
  href: api/Haiku.API.Models.User.html#Haiku_API_Models_User_Profile
  commentId: P:Haiku.API.Models.User.Profile
  fullName: Haiku.API.Models.User.Profile
  nameWithType: User.Profile
- uid: Haiku.API.Models.User.Profile*
  name: Profile
  href: api/Haiku.API.Models.User.html#Haiku_API_Models_User_Profile_
  commentId: Overload:Haiku.API.Models.User.Profile
  isSpec: "True"
  fullName: Haiku.API.Models.User.Profile
  nameWithType: User.Profile
- uid: Haiku.API.Models.User.RoleId
  name: RoleId
  href: api/Haiku.API.Models.User.html#Haiku_API_Models_User_RoleId
  commentId: P:Haiku.API.Models.User.RoleId
  fullName: Haiku.API.Models.User.RoleId
  nameWithType: User.RoleId
- uid: Haiku.API.Models.User.RoleId*
  name: RoleId
  href: api/Haiku.API.Models.User.html#Haiku_API_Models_User_RoleId_
  commentId: Overload:Haiku.API.Models.User.RoleId
  isSpec: "True"
  fullName: Haiku.API.Models.User.RoleId
  nameWithType: User.RoleId
- uid: Haiku.API.Models.User.UserHaikus
  name: UserHaikus
  href: api/Haiku.API.Models.User.html#Haiku_API_Models_User_UserHaikus
  commentId: P:Haiku.API.Models.User.UserHaikus
  fullName: Haiku.API.Models.User.UserHaikus
  nameWithType: User.UserHaikus
- uid: Haiku.API.Models.User.UserHaikus*
  name: UserHaikus
  href: api/Haiku.API.Models.User.html#Haiku_API_Models_User_UserHaikus_
  commentId: Overload:Haiku.API.Models.User.UserHaikus
  isSpec: "True"
  fullName: Haiku.API.Models.User.UserHaikus
  nameWithType: User.UserHaikus
- uid: Haiku.API.Models.User.UserRole
  name: UserRole
  href: api/Haiku.API.Models.User.html#Haiku_API_Models_User_UserRole
  commentId: P:Haiku.API.Models.User.UserRole
  fullName: Haiku.API.Models.User.UserRole
  nameWithType: User.UserRole
- uid: Haiku.API.Models.User.UserRole*
  name: UserRole
  href: api/Haiku.API.Models.User.html#Haiku_API_Models_User_UserRole_
  commentId: Overload:Haiku.API.Models.User.UserRole
  isSpec: "True"
  fullName: Haiku.API.Models.User.UserRole
  nameWithType: User.UserRole
- uid: Haiku.API.Models.User.Username
  name: Username
  href: api/Haiku.API.Models.User.html#Haiku_API_Models_User_Username
  commentId: P:Haiku.API.Models.User.Username
  fullName: Haiku.API.Models.User.Username
  nameWithType: User.Username
- uid: Haiku.API.Models.User.Username*
  name: Username
  href: api/Haiku.API.Models.User.html#Haiku_API_Models_User_Username_
  commentId: Overload:Haiku.API.Models.User.Username
  isSpec: "True"
  fullName: Haiku.API.Models.User.Username
  nameWithType: User.Username
- uid: Haiku.API.Models.UserHaiku
  name: UserHaiku
  href: api/Haiku.API.Models.UserHaiku.html
  commentId: T:Haiku.API.Models.UserHaiku
  fullName: Haiku.API.Models.UserHaiku
  nameWithType: UserHaiku
- uid: Haiku.API.Models.UserHaiku.Id
  name: Id
  href: api/Haiku.API.Models.UserHaiku.html#Haiku_API_Models_UserHaiku_Id
  commentId: P:Haiku.API.Models.UserHaiku.Id
  fullName: Haiku.API.Models.UserHaiku.Id
  nameWithType: UserHaiku.Id
- uid: Haiku.API.Models.UserHaiku.Id*
  name: Id
  href: api/Haiku.API.Models.UserHaiku.html#Haiku_API_Models_UserHaiku_Id_
  commentId: Overload:Haiku.API.Models.UserHaiku.Id
  isSpec: "True"
  fullName: Haiku.API.Models.UserHaiku.Id
  nameWithType: UserHaiku.Id
- uid: Haiku.API.Models.UserHaiku.LineOne
  name: LineOne
  href: api/Haiku.API.Models.UserHaiku.html#Haiku_API_Models_UserHaiku_LineOne
  commentId: P:Haiku.API.Models.UserHaiku.LineOne
  fullName: Haiku.API.Models.UserHaiku.LineOne
  nameWithType: UserHaiku.LineOne
- uid: Haiku.API.Models.UserHaiku.LineOne*
  name: LineOne
  href: api/Haiku.API.Models.UserHaiku.html#Haiku_API_Models_UserHaiku_LineOne_
  commentId: Overload:Haiku.API.Models.UserHaiku.LineOne
  isSpec: "True"
  fullName: Haiku.API.Models.UserHaiku.LineOne
  nameWithType: UserHaiku.LineOne
- uid: Haiku.API.Models.UserHaiku.LineThree
  name: LineThree
  href: api/Haiku.API.Models.UserHaiku.html#Haiku_API_Models_UserHaiku_LineThree
  commentId: P:Haiku.API.Models.UserHaiku.LineThree
  fullName: Haiku.API.Models.UserHaiku.LineThree
  nameWithType: UserHaiku.LineThree
- uid: Haiku.API.Models.UserHaiku.LineThree*
  name: LineThree
  href: api/Haiku.API.Models.UserHaiku.html#Haiku_API_Models_UserHaiku_LineThree_
  commentId: Overload:Haiku.API.Models.UserHaiku.LineThree
  isSpec: "True"
  fullName: Haiku.API.Models.UserHaiku.LineThree
  nameWithType: UserHaiku.LineThree
- uid: Haiku.API.Models.UserHaiku.LineTwo
  name: LineTwo
  href: api/Haiku.API.Models.UserHaiku.html#Haiku_API_Models_UserHaiku_LineTwo
  commentId: P:Haiku.API.Models.UserHaiku.LineTwo
  fullName: Haiku.API.Models.UserHaiku.LineTwo
  nameWithType: UserHaiku.LineTwo
- uid: Haiku.API.Models.UserHaiku.LineTwo*
  name: LineTwo
  href: api/Haiku.API.Models.UserHaiku.html#Haiku_API_Models_UserHaiku_LineTwo_
  commentId: Overload:Haiku.API.Models.UserHaiku.LineTwo
  isSpec: "True"
  fullName: Haiku.API.Models.UserHaiku.LineTwo
  nameWithType: UserHaiku.LineTwo
- uid: Haiku.API.Models.UserHaiku.Title
  name: Title
  href: api/Haiku.API.Models.UserHaiku.html#Haiku_API_Models_UserHaiku_Title
  commentId: P:Haiku.API.Models.UserHaiku.Title
  fullName: Haiku.API.Models.UserHaiku.Title
  nameWithType: UserHaiku.Title
- uid: Haiku.API.Models.UserHaiku.Title*
  name: Title
  href: api/Haiku.API.Models.UserHaiku.html#Haiku_API_Models_UserHaiku_Title_
  commentId: Overload:Haiku.API.Models.UserHaiku.Title
  isSpec: "True"
  fullName: Haiku.API.Models.UserHaiku.Title
  nameWithType: UserHaiku.Title
- uid: Haiku.API.Models.UserHaiku.User
  name: User
  href: api/Haiku.API.Models.UserHaiku.html#Haiku_API_Models_UserHaiku_User
  commentId: P:Haiku.API.Models.UserHaiku.User
  fullName: Haiku.API.Models.UserHaiku.User
  nameWithType: UserHaiku.User
- uid: Haiku.API.Models.UserHaiku.User*
  name: User
  href: api/Haiku.API.Models.UserHaiku.html#Haiku_API_Models_UserHaiku_User_
  commentId: Overload:Haiku.API.Models.UserHaiku.User
  isSpec: "True"
  fullName: Haiku.API.Models.UserHaiku.User
  nameWithType: UserHaiku.User
- uid: Haiku.API.Models.UserHaiku.UserId
  name: UserId
  href: api/Haiku.API.Models.UserHaiku.html#Haiku_API_Models_UserHaiku_UserId
  commentId: P:Haiku.API.Models.UserHaiku.UserId
  fullName: Haiku.API.Models.UserHaiku.UserId
  nameWithType: UserHaiku.UserId
- uid: Haiku.API.Models.UserHaiku.UserId*
  name: UserId
  href: api/Haiku.API.Models.UserHaiku.html#Haiku_API_Models_UserHaiku_UserId_
  commentId: Overload:Haiku.API.Models.UserHaiku.UserId
  isSpec: "True"
  fullName: Haiku.API.Models.UserHaiku.UserId
  nameWithType: UserHaiku.UserId
- uid: Haiku.API.Models.UserProfile
  name: UserProfile
  href: api/Haiku.API.Models.UserProfile.html
  commentId: T:Haiku.API.Models.UserProfile
  fullName: Haiku.API.Models.UserProfile
  nameWithType: UserProfile
- uid: Haiku.API.Models.UserProfile.Bio
  name: Bio
  href: api/Haiku.API.Models.UserProfile.html#Haiku_API_Models_UserProfile_Bio
  commentId: P:Haiku.API.Models.UserProfile.Bio
  fullName: Haiku.API.Models.UserProfile.Bio
  nameWithType: UserProfile.Bio
- uid: Haiku.API.Models.UserProfile.Bio*
  name: Bio
  href: api/Haiku.API.Models.UserProfile.html#Haiku_API_Models_UserProfile_Bio_
  commentId: Overload:Haiku.API.Models.UserProfile.Bio
  isSpec: "True"
  fullName: Haiku.API.Models.UserProfile.Bio
  nameWithType: UserProfile.Bio
- uid: Haiku.API.Models.UserProfile.Id
  name: Id
  href: api/Haiku.API.Models.UserProfile.html#Haiku_API_Models_UserProfile_Id
  commentId: P:Haiku.API.Models.UserProfile.Id
  fullName: Haiku.API.Models.UserProfile.Id
  nameWithType: UserProfile.Id
- uid: Haiku.API.Models.UserProfile.Id*
  name: Id
  href: api/Haiku.API.Models.UserProfile.html#Haiku_API_Models_UserProfile_Id_
  commentId: Overload:Haiku.API.Models.UserProfile.Id
  isSpec: "True"
  fullName: Haiku.API.Models.UserProfile.Id
  nameWithType: UserProfile.Id
- uid: Haiku.API.Models.UserProfile.ImageUrl
  name: ImageUrl
  href: api/Haiku.API.Models.UserProfile.html#Haiku_API_Models_UserProfile_ImageUrl
  commentId: P:Haiku.API.Models.UserProfile.ImageUrl
  fullName: Haiku.API.Models.UserProfile.ImageUrl
  nameWithType: UserProfile.ImageUrl
- uid: Haiku.API.Models.UserProfile.ImageUrl*
  name: ImageUrl
  href: api/Haiku.API.Models.UserProfile.html#Haiku_API_Models_UserProfile_ImageUrl_
  commentId: Overload:Haiku.API.Models.UserProfile.ImageUrl
  isSpec: "True"
  fullName: Haiku.API.Models.UserProfile.ImageUrl
  nameWithType: UserProfile.ImageUrl
- uid: Haiku.API.Models.UserProfile.User
  name: User
  href: api/Haiku.API.Models.UserProfile.html#Haiku_API_Models_UserProfile_User
  commentId: P:Haiku.API.Models.UserProfile.User
  fullName: Haiku.API.Models.UserProfile.User
  nameWithType: UserProfile.User
- uid: Haiku.API.Models.UserProfile.User*
  name: User
  href: api/Haiku.API.Models.UserProfile.html#Haiku_API_Models_UserProfile_User_
  commentId: Overload:Haiku.API.Models.UserProfile.User
  isSpec: "True"
  fullName: Haiku.API.Models.UserProfile.User
  nameWithType: UserProfile.User
- uid: Haiku.API.Models.UserProfile.UserId
  name: UserId
  href: api/Haiku.API.Models.UserProfile.html#Haiku_API_Models_UserProfile_UserId
  commentId: P:Haiku.API.Models.UserProfile.UserId
  fullName: Haiku.API.Models.UserProfile.UserId
  nameWithType: UserProfile.UserId
- uid: Haiku.API.Models.UserProfile.UserId*
  name: UserId
  href: api/Haiku.API.Models.UserProfile.html#Haiku_API_Models_UserProfile_UserId_
  commentId: Overload:Haiku.API.Models.UserProfile.UserId
  isSpec: "True"
  fullName: Haiku.API.Models.UserProfile.UserId
  nameWithType: UserProfile.UserId
- uid: Haiku.API.Repositories.AuthorHaikuRepositories
  name: Haiku.API.Repositories.AuthorHaikuRepositories
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.html
  commentId: N:Haiku.API.Repositories.AuthorHaikuRepositories
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories
  nameWithType: Haiku.API.Repositories.AuthorHaikuRepositories
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository
  name: AuthorHaikuRepository
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html
  commentId: T:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository
  nameWithType: AuthorHaikuRepository
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.#ctor(Haiku.API.Database.HaikuAPIContext)
  name: AuthorHaikuRepository(HaikuAPIContext)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository__ctor_Haiku_API_Database_HaikuAPIContext_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.#ctor(Haiku.API.Database.HaikuAPIContext)
  name.vb: New(HaikuAPIContext)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuRepository(Haiku.API.Database.HaikuAPIContext)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.New(Haiku.API.Database.HaikuAPIContext)
  nameWithType: AuthorHaikuRepository.AuthorHaikuRepository(HaikuAPIContext)
  nameWithType.vb: AuthorHaikuRepository.New(HaikuAPIContext)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.#ctor*
  name: AuthorHaikuRepository
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository__ctor_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuRepository
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.New
  nameWithType: AuthorHaikuRepository.AuthorHaikuRepository
  nameWithType.vb: AuthorHaikuRepository.New
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AddAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  name: AddAuthorHaikuAsync(AuthorHaiku)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_AddAuthorHaikuAsync_Haiku_API_Models_AuthorHaiku_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AddAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AddAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  nameWithType: AuthorHaikuRepository.AddAuthorHaikuAsync(AuthorHaiku)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AddAuthorHaikuAsync*
  name: AddAuthorHaikuAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_AddAuthorHaikuAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AddAuthorHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AddAuthorHaikuAsync
  nameWithType: AuthorHaikuRepository.AddAuthorHaikuAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuExistsByIdAsync(System.Int64)
  name: AuthorHaikuExistsByIdAsync(long)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_AuthorHaikuExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuExistsByIdAsync(System.Int64)
  name.vb: AuthorHaikuExistsByIdAsync(Long)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuExistsByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuExistsByIdAsync(Long)
  nameWithType: AuthorHaikuRepository.AuthorHaikuExistsByIdAsync(long)
  nameWithType.vb: AuthorHaikuRepository.AuthorHaikuExistsByIdAsync(Long)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuExistsByIdAsync*
  name: AuthorHaikuExistsByIdAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_AuthorHaikuExistsByIdAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.AuthorHaikuExistsByIdAsync
  nameWithType: AuthorHaikuRepository.AuthorHaikuExistsByIdAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(System.Int64)
  name: DeleteAuthorHaikuByIdAsync(long)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_DeleteAuthorHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(System.Int64)
  name.vb: DeleteAuthorHaikuByIdAsync(Long)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(Long)
  nameWithType: AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(long)
  nameWithType.vb: AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(Long)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync*
  name: DeleteAuthorHaikuByIdAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_DeleteAuthorHaikuByIdAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync
  nameWithType: AuthorHaikuRepository.DeleteAuthorHaikuByIdAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetAuthorHaikuByIdAsync(System.Int64)
  name: GetAuthorHaikuByIdAsync(long)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_GetAuthorHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetAuthorHaikuByIdAsync(System.Int64)
  name.vb: GetAuthorHaikuByIdAsync(Long)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetAuthorHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetAuthorHaikuByIdAsync(Long)
  nameWithType: AuthorHaikuRepository.GetAuthorHaikuByIdAsync(long)
  nameWithType.vb: AuthorHaikuRepository.GetAuthorHaikuByIdAsync(Long)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetAuthorHaikuByIdAsync*
  name: GetAuthorHaikuByIdAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_GetAuthorHaikuByIdAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetAuthorHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetAuthorHaikuByIdAsync
  nameWithType: AuthorHaikuRepository.GetAuthorHaikuByIdAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  name: GetPaginatedAuthorHaikusAsync(int, int, string)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_GetPaginatedAuthorHaikusAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(int, int, string)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  nameWithType: AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(int, int, string)
  nameWithType.vb: AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync*
  name: GetPaginatedAuthorHaikusAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_GetPaginatedAuthorHaikusAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync
  nameWithType: AuthorHaikuRepository.GetPaginatedAuthorHaikusAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name: GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_GetPaginatedAuthorHaikusByAuthorIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  nameWithType: AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  nameWithType.vb: AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync*
  name: GetPaginatedAuthorHaikusByAuthorIdAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_GetPaginatedAuthorHaikusByAuthorIdAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync
  nameWithType: AuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusAsync(System.String)
  name: GetTotalAuthorHaikusAsync(string)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_GetTotalAuthorHaikusAsync_System_String_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusAsync(System.String)
  name.vb: GetTotalAuthorHaikusAsync(String)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusAsync(string)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusAsync(String)
  nameWithType: AuthorHaikuRepository.GetTotalAuthorHaikusAsync(string)
  nameWithType.vb: AuthorHaikuRepository.GetTotalAuthorHaikusAsync(String)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusAsync*
  name: GetTotalAuthorHaikusAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_GetTotalAuthorHaikusAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusAsync
  nameWithType: AuthorHaikuRepository.GetTotalAuthorHaikusAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  name: GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_GetTotalAuthorHaikusByAuthorIdAsync_System_Int64_System_String_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  name.vb: GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  nameWithType: AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  nameWithType.vb: AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync*
  name: GetTotalAuthorHaikusByAuthorIdAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_GetTotalAuthorHaikusByAuthorIdAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync
  nameWithType: AuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  name: UpdateAuthorHaikuAsync(AuthorHaiku)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_UpdateAuthorHaikuAsync_Haiku_API_Models_AuthorHaiku_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  nameWithType: AuthorHaikuRepository.UpdateAuthorHaikuAsync(AuthorHaiku)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikuAsync*
  name: UpdateAuthorHaikuAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_UpdateAuthorHaikuAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikuAsync
  nameWithType: AuthorHaikuRepository.UpdateAuthorHaikuAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(System.Int64,System.Int64)
  name: UpdateAuthorHaikusToUnknownAuthorAsync(long, long)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_UpdateAuthorHaikusToUnknownAuthorAsync_System_Int64_System_Int64_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(System.Int64,System.Int64)
  name.vb: UpdateAuthorHaikusToUnknownAuthorAsync(Long, Long)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(long, long)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(Long, Long)
  nameWithType: AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(long, long)
  nameWithType.vb: AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(Long, Long)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync*
  name: UpdateAuthorHaikusToUnknownAuthorAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_AuthorHaikuRepository_UpdateAuthorHaikusToUnknownAuthorAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync
  nameWithType: AuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  name: IAuthorHaikuRepository
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html
  commentId: T:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository
  nameWithType: IAuthorHaikuRepository
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AddAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  name: AddAuthorHaikuAsync(AuthorHaiku)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_AddAuthorHaikuAsync_Haiku_API_Models_AuthorHaiku_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AddAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AddAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  nameWithType: IAuthorHaikuRepository.AddAuthorHaikuAsync(AuthorHaiku)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AddAuthorHaikuAsync*
  name: AddAuthorHaikuAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_AddAuthorHaikuAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AddAuthorHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AddAuthorHaikuAsync
  nameWithType: IAuthorHaikuRepository.AddAuthorHaikuAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync(System.Int64)
  name: AuthorHaikuExistsByIdAsync(long)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_AuthorHaikuExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync(System.Int64)
  name.vb: AuthorHaikuExistsByIdAsync(Long)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync(Long)
  nameWithType: IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync(long)
  nameWithType.vb: IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync(Long)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync*
  name: AuthorHaikuExistsByIdAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_AuthorHaikuExistsByIdAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync
  nameWithType: IAuthorHaikuRepository.AuthorHaikuExistsByIdAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(System.Int64)
  name: DeleteAuthorHaikuByIdAsync(long)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_DeleteAuthorHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(System.Int64)
  name.vb: DeleteAuthorHaikuByIdAsync(Long)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(Long)
  nameWithType: IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(long)
  nameWithType.vb: IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync(Long)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync*
  name: DeleteAuthorHaikuByIdAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_DeleteAuthorHaikuByIdAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync
  nameWithType: IAuthorHaikuRepository.DeleteAuthorHaikuByIdAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetAuthorHaikuByIdAsync(System.Int64)
  name: GetAuthorHaikuByIdAsync(long)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetAuthorHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetAuthorHaikuByIdAsync(System.Int64)
  name.vb: GetAuthorHaikuByIdAsync(Long)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetAuthorHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetAuthorHaikuByIdAsync(Long)
  nameWithType: IAuthorHaikuRepository.GetAuthorHaikuByIdAsync(long)
  nameWithType.vb: IAuthorHaikuRepository.GetAuthorHaikuByIdAsync(Long)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetAuthorHaikuByIdAsync*
  name: GetAuthorHaikuByIdAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetAuthorHaikuByIdAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetAuthorHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetAuthorHaikuByIdAsync
  nameWithType: IAuthorHaikuRepository.GetAuthorHaikuByIdAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  name: GetPaginatedAuthorHaikusAsync(int, int, string)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetPaginatedAuthorHaikusAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(int, int, string)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  nameWithType: IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(int, int, string)
  nameWithType.vb: IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync*
  name: GetPaginatedAuthorHaikusAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetPaginatedAuthorHaikusAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync
  nameWithType: IAuthorHaikuRepository.GetPaginatedAuthorHaikusAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name: GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetPaginatedAuthorHaikusByAuthorIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  nameWithType: IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  nameWithType.vb: IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync*
  name: GetPaginatedAuthorHaikusByAuthorIdAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetPaginatedAuthorHaikusByAuthorIdAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync
  nameWithType: IAuthorHaikuRepository.GetPaginatedAuthorHaikusByAuthorIdAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusAsync(System.String)
  name: GetTotalAuthorHaikusAsync(string)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetTotalAuthorHaikusAsync_System_String_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusAsync(System.String)
  name.vb: GetTotalAuthorHaikusAsync(String)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusAsync(string)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusAsync(String)
  nameWithType: IAuthorHaikuRepository.GetTotalAuthorHaikusAsync(string)
  nameWithType.vb: IAuthorHaikuRepository.GetTotalAuthorHaikusAsync(String)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusAsync*
  name: GetTotalAuthorHaikusAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetTotalAuthorHaikusAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusAsync
  nameWithType: IAuthorHaikuRepository.GetTotalAuthorHaikusAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  name: GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetTotalAuthorHaikusByAuthorIdAsync_System_Int64_System_String_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  name.vb: GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  nameWithType: IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  nameWithType.vb: IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync*
  name: GetTotalAuthorHaikusByAuthorIdAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_GetTotalAuthorHaikusByAuthorIdAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync
  nameWithType: IAuthorHaikuRepository.GetTotalAuthorHaikusByAuthorIdAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  name: UpdateAuthorHaikuAsync(AuthorHaiku)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_UpdateAuthorHaikuAsync_Haiku_API_Models_AuthorHaiku_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikuAsync(Haiku.API.Models.AuthorHaiku)
  nameWithType: IAuthorHaikuRepository.UpdateAuthorHaikuAsync(AuthorHaiku)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikuAsync*
  name: UpdateAuthorHaikuAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_UpdateAuthorHaikuAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikuAsync
  nameWithType: IAuthorHaikuRepository.UpdateAuthorHaikuAsync
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(System.Int64,System.Int64)
  name: UpdateAuthorHaikusToUnknownAuthorAsync(long, long)
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_UpdateAuthorHaikusToUnknownAuthorAsync_System_Int64_System_Int64_
  commentId: M:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(System.Int64,System.Int64)
  name.vb: UpdateAuthorHaikusToUnknownAuthorAsync(Long, Long)
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(long, long)
  fullName.vb: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(Long, Long)
  nameWithType: IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(long, long)
  nameWithType.vb: IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync(Long, Long)
- uid: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync*
  name: UpdateAuthorHaikusToUnknownAuthorAsync
  href: api/Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.html#Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_UpdateAuthorHaikusToUnknownAuthorAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync
  nameWithType: IAuthorHaikuRepository.UpdateAuthorHaikusToUnknownAuthorAsync
- uid: Haiku.API.Repositories.AuthorRepositories
  name: Haiku.API.Repositories.AuthorRepositories
  href: api/Haiku.API.Repositories.AuthorRepositories.html
  commentId: N:Haiku.API.Repositories.AuthorRepositories
  fullName: Haiku.API.Repositories.AuthorRepositories
  nameWithType: Haiku.API.Repositories.AuthorRepositories
- uid: Haiku.API.Repositories.AuthorRepositories.AuthorRepository
  name: AuthorRepository
  href: api/Haiku.API.Repositories.AuthorRepositories.AuthorRepository.html
  commentId: T:Haiku.API.Repositories.AuthorRepositories.AuthorRepository
  fullName: Haiku.API.Repositories.AuthorRepositories.AuthorRepository
  nameWithType: AuthorRepository
- uid: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.#ctor(Haiku.API.Database.HaikuAPIContext)
  name: AuthorRepository(HaikuAPIContext)
  href: api/Haiku.API.Repositories.AuthorRepositories.AuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_AuthorRepository__ctor_Haiku_API_Database_HaikuAPIContext_
  commentId: M:Haiku.API.Repositories.AuthorRepositories.AuthorRepository.#ctor(Haiku.API.Database.HaikuAPIContext)
  name.vb: New(HaikuAPIContext)
  fullName: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.AuthorRepository(Haiku.API.Database.HaikuAPIContext)
  fullName.vb: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.New(Haiku.API.Database.HaikuAPIContext)
  nameWithType: AuthorRepository.AuthorRepository(HaikuAPIContext)
  nameWithType.vb: AuthorRepository.New(HaikuAPIContext)
- uid: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.#ctor*
  name: AuthorRepository
  href: api/Haiku.API.Repositories.AuthorRepositories.AuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_AuthorRepository__ctor_
  commentId: Overload:Haiku.API.Repositories.AuthorRepositories.AuthorRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.AuthorRepository
  fullName.vb: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.New
  nameWithType: AuthorRepository.AuthorRepository
  nameWithType.vb: AuthorRepository.New
- uid: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.AddAuthorAsync(Haiku.API.Models.Author)
  name: AddAuthorAsync(Author)
  href: api/Haiku.API.Repositories.AuthorRepositories.AuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_AuthorRepository_AddAuthorAsync_Haiku_API_Models_Author_
  commentId: M:Haiku.API.Repositories.AuthorRepositories.AuthorRepository.AddAuthorAsync(Haiku.API.Models.Author)
  fullName: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.AddAuthorAsync(Haiku.API.Models.Author)
  nameWithType: AuthorRepository.AddAuthorAsync(Author)
- uid: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.AddAuthorAsync*
  name: AddAuthorAsync
  href: api/Haiku.API.Repositories.AuthorRepositories.AuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_AuthorRepository_AddAuthorAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorRepositories.AuthorRepository.AddAuthorAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.AddAuthorAsync
  nameWithType: AuthorRepository.AddAuthorAsync
- uid: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.AuthorExistsByIdAsync(System.Int64)
  name: AuthorExistsByIdAsync(long)
  href: api/Haiku.API.Repositories.AuthorRepositories.AuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_AuthorRepository_AuthorExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.AuthorRepositories.AuthorRepository.AuthorExistsByIdAsync(System.Int64)
  name.vb: AuthorExistsByIdAsync(Long)
  fullName: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.AuthorExistsByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.AuthorExistsByIdAsync(Long)
  nameWithType: AuthorRepository.AuthorExistsByIdAsync(long)
  nameWithType.vb: AuthorRepository.AuthorExistsByIdAsync(Long)
- uid: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.AuthorExistsByIdAsync*
  name: AuthorExistsByIdAsync
  href: api/Haiku.API.Repositories.AuthorRepositories.AuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_AuthorRepository_AuthorExistsByIdAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorRepositories.AuthorRepository.AuthorExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.AuthorExistsByIdAsync
  nameWithType: AuthorRepository.AuthorExistsByIdAsync
- uid: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.DeleteAuthorByIdAsync(System.Int64)
  name: DeleteAuthorByIdAsync(long)
  href: api/Haiku.API.Repositories.AuthorRepositories.AuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_AuthorRepository_DeleteAuthorByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.AuthorRepositories.AuthorRepository.DeleteAuthorByIdAsync(System.Int64)
  name.vb: DeleteAuthorByIdAsync(Long)
  fullName: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.DeleteAuthorByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.DeleteAuthorByIdAsync(Long)
  nameWithType: AuthorRepository.DeleteAuthorByIdAsync(long)
  nameWithType.vb: AuthorRepository.DeleteAuthorByIdAsync(Long)
- uid: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.DeleteAuthorByIdAsync*
  name: DeleteAuthorByIdAsync
  href: api/Haiku.API.Repositories.AuthorRepositories.AuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_AuthorRepository_DeleteAuthorByIdAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorRepositories.AuthorRepository.DeleteAuthorByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.DeleteAuthorByIdAsync
  nameWithType: AuthorRepository.DeleteAuthorByIdAsync
- uid: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetAuthorByIdAsync(System.Int64)
  name: GetAuthorByIdAsync(long)
  href: api/Haiku.API.Repositories.AuthorRepositories.AuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_AuthorRepository_GetAuthorByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetAuthorByIdAsync(System.Int64)
  name.vb: GetAuthorByIdAsync(Long)
  fullName: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetAuthorByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetAuthorByIdAsync(Long)
  nameWithType: AuthorRepository.GetAuthorByIdAsync(long)
  nameWithType.vb: AuthorRepository.GetAuthorByIdAsync(Long)
- uid: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetAuthorByIdAsync*
  name: GetAuthorByIdAsync
  href: api/Haiku.API.Repositories.AuthorRepositories.AuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_AuthorRepository_GetAuthorByIdAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetAuthorByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetAuthorByIdAsync
  nameWithType: AuthorRepository.GetAuthorByIdAsync
- uid: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
  name: GetPaginatedAuthorsAsync(int, int, string)
  href: api/Haiku.API.Repositories.AuthorRepositories.AuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_AuthorRepository_GetPaginatedAuthorsAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedAuthorsAsync(Integer, Integer, String)
  fullName: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetPaginatedAuthorsAsync(int, int, string)
  fullName.vb: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetPaginatedAuthorsAsync(Integer, Integer, String)
  nameWithType: AuthorRepository.GetPaginatedAuthorsAsync(int, int, string)
  nameWithType.vb: AuthorRepository.GetPaginatedAuthorsAsync(Integer, Integer, String)
- uid: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetPaginatedAuthorsAsync*
  name: GetPaginatedAuthorsAsync
  href: api/Haiku.API.Repositories.AuthorRepositories.AuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_AuthorRepository_GetPaginatedAuthorsAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetPaginatedAuthorsAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetPaginatedAuthorsAsync
  nameWithType: AuthorRepository.GetPaginatedAuthorsAsync
- uid: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetTotalAuthorsAsync(System.String)
  name: GetTotalAuthorsAsync(string)
  href: api/Haiku.API.Repositories.AuthorRepositories.AuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_AuthorRepository_GetTotalAuthorsAsync_System_String_
  commentId: M:Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetTotalAuthorsAsync(System.String)
  name.vb: GetTotalAuthorsAsync(String)
  fullName: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetTotalAuthorsAsync(string)
  fullName.vb: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetTotalAuthorsAsync(String)
  nameWithType: AuthorRepository.GetTotalAuthorsAsync(string)
  nameWithType.vb: AuthorRepository.GetTotalAuthorsAsync(String)
- uid: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetTotalAuthorsAsync*
  name: GetTotalAuthorsAsync
  href: api/Haiku.API.Repositories.AuthorRepositories.AuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_AuthorRepository_GetTotalAuthorsAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetTotalAuthorsAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.GetTotalAuthorsAsync
  nameWithType: AuthorRepository.GetTotalAuthorsAsync
- uid: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.UpdateAuthorAsync(Haiku.API.Models.Author)
  name: UpdateAuthorAsync(Author)
  href: api/Haiku.API.Repositories.AuthorRepositories.AuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_AuthorRepository_UpdateAuthorAsync_Haiku_API_Models_Author_
  commentId: M:Haiku.API.Repositories.AuthorRepositories.AuthorRepository.UpdateAuthorAsync(Haiku.API.Models.Author)
  fullName: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.UpdateAuthorAsync(Haiku.API.Models.Author)
  nameWithType: AuthorRepository.UpdateAuthorAsync(Author)
- uid: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.UpdateAuthorAsync*
  name: UpdateAuthorAsync
  href: api/Haiku.API.Repositories.AuthorRepositories.AuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_AuthorRepository_UpdateAuthorAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorRepositories.AuthorRepository.UpdateAuthorAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorRepositories.AuthorRepository.UpdateAuthorAsync
  nameWithType: AuthorRepository.UpdateAuthorAsync
- uid: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository
  name: IAuthorRepository
  href: api/Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.html
  commentId: T:Haiku.API.Repositories.AuthorRepositories.IAuthorRepository
  fullName: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository
  nameWithType: IAuthorRepository
- uid: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.AddAuthorAsync(Haiku.API.Models.Author)
  name: AddAuthorAsync(Author)
  href: api/Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_IAuthorRepository_AddAuthorAsync_Haiku_API_Models_Author_
  commentId: M:Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.AddAuthorAsync(Haiku.API.Models.Author)
  fullName: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.AddAuthorAsync(Haiku.API.Models.Author)
  nameWithType: IAuthorRepository.AddAuthorAsync(Author)
- uid: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.AddAuthorAsync*
  name: AddAuthorAsync
  href: api/Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_IAuthorRepository_AddAuthorAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.AddAuthorAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.AddAuthorAsync
  nameWithType: IAuthorRepository.AddAuthorAsync
- uid: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.AuthorExistsByIdAsync(System.Int64)
  name: AuthorExistsByIdAsync(long)
  href: api/Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_IAuthorRepository_AuthorExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.AuthorExistsByIdAsync(System.Int64)
  name.vb: AuthorExistsByIdAsync(Long)
  fullName: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.AuthorExistsByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.AuthorExistsByIdAsync(Long)
  nameWithType: IAuthorRepository.AuthorExistsByIdAsync(long)
  nameWithType.vb: IAuthorRepository.AuthorExistsByIdAsync(Long)
- uid: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.AuthorExistsByIdAsync*
  name: AuthorExistsByIdAsync
  href: api/Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_IAuthorRepository_AuthorExistsByIdAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.AuthorExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.AuthorExistsByIdAsync
  nameWithType: IAuthorRepository.AuthorExistsByIdAsync
- uid: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.DeleteAuthorByIdAsync(System.Int64)
  name: DeleteAuthorByIdAsync(long)
  href: api/Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_IAuthorRepository_DeleteAuthorByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.DeleteAuthorByIdAsync(System.Int64)
  name.vb: DeleteAuthorByIdAsync(Long)
  fullName: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.DeleteAuthorByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.DeleteAuthorByIdAsync(Long)
  nameWithType: IAuthorRepository.DeleteAuthorByIdAsync(long)
  nameWithType.vb: IAuthorRepository.DeleteAuthorByIdAsync(Long)
- uid: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.DeleteAuthorByIdAsync*
  name: DeleteAuthorByIdAsync
  href: api/Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_IAuthorRepository_DeleteAuthorByIdAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.DeleteAuthorByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.DeleteAuthorByIdAsync
  nameWithType: IAuthorRepository.DeleteAuthorByIdAsync
- uid: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetAuthorByIdAsync(System.Int64)
  name: GetAuthorByIdAsync(long)
  href: api/Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_IAuthorRepository_GetAuthorByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetAuthorByIdAsync(System.Int64)
  name.vb: GetAuthorByIdAsync(Long)
  fullName: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetAuthorByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetAuthorByIdAsync(Long)
  nameWithType: IAuthorRepository.GetAuthorByIdAsync(long)
  nameWithType.vb: IAuthorRepository.GetAuthorByIdAsync(Long)
- uid: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetAuthorByIdAsync*
  name: GetAuthorByIdAsync
  href: api/Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_IAuthorRepository_GetAuthorByIdAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetAuthorByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetAuthorByIdAsync
  nameWithType: IAuthorRepository.GetAuthorByIdAsync
- uid: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
  name: GetPaginatedAuthorsAsync(int, int, string)
  href: api/Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_IAuthorRepository_GetPaginatedAuthorsAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedAuthorsAsync(Integer, Integer, String)
  fullName: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetPaginatedAuthorsAsync(int, int, string)
  fullName.vb: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetPaginatedAuthorsAsync(Integer, Integer, String)
  nameWithType: IAuthorRepository.GetPaginatedAuthorsAsync(int, int, string)
  nameWithType.vb: IAuthorRepository.GetPaginatedAuthorsAsync(Integer, Integer, String)
- uid: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetPaginatedAuthorsAsync*
  name: GetPaginatedAuthorsAsync
  href: api/Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_IAuthorRepository_GetPaginatedAuthorsAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetPaginatedAuthorsAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetPaginatedAuthorsAsync
  nameWithType: IAuthorRepository.GetPaginatedAuthorsAsync
- uid: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetTotalAuthorsAsync(System.String)
  name: GetTotalAuthorsAsync(string)
  href: api/Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_IAuthorRepository_GetTotalAuthorsAsync_System_String_
  commentId: M:Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetTotalAuthorsAsync(System.String)
  name.vb: GetTotalAuthorsAsync(String)
  fullName: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetTotalAuthorsAsync(string)
  fullName.vb: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetTotalAuthorsAsync(String)
  nameWithType: IAuthorRepository.GetTotalAuthorsAsync(string)
  nameWithType.vb: IAuthorRepository.GetTotalAuthorsAsync(String)
- uid: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetTotalAuthorsAsync*
  name: GetTotalAuthorsAsync
  href: api/Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_IAuthorRepository_GetTotalAuthorsAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetTotalAuthorsAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.GetTotalAuthorsAsync
  nameWithType: IAuthorRepository.GetTotalAuthorsAsync
- uid: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.UpdateAuthorAsync(Haiku.API.Models.Author)
  name: UpdateAuthorAsync(Author)
  href: api/Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_IAuthorRepository_UpdateAuthorAsync_Haiku_API_Models_Author_
  commentId: M:Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.UpdateAuthorAsync(Haiku.API.Models.Author)
  fullName: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.UpdateAuthorAsync(Haiku.API.Models.Author)
  nameWithType: IAuthorRepository.UpdateAuthorAsync(Author)
- uid: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.UpdateAuthorAsync*
  name: UpdateAuthorAsync
  href: api/Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.html#Haiku_API_Repositories_AuthorRepositories_IAuthorRepository_UpdateAuthorAsync_
  commentId: Overload:Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.UpdateAuthorAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.AuthorRepositories.IAuthorRepository.UpdateAuthorAsync
  nameWithType: IAuthorRepository.UpdateAuthorAsync
- uid: Haiku.API.Repositories.RoleRepositories
  name: Haiku.API.Repositories.RoleRepositories
  href: api/Haiku.API.Repositories.RoleRepositories.html
  commentId: N:Haiku.API.Repositories.RoleRepositories
  fullName: Haiku.API.Repositories.RoleRepositories
  nameWithType: Haiku.API.Repositories.RoleRepositories
- uid: Haiku.API.Repositories.RoleRepositories.IRoleRepository
  name: IRoleRepository
  href: api/Haiku.API.Repositories.RoleRepositories.IRoleRepository.html
  commentId: T:Haiku.API.Repositories.RoleRepositories.IRoleRepository
  fullName: Haiku.API.Repositories.RoleRepositories.IRoleRepository
  nameWithType: IRoleRepository
- uid: Haiku.API.Repositories.RoleRepositories.IRoleRepository.GetUserRoleAsync(System.Int64)
  name: GetUserRoleAsync(long)
  href: api/Haiku.API.Repositories.RoleRepositories.IRoleRepository.html#Haiku_API_Repositories_RoleRepositories_IRoleRepository_GetUserRoleAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.RoleRepositories.IRoleRepository.GetUserRoleAsync(System.Int64)
  name.vb: GetUserRoleAsync(Long)
  fullName: Haiku.API.Repositories.RoleRepositories.IRoleRepository.GetUserRoleAsync(long)
  fullName.vb: Haiku.API.Repositories.RoleRepositories.IRoleRepository.GetUserRoleAsync(Long)
  nameWithType: IRoleRepository.GetUserRoleAsync(long)
  nameWithType.vb: IRoleRepository.GetUserRoleAsync(Long)
- uid: Haiku.API.Repositories.RoleRepositories.IRoleRepository.GetUserRoleAsync*
  name: GetUserRoleAsync
  href: api/Haiku.API.Repositories.RoleRepositories.IRoleRepository.html#Haiku_API_Repositories_RoleRepositories_IRoleRepository_GetUserRoleAsync_
  commentId: Overload:Haiku.API.Repositories.RoleRepositories.IRoleRepository.GetUserRoleAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.RoleRepositories.IRoleRepository.GetUserRoleAsync
  nameWithType: IRoleRepository.GetUserRoleAsync
- uid: Haiku.API.Repositories.RoleRepositories.RoleRepository
  name: RoleRepository
  href: api/Haiku.API.Repositories.RoleRepositories.RoleRepository.html
  commentId: T:Haiku.API.Repositories.RoleRepositories.RoleRepository
  fullName: Haiku.API.Repositories.RoleRepositories.RoleRepository
  nameWithType: RoleRepository
- uid: Haiku.API.Repositories.RoleRepositories.RoleRepository.#ctor(Haiku.API.Database.HaikuAPIContext)
  name: RoleRepository(HaikuAPIContext)
  href: api/Haiku.API.Repositories.RoleRepositories.RoleRepository.html#Haiku_API_Repositories_RoleRepositories_RoleRepository__ctor_Haiku_API_Database_HaikuAPIContext_
  commentId: M:Haiku.API.Repositories.RoleRepositories.RoleRepository.#ctor(Haiku.API.Database.HaikuAPIContext)
  name.vb: New(HaikuAPIContext)
  fullName: Haiku.API.Repositories.RoleRepositories.RoleRepository.RoleRepository(Haiku.API.Database.HaikuAPIContext)
  fullName.vb: Haiku.API.Repositories.RoleRepositories.RoleRepository.New(Haiku.API.Database.HaikuAPIContext)
  nameWithType: RoleRepository.RoleRepository(HaikuAPIContext)
  nameWithType.vb: RoleRepository.New(HaikuAPIContext)
- uid: Haiku.API.Repositories.RoleRepositories.RoleRepository.#ctor*
  name: RoleRepository
  href: api/Haiku.API.Repositories.RoleRepositories.RoleRepository.html#Haiku_API_Repositories_RoleRepositories_RoleRepository__ctor_
  commentId: Overload:Haiku.API.Repositories.RoleRepositories.RoleRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Repositories.RoleRepositories.RoleRepository.RoleRepository
  fullName.vb: Haiku.API.Repositories.RoleRepositories.RoleRepository.New
  nameWithType: RoleRepository.RoleRepository
  nameWithType.vb: RoleRepository.New
- uid: Haiku.API.Repositories.RoleRepositories.RoleRepository.GetUserRoleAsync(System.Int64)
  name: GetUserRoleAsync(long)
  href: api/Haiku.API.Repositories.RoleRepositories.RoleRepository.html#Haiku_API_Repositories_RoleRepositories_RoleRepository_GetUserRoleAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.RoleRepositories.RoleRepository.GetUserRoleAsync(System.Int64)
  name.vb: GetUserRoleAsync(Long)
  fullName: Haiku.API.Repositories.RoleRepositories.RoleRepository.GetUserRoleAsync(long)
  fullName.vb: Haiku.API.Repositories.RoleRepositories.RoleRepository.GetUserRoleAsync(Long)
  nameWithType: RoleRepository.GetUserRoleAsync(long)
  nameWithType.vb: RoleRepository.GetUserRoleAsync(Long)
- uid: Haiku.API.Repositories.RoleRepositories.RoleRepository.GetUserRoleAsync*
  name: GetUserRoleAsync
  href: api/Haiku.API.Repositories.RoleRepositories.RoleRepository.html#Haiku_API_Repositories_RoleRepositories_RoleRepository_GetUserRoleAsync_
  commentId: Overload:Haiku.API.Repositories.RoleRepositories.RoleRepository.GetUserRoleAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.RoleRepositories.RoleRepository.GetUserRoleAsync
  nameWithType: RoleRepository.GetUserRoleAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories
  name: Haiku.API.Repositories.UserHaikuRepositories
  href: api/Haiku.API.Repositories.UserHaikuRepositories.html
  commentId: N:Haiku.API.Repositories.UserHaikuRepositories
  fullName: Haiku.API.Repositories.UserHaikuRepositories
  nameWithType: Haiku.API.Repositories.UserHaikuRepositories
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository
  name: IUserHaikuRepository
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html
  commentId: T:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository
  nameWithType: IUserHaikuRepository
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.AddUserHaikuAsync(Haiku.API.Models.UserHaiku)
  name: AddUserHaikuAsync(UserHaiku)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_AddUserHaikuAsync_Haiku_API_Models_UserHaiku_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.AddUserHaikuAsync(Haiku.API.Models.UserHaiku)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.AddUserHaikuAsync(Haiku.API.Models.UserHaiku)
  nameWithType: IUserHaikuRepository.AddUserHaikuAsync(UserHaiku)
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.AddUserHaikuAsync*
  name: AddUserHaikuAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_AddUserHaikuAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.AddUserHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.AddUserHaikuAsync
  nameWithType: IUserHaikuRepository.AddUserHaikuAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.DeleteUserHaikuByIdAsync(System.Int64)
  name: DeleteUserHaikuByIdAsync(long)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_DeleteUserHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.DeleteUserHaikuByIdAsync(System.Int64)
  name.vb: DeleteUserHaikuByIdAsync(Long)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.DeleteUserHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.DeleteUserHaikuByIdAsync(Long)
  nameWithType: IUserHaikuRepository.DeleteUserHaikuByIdAsync(long)
  nameWithType.vb: IUserHaikuRepository.DeleteUserHaikuByIdAsync(Long)
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.DeleteUserHaikuByIdAsync*
  name: DeleteUserHaikuByIdAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_DeleteUserHaikuByIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.DeleteUserHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.DeleteUserHaikuByIdAsync
  nameWithType: IUserHaikuRepository.DeleteUserHaikuByIdAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetPaginatedUserHaikusAsync(System.Int32,System.Int32,System.String)
  name: GetPaginatedUserHaikusAsync(int, int, string)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_GetPaginatedUserHaikusAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetPaginatedUserHaikusAsync(System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedUserHaikusAsync(Integer, Integer, String)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetPaginatedUserHaikusAsync(int, int, string)
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetPaginatedUserHaikusAsync(Integer, Integer, String)
  nameWithType: IUserHaikuRepository.GetPaginatedUserHaikusAsync(int, int, string)
  nameWithType.vb: IUserHaikuRepository.GetPaginatedUserHaikusAsync(Integer, Integer, String)
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetPaginatedUserHaikusAsync*
  name: GetPaginatedUserHaikusAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_GetPaginatedUserHaikusAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetPaginatedUserHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetPaginatedUserHaikusAsync
  nameWithType: IUserHaikuRepository.GetPaginatedUserHaikusAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name: GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_GetPaginatedUserHaikusByUserIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
  nameWithType: IUserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  nameWithType.vb: IUserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync*
  name: GetPaginatedUserHaikusByUserIdAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_GetPaginatedUserHaikusByUserIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync
  nameWithType: IUserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetTotalUserHaikusAsync(System.String)
  name: GetTotalUserHaikusAsync(string)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_GetTotalUserHaikusAsync_System_String_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetTotalUserHaikusAsync(System.String)
  name.vb: GetTotalUserHaikusAsync(String)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetTotalUserHaikusAsync(string)
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetTotalUserHaikusAsync(String)
  nameWithType: IUserHaikuRepository.GetTotalUserHaikusAsync(string)
  nameWithType.vb: IUserHaikuRepository.GetTotalUserHaikusAsync(String)
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetTotalUserHaikusAsync*
  name: GetTotalUserHaikusAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_GetTotalUserHaikusAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetTotalUserHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetTotalUserHaikusAsync
  nameWithType: IUserHaikuRepository.GetTotalUserHaikusAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetTotalUserHaikusByUserIdAsync(System.Int64,System.String)
  name: GetTotalUserHaikusByUserIdAsync(long, string)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_GetTotalUserHaikusByUserIdAsync_System_Int64_System_String_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetTotalUserHaikusByUserIdAsync(System.Int64,System.String)
  name.vb: GetTotalUserHaikusByUserIdAsync(Long, String)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetTotalUserHaikusByUserIdAsync(long, string)
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetTotalUserHaikusByUserIdAsync(Long, String)
  nameWithType: IUserHaikuRepository.GetTotalUserHaikusByUserIdAsync(long, string)
  nameWithType.vb: IUserHaikuRepository.GetTotalUserHaikusByUserIdAsync(Long, String)
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetTotalUserHaikusByUserIdAsync*
  name: GetTotalUserHaikusByUserIdAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_GetTotalUserHaikusByUserIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetTotalUserHaikusByUserIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetTotalUserHaikusByUserIdAsync
  nameWithType: IUserHaikuRepository.GetTotalUserHaikusByUserIdAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetUserHaikuByIdAsync(System.Int64)
  name: GetUserHaikuByIdAsync(long)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_GetUserHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetUserHaikuByIdAsync(System.Int64)
  name.vb: GetUserHaikuByIdAsync(Long)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetUserHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetUserHaikuByIdAsync(Long)
  nameWithType: IUserHaikuRepository.GetUserHaikuByIdAsync(long)
  nameWithType.vb: IUserHaikuRepository.GetUserHaikuByIdAsync(Long)
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetUserHaikuByIdAsync*
  name: GetUserHaikuByIdAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_GetUserHaikuByIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetUserHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetUserHaikuByIdAsync
  nameWithType: IUserHaikuRepository.GetUserHaikuByIdAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync(System.Int64)
  name: GetUserHaikusByUserIdForDeleteAsync(long)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_GetUserHaikusByUserIdForDeleteAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync(System.Int64)
  name.vb: GetUserHaikusByUserIdForDeleteAsync(Long)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync(long)
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync(Long)
  nameWithType: IUserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync(long)
  nameWithType.vb: IUserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync(Long)
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync*
  name: GetUserHaikusByUserIdForDeleteAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_GetUserHaikusByUserIdForDeleteAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync
  nameWithType: IUserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.UpdateUserHaikuAsync(Haiku.API.Models.UserHaiku)
  name: UpdateUserHaikuAsync(UserHaiku)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_UpdateUserHaikuAsync_Haiku_API_Models_UserHaiku_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.UpdateUserHaikuAsync(Haiku.API.Models.UserHaiku)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.UpdateUserHaikuAsync(Haiku.API.Models.UserHaiku)
  nameWithType: IUserHaikuRepository.UpdateUserHaikuAsync(UserHaiku)
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.UpdateUserHaikuAsync*
  name: UpdateUserHaikuAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_UpdateUserHaikuAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.UpdateUserHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.UpdateUserHaikuAsync
  nameWithType: IUserHaikuRepository.UpdateUserHaikuAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.UserHaikuExistsByIdAsync(System.Int64)
  name: UserHaikuExistsByIdAsync(long)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_UserHaikuExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.UserHaikuExistsByIdAsync(System.Int64)
  name.vb: UserHaikuExistsByIdAsync(Long)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.UserHaikuExistsByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.UserHaikuExistsByIdAsync(Long)
  nameWithType: IUserHaikuRepository.UserHaikuExistsByIdAsync(long)
  nameWithType.vb: IUserHaikuRepository.UserHaikuExistsByIdAsync(Long)
- uid: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.UserHaikuExistsByIdAsync*
  name: UserHaikuExistsByIdAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_UserHaikuExistsByIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.UserHaikuExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository.UserHaikuExistsByIdAsync
  nameWithType: IUserHaikuRepository.UserHaikuExistsByIdAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository
  name: UserHaikuRepository
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html
  commentId: T:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository
  nameWithType: UserHaikuRepository
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.#ctor(Haiku.API.Database.HaikuAPIContext)
  name: UserHaikuRepository(HaikuAPIContext)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository__ctor_Haiku_API_Database_HaikuAPIContext_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.#ctor(Haiku.API.Database.HaikuAPIContext)
  name.vb: New(HaikuAPIContext)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.UserHaikuRepository(Haiku.API.Database.HaikuAPIContext)
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.New(Haiku.API.Database.HaikuAPIContext)
  nameWithType: UserHaikuRepository.UserHaikuRepository(HaikuAPIContext)
  nameWithType.vb: UserHaikuRepository.New(HaikuAPIContext)
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.#ctor*
  name: UserHaikuRepository
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository__ctor_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.UserHaikuRepository
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.New
  nameWithType: UserHaikuRepository.UserHaikuRepository
  nameWithType.vb: UserHaikuRepository.New
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.AddUserHaikuAsync(Haiku.API.Models.UserHaiku)
  name: AddUserHaikuAsync(UserHaiku)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_AddUserHaikuAsync_Haiku_API_Models_UserHaiku_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.AddUserHaikuAsync(Haiku.API.Models.UserHaiku)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.AddUserHaikuAsync(Haiku.API.Models.UserHaiku)
  nameWithType: UserHaikuRepository.AddUserHaikuAsync(UserHaiku)
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.AddUserHaikuAsync*
  name: AddUserHaikuAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_AddUserHaikuAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.AddUserHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.AddUserHaikuAsync
  nameWithType: UserHaikuRepository.AddUserHaikuAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.DeleteUserHaikuByIdAsync(System.Int64)
  name: DeleteUserHaikuByIdAsync(long)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_DeleteUserHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.DeleteUserHaikuByIdAsync(System.Int64)
  name.vb: DeleteUserHaikuByIdAsync(Long)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.DeleteUserHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.DeleteUserHaikuByIdAsync(Long)
  nameWithType: UserHaikuRepository.DeleteUserHaikuByIdAsync(long)
  nameWithType.vb: UserHaikuRepository.DeleteUserHaikuByIdAsync(Long)
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.DeleteUserHaikuByIdAsync*
  name: DeleteUserHaikuByIdAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_DeleteUserHaikuByIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.DeleteUserHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.DeleteUserHaikuByIdAsync
  nameWithType: UserHaikuRepository.DeleteUserHaikuByIdAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetPaginatedUserHaikusAsync(System.Int32,System.Int32,System.String)
  name: GetPaginatedUserHaikusAsync(int, int, string)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_GetPaginatedUserHaikusAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetPaginatedUserHaikusAsync(System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedUserHaikusAsync(Integer, Integer, String)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetPaginatedUserHaikusAsync(int, int, string)
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetPaginatedUserHaikusAsync(Integer, Integer, String)
  nameWithType: UserHaikuRepository.GetPaginatedUserHaikusAsync(int, int, string)
  nameWithType.vb: UserHaikuRepository.GetPaginatedUserHaikusAsync(Integer, Integer, String)
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetPaginatedUserHaikusAsync*
  name: GetPaginatedUserHaikusAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_GetPaginatedUserHaikusAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetPaginatedUserHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetPaginatedUserHaikusAsync
  nameWithType: UserHaikuRepository.GetPaginatedUserHaikusAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name: GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_GetPaginatedUserHaikusByUserIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
  nameWithType: UserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  nameWithType.vb: UserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync*
  name: GetPaginatedUserHaikusByUserIdAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_GetPaginatedUserHaikusByUserIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync
  nameWithType: UserHaikuRepository.GetPaginatedUserHaikusByUserIdAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetTotalUserHaikusAsync(System.String)
  name: GetTotalUserHaikusAsync(string)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_GetTotalUserHaikusAsync_System_String_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetTotalUserHaikusAsync(System.String)
  name.vb: GetTotalUserHaikusAsync(String)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetTotalUserHaikusAsync(string)
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetTotalUserHaikusAsync(String)
  nameWithType: UserHaikuRepository.GetTotalUserHaikusAsync(string)
  nameWithType.vb: UserHaikuRepository.GetTotalUserHaikusAsync(String)
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetTotalUserHaikusAsync*
  name: GetTotalUserHaikusAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_GetTotalUserHaikusAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetTotalUserHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetTotalUserHaikusAsync
  nameWithType: UserHaikuRepository.GetTotalUserHaikusAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetTotalUserHaikusByUserIdAsync(System.Int64,System.String)
  name: GetTotalUserHaikusByUserIdAsync(long, string)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_GetTotalUserHaikusByUserIdAsync_System_Int64_System_String_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetTotalUserHaikusByUserIdAsync(System.Int64,System.String)
  name.vb: GetTotalUserHaikusByUserIdAsync(Long, String)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetTotalUserHaikusByUserIdAsync(long, string)
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetTotalUserHaikusByUserIdAsync(Long, String)
  nameWithType: UserHaikuRepository.GetTotalUserHaikusByUserIdAsync(long, string)
  nameWithType.vb: UserHaikuRepository.GetTotalUserHaikusByUserIdAsync(Long, String)
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetTotalUserHaikusByUserIdAsync*
  name: GetTotalUserHaikusByUserIdAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_GetTotalUserHaikusByUserIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetTotalUserHaikusByUserIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetTotalUserHaikusByUserIdAsync
  nameWithType: UserHaikuRepository.GetTotalUserHaikusByUserIdAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetUserHaikuByIdAsync(System.Int64)
  name: GetUserHaikuByIdAsync(long)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_GetUserHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetUserHaikuByIdAsync(System.Int64)
  name.vb: GetUserHaikuByIdAsync(Long)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetUserHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetUserHaikuByIdAsync(Long)
  nameWithType: UserHaikuRepository.GetUserHaikuByIdAsync(long)
  nameWithType.vb: UserHaikuRepository.GetUserHaikuByIdAsync(Long)
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetUserHaikuByIdAsync*
  name: GetUserHaikuByIdAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_GetUserHaikuByIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetUserHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetUserHaikuByIdAsync
  nameWithType: UserHaikuRepository.GetUserHaikuByIdAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync(System.Int64)
  name: GetUserHaikusByUserIdForDeleteAsync(long)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_GetUserHaikusByUserIdForDeleteAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync(System.Int64)
  name.vb: GetUserHaikusByUserIdForDeleteAsync(Long)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync(long)
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync(Long)
  nameWithType: UserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync(long)
  nameWithType.vb: UserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync(Long)
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync*
  name: GetUserHaikusByUserIdForDeleteAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_GetUserHaikusByUserIdForDeleteAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync
  nameWithType: UserHaikuRepository.GetUserHaikusByUserIdForDeleteAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.UpdateUserHaikuAsync(Haiku.API.Models.UserHaiku)
  name: UpdateUserHaikuAsync(UserHaiku)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_UpdateUserHaikuAsync_Haiku_API_Models_UserHaiku_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.UpdateUserHaikuAsync(Haiku.API.Models.UserHaiku)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.UpdateUserHaikuAsync(Haiku.API.Models.UserHaiku)
  nameWithType: UserHaikuRepository.UpdateUserHaikuAsync(UserHaiku)
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.UpdateUserHaikuAsync*
  name: UpdateUserHaikuAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_UpdateUserHaikuAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.UpdateUserHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.UpdateUserHaikuAsync
  nameWithType: UserHaikuRepository.UpdateUserHaikuAsync
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.UserHaikuExistsByIdAsync(System.Int64)
  name: UserHaikuExistsByIdAsync(long)
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_UserHaikuExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.UserHaikuExistsByIdAsync(System.Int64)
  name.vb: UserHaikuExistsByIdAsync(Long)
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.UserHaikuExistsByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.UserHaikuExistsByIdAsync(Long)
  nameWithType: UserHaikuRepository.UserHaikuExistsByIdAsync(long)
  nameWithType.vb: UserHaikuRepository.UserHaikuExistsByIdAsync(Long)
- uid: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.UserHaikuExistsByIdAsync*
  name: UserHaikuExistsByIdAsync
  href: api/Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.html#Haiku_API_Repositories_UserHaikuRepositories_UserHaikuRepository_UserHaikuExistsByIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.UserHaikuExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserHaikuRepositories.UserHaikuRepository.UserHaikuExistsByIdAsync
  nameWithType: UserHaikuRepository.UserHaikuExistsByIdAsync
- uid: Haiku.API.Repositories.UserProfileRepositories
  name: Haiku.API.Repositories.UserProfileRepositories
  href: api/Haiku.API.Repositories.UserProfileRepositories.html
  commentId: N:Haiku.API.Repositories.UserProfileRepositories
  fullName: Haiku.API.Repositories.UserProfileRepositories
  nameWithType: Haiku.API.Repositories.UserProfileRepositories
- uid: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository
  name: IUserProfileRepository
  href: api/Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.html
  commentId: T:Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository
  fullName: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository
  nameWithType: IUserProfileRepository
- uid: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.AddUserProfileAsync(Haiku.API.Models.UserProfile)
  name: AddUserProfileAsync(UserProfile)
  href: api/Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_IUserProfileRepository_AddUserProfileAsync_Haiku_API_Models_UserProfile_
  commentId: M:Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.AddUserProfileAsync(Haiku.API.Models.UserProfile)
  fullName: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.AddUserProfileAsync(Haiku.API.Models.UserProfile)
  nameWithType: IUserProfileRepository.AddUserProfileAsync(UserProfile)
- uid: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.AddUserProfileAsync*
  name: AddUserProfileAsync
  href: api/Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_IUserProfileRepository_AddUserProfileAsync_
  commentId: Overload:Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.AddUserProfileAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.AddUserProfileAsync
  nameWithType: IUserProfileRepository.AddUserProfileAsync
- uid: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List{System.Int64})
  name: GetAllUserProfilesByUserIdsAsync(List<long>)
  href: api/Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_IUserProfileRepository_GetAllUserProfilesByUserIdsAsync_System_Collections_Generic_List_System_Int64__
  commentId: M:Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List{System.Int64})
  name.vb: GetAllUserProfilesByUserIdsAsync(List(Of Long))
  fullName: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List<long>)
  fullName.vb: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List(Of Long))
  nameWithType: IUserProfileRepository.GetAllUserProfilesByUserIdsAsync(List<long>)
  nameWithType.vb: IUserProfileRepository.GetAllUserProfilesByUserIdsAsync(List(Of Long))
- uid: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetAllUserProfilesByUserIdsAsync*
  name: GetAllUserProfilesByUserIdsAsync
  href: api/Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_IUserProfileRepository_GetAllUserProfilesByUserIdsAsync_
  commentId: Overload:Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetAllUserProfilesByUserIdsAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetAllUserProfilesByUserIdsAsync
  nameWithType: IUserProfileRepository.GetAllUserProfilesByUserIdsAsync
- uid: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetTotalUserProfilesAsync
  name: GetTotalUserProfilesAsync()
  href: api/Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_IUserProfileRepository_GetTotalUserProfilesAsync
  commentId: M:Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetTotalUserProfilesAsync
  fullName: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetTotalUserProfilesAsync()
  nameWithType: IUserProfileRepository.GetTotalUserProfilesAsync()
- uid: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetTotalUserProfilesAsync*
  name: GetTotalUserProfilesAsync
  href: api/Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_IUserProfileRepository_GetTotalUserProfilesAsync_
  commentId: Overload:Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetTotalUserProfilesAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetTotalUserProfilesAsync
  nameWithType: IUserProfileRepository.GetTotalUserProfilesAsync
- uid: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetUserProfileByIdAsync(System.Int64)
  name: GetUserProfileByIdAsync(long)
  href: api/Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_IUserProfileRepository_GetUserProfileByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetUserProfileByIdAsync(System.Int64)
  name.vb: GetUserProfileByIdAsync(Long)
  fullName: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetUserProfileByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetUserProfileByIdAsync(Long)
  nameWithType: IUserProfileRepository.GetUserProfileByIdAsync(long)
  nameWithType.vb: IUserProfileRepository.GetUserProfileByIdAsync(Long)
- uid: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetUserProfileByIdAsync*
  name: GetUserProfileByIdAsync
  href: api/Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_IUserProfileRepository_GetUserProfileByIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetUserProfileByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetUserProfileByIdAsync
  nameWithType: IUserProfileRepository.GetUserProfileByIdAsync
- uid: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetUserProfileByUserIdAsync(System.Int64)
  name: GetUserProfileByUserIdAsync(long)
  href: api/Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_IUserProfileRepository_GetUserProfileByUserIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetUserProfileByUserIdAsync(System.Int64)
  name.vb: GetUserProfileByUserIdAsync(Long)
  fullName: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetUserProfileByUserIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetUserProfileByUserIdAsync(Long)
  nameWithType: IUserProfileRepository.GetUserProfileByUserIdAsync(long)
  nameWithType.vb: IUserProfileRepository.GetUserProfileByUserIdAsync(Long)
- uid: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetUserProfileByUserIdAsync*
  name: GetUserProfileByUserIdAsync
  href: api/Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_IUserProfileRepository_GetUserProfileByUserIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetUserProfileByUserIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.GetUserProfileByUserIdAsync
  nameWithType: IUserProfileRepository.GetUserProfileByUserIdAsync
- uid: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.UpdateUserProfileAsync(Haiku.API.Models.UserProfile)
  name: UpdateUserProfileAsync(UserProfile)
  href: api/Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_IUserProfileRepository_UpdateUserProfileAsync_Haiku_API_Models_UserProfile_
  commentId: M:Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.UpdateUserProfileAsync(Haiku.API.Models.UserProfile)
  fullName: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.UpdateUserProfileAsync(Haiku.API.Models.UserProfile)
  nameWithType: IUserProfileRepository.UpdateUserProfileAsync(UserProfile)
- uid: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.UpdateUserProfileAsync*
  name: UpdateUserProfileAsync
  href: api/Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_IUserProfileRepository_UpdateUserProfileAsync_
  commentId: Overload:Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.UpdateUserProfileAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.UpdateUserProfileAsync
  nameWithType: IUserProfileRepository.UpdateUserProfileAsync
- uid: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.UserProfileExistsByIdAsync(System.Int64)
  name: UserProfileExistsByIdAsync(long)
  href: api/Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_IUserProfileRepository_UserProfileExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.UserProfileExistsByIdAsync(System.Int64)
  name.vb: UserProfileExistsByIdAsync(Long)
  fullName: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.UserProfileExistsByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.UserProfileExistsByIdAsync(Long)
  nameWithType: IUserProfileRepository.UserProfileExistsByIdAsync(long)
  nameWithType.vb: IUserProfileRepository.UserProfileExistsByIdAsync(Long)
- uid: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.UserProfileExistsByIdAsync*
  name: UserProfileExistsByIdAsync
  href: api/Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_IUserProfileRepository_UserProfileExistsByIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.UserProfileExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository.UserProfileExistsByIdAsync
  nameWithType: IUserProfileRepository.UserProfileExistsByIdAsync
- uid: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository
  name: UserProfileRepository
  href: api/Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.html
  commentId: T:Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository
  fullName: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository
  nameWithType: UserProfileRepository
- uid: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.#ctor(Haiku.API.Database.HaikuAPIContext)
  name: UserProfileRepository(HaikuAPIContext)
  href: api/Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_UserProfileRepository__ctor_Haiku_API_Database_HaikuAPIContext_
  commentId: M:Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.#ctor(Haiku.API.Database.HaikuAPIContext)
  name.vb: New(HaikuAPIContext)
  fullName: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.UserProfileRepository(Haiku.API.Database.HaikuAPIContext)
  fullName.vb: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.New(Haiku.API.Database.HaikuAPIContext)
  nameWithType: UserProfileRepository.UserProfileRepository(HaikuAPIContext)
  nameWithType.vb: UserProfileRepository.New(HaikuAPIContext)
- uid: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.#ctor*
  name: UserProfileRepository
  href: api/Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_UserProfileRepository__ctor_
  commentId: Overload:Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.UserProfileRepository
  fullName.vb: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.New
  nameWithType: UserProfileRepository.UserProfileRepository
  nameWithType.vb: UserProfileRepository.New
- uid: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.AddUserProfileAsync(Haiku.API.Models.UserProfile)
  name: AddUserProfileAsync(UserProfile)
  href: api/Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_UserProfileRepository_AddUserProfileAsync_Haiku_API_Models_UserProfile_
  commentId: M:Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.AddUserProfileAsync(Haiku.API.Models.UserProfile)
  fullName: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.AddUserProfileAsync(Haiku.API.Models.UserProfile)
  nameWithType: UserProfileRepository.AddUserProfileAsync(UserProfile)
- uid: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.AddUserProfileAsync*
  name: AddUserProfileAsync
  href: api/Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_UserProfileRepository_AddUserProfileAsync_
  commentId: Overload:Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.AddUserProfileAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.AddUserProfileAsync
  nameWithType: UserProfileRepository.AddUserProfileAsync
- uid: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List{System.Int64})
  name: GetAllUserProfilesByUserIdsAsync(List<long>)
  href: api/Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_UserProfileRepository_GetAllUserProfilesByUserIdsAsync_System_Collections_Generic_List_System_Int64__
  commentId: M:Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List{System.Int64})
  name.vb: GetAllUserProfilesByUserIdsAsync(List(Of Long))
  fullName: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List<long>)
  fullName.vb: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List(Of Long))
  nameWithType: UserProfileRepository.GetAllUserProfilesByUserIdsAsync(List<long>)
  nameWithType.vb: UserProfileRepository.GetAllUserProfilesByUserIdsAsync(List(Of Long))
- uid: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetAllUserProfilesByUserIdsAsync*
  name: GetAllUserProfilesByUserIdsAsync
  href: api/Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_UserProfileRepository_GetAllUserProfilesByUserIdsAsync_
  commentId: Overload:Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetAllUserProfilesByUserIdsAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetAllUserProfilesByUserIdsAsync
  nameWithType: UserProfileRepository.GetAllUserProfilesByUserIdsAsync
- uid: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetTotalUserProfilesAsync
  name: GetTotalUserProfilesAsync()
  href: api/Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_UserProfileRepository_GetTotalUserProfilesAsync
  commentId: M:Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetTotalUserProfilesAsync
  fullName: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetTotalUserProfilesAsync()
  nameWithType: UserProfileRepository.GetTotalUserProfilesAsync()
- uid: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetTotalUserProfilesAsync*
  name: GetTotalUserProfilesAsync
  href: api/Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_UserProfileRepository_GetTotalUserProfilesAsync_
  commentId: Overload:Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetTotalUserProfilesAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetTotalUserProfilesAsync
  nameWithType: UserProfileRepository.GetTotalUserProfilesAsync
- uid: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetUserProfileByIdAsync(System.Int64)
  name: GetUserProfileByIdAsync(long)
  href: api/Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_UserProfileRepository_GetUserProfileByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetUserProfileByIdAsync(System.Int64)
  name.vb: GetUserProfileByIdAsync(Long)
  fullName: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetUserProfileByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetUserProfileByIdAsync(Long)
  nameWithType: UserProfileRepository.GetUserProfileByIdAsync(long)
  nameWithType.vb: UserProfileRepository.GetUserProfileByIdAsync(Long)
- uid: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetUserProfileByIdAsync*
  name: GetUserProfileByIdAsync
  href: api/Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_UserProfileRepository_GetUserProfileByIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetUserProfileByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetUserProfileByIdAsync
  nameWithType: UserProfileRepository.GetUserProfileByIdAsync
- uid: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetUserProfileByUserIdAsync(System.Int64)
  name: GetUserProfileByUserIdAsync(long)
  href: api/Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_UserProfileRepository_GetUserProfileByUserIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetUserProfileByUserIdAsync(System.Int64)
  name.vb: GetUserProfileByUserIdAsync(Long)
  fullName: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetUserProfileByUserIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetUserProfileByUserIdAsync(Long)
  nameWithType: UserProfileRepository.GetUserProfileByUserIdAsync(long)
  nameWithType.vb: UserProfileRepository.GetUserProfileByUserIdAsync(Long)
- uid: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetUserProfileByUserIdAsync*
  name: GetUserProfileByUserIdAsync
  href: api/Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_UserProfileRepository_GetUserProfileByUserIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetUserProfileByUserIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.GetUserProfileByUserIdAsync
  nameWithType: UserProfileRepository.GetUserProfileByUserIdAsync
- uid: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.UpdateUserProfileAsync(Haiku.API.Models.UserProfile)
  name: UpdateUserProfileAsync(UserProfile)
  href: api/Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_UserProfileRepository_UpdateUserProfileAsync_Haiku_API_Models_UserProfile_
  commentId: M:Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.UpdateUserProfileAsync(Haiku.API.Models.UserProfile)
  fullName: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.UpdateUserProfileAsync(Haiku.API.Models.UserProfile)
  nameWithType: UserProfileRepository.UpdateUserProfileAsync(UserProfile)
- uid: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.UpdateUserProfileAsync*
  name: UpdateUserProfileAsync
  href: api/Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_UserProfileRepository_UpdateUserProfileAsync_
  commentId: Overload:Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.UpdateUserProfileAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.UpdateUserProfileAsync
  nameWithType: UserProfileRepository.UpdateUserProfileAsync
- uid: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.UserProfileExistsByIdAsync(System.Int64)
  name: UserProfileExistsByIdAsync(long)
  href: api/Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_UserProfileRepository_UserProfileExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.UserProfileExistsByIdAsync(System.Int64)
  name.vb: UserProfileExistsByIdAsync(Long)
  fullName: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.UserProfileExistsByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.UserProfileExistsByIdAsync(Long)
  nameWithType: UserProfileRepository.UserProfileExistsByIdAsync(long)
  nameWithType.vb: UserProfileRepository.UserProfileExistsByIdAsync(Long)
- uid: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.UserProfileExistsByIdAsync*
  name: UserProfileExistsByIdAsync
  href: api/Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.html#Haiku_API_Repositories_UserProfileRepositories_UserProfileRepository_UserProfileExistsByIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.UserProfileExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserProfileRepositories.UserProfileRepository.UserProfileExistsByIdAsync
  nameWithType: UserProfileRepository.UserProfileExistsByIdAsync
- uid: Haiku.API.Repositories.UserRepositories
  name: Haiku.API.Repositories.UserRepositories
  href: api/Haiku.API.Repositories.UserRepositories.html
  commentId: N:Haiku.API.Repositories.UserRepositories
  fullName: Haiku.API.Repositories.UserRepositories
  nameWithType: Haiku.API.Repositories.UserRepositories
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository
  name: IUserRepository
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html
  commentId: T:Haiku.API.Repositories.UserRepositories.IUserRepository
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository
  nameWithType: IUserRepository
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.AddUserAsync(Haiku.API.Models.User)
  name: AddUserAsync(User)
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_AddUserAsync_Haiku_API_Models_User_
  commentId: M:Haiku.API.Repositories.UserRepositories.IUserRepository.AddUserAsync(Haiku.API.Models.User)
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.AddUserAsync(Haiku.API.Models.User)
  nameWithType: IUserRepository.AddUserAsync(User)
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.AddUserAsync*
  name: AddUserAsync
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_AddUserAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.IUserRepository.AddUserAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.AddUserAsync
  nameWithType: IUserRepository.AddUserAsync
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.DeleteUserByIdAsync(System.Int64)
  name: DeleteUserByIdAsync(long)
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_DeleteUserByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserRepositories.IUserRepository.DeleteUserByIdAsync(System.Int64)
  name.vb: DeleteUserByIdAsync(Long)
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.DeleteUserByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserRepositories.IUserRepository.DeleteUserByIdAsync(Long)
  nameWithType: IUserRepository.DeleteUserByIdAsync(long)
  nameWithType.vb: IUserRepository.DeleteUserByIdAsync(Long)
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.DeleteUserByIdAsync*
  name: DeleteUserByIdAsync
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_DeleteUserByIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.IUserRepository.DeleteUserByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.DeleteUserByIdAsync
  nameWithType: IUserRepository.DeleteUserByIdAsync
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.GetPaginatedUsersAsync(System.Int32,System.Int32,System.String)
  name: GetPaginatedUsersAsync(int, int, string)
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_GetPaginatedUsersAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Repositories.UserRepositories.IUserRepository.GetPaginatedUsersAsync(System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedUsersAsync(Integer, Integer, String)
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.GetPaginatedUsersAsync(int, int, string)
  fullName.vb: Haiku.API.Repositories.UserRepositories.IUserRepository.GetPaginatedUsersAsync(Integer, Integer, String)
  nameWithType: IUserRepository.GetPaginatedUsersAsync(int, int, string)
  nameWithType.vb: IUserRepository.GetPaginatedUsersAsync(Integer, Integer, String)
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.GetPaginatedUsersAsync*
  name: GetPaginatedUsersAsync
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_GetPaginatedUsersAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.IUserRepository.GetPaginatedUsersAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.GetPaginatedUsersAsync
  nameWithType: IUserRepository.GetPaginatedUsersAsync
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.GetTotalUsersAsync(System.String)
  name: GetTotalUsersAsync(string)
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_GetTotalUsersAsync_System_String_
  commentId: M:Haiku.API.Repositories.UserRepositories.IUserRepository.GetTotalUsersAsync(System.String)
  name.vb: GetTotalUsersAsync(String)
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.GetTotalUsersAsync(string)
  fullName.vb: Haiku.API.Repositories.UserRepositories.IUserRepository.GetTotalUsersAsync(String)
  nameWithType: IUserRepository.GetTotalUsersAsync(string)
  nameWithType.vb: IUserRepository.GetTotalUsersAsync(String)
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.GetTotalUsersAsync*
  name: GetTotalUsersAsync
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_GetTotalUsersAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.IUserRepository.GetTotalUsersAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.GetTotalUsersAsync
  nameWithType: IUserRepository.GetTotalUsersAsync
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.GetUserByIdAsync(System.Int64)
  name: GetUserByIdAsync(long)
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_GetUserByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserRepositories.IUserRepository.GetUserByIdAsync(System.Int64)
  name.vb: GetUserByIdAsync(Long)
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.GetUserByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserRepositories.IUserRepository.GetUserByIdAsync(Long)
  nameWithType: IUserRepository.GetUserByIdAsync(long)
  nameWithType.vb: IUserRepository.GetUserByIdAsync(Long)
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.GetUserByIdAsync*
  name: GetUserByIdAsync
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_GetUserByIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.IUserRepository.GetUserByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.GetUserByIdAsync
  nameWithType: IUserRepository.GetUserByIdAsync
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.GetUserByUsernameAsync(System.String)
  name: GetUserByUsernameAsync(string)
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_GetUserByUsernameAsync_System_String_
  commentId: M:Haiku.API.Repositories.UserRepositories.IUserRepository.GetUserByUsernameAsync(System.String)
  name.vb: GetUserByUsernameAsync(String)
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.GetUserByUsernameAsync(string)
  fullName.vb: Haiku.API.Repositories.UserRepositories.IUserRepository.GetUserByUsernameAsync(String)
  nameWithType: IUserRepository.GetUserByUsernameAsync(string)
  nameWithType.vb: IUserRepository.GetUserByUsernameAsync(String)
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.GetUserByUsernameAsync*
  name: GetUserByUsernameAsync
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_GetUserByUsernameAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.IUserRepository.GetUserByUsernameAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.GetUserByUsernameAsync
  nameWithType: IUserRepository.GetUserByUsernameAsync
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.UpdateUserAsync(Haiku.API.Models.User)
  name: UpdateUserAsync(User)
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_UpdateUserAsync_Haiku_API_Models_User_
  commentId: M:Haiku.API.Repositories.UserRepositories.IUserRepository.UpdateUserAsync(Haiku.API.Models.User)
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.UpdateUserAsync(Haiku.API.Models.User)
  nameWithType: IUserRepository.UpdateUserAsync(User)
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.UpdateUserAsync*
  name: UpdateUserAsync
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_UpdateUserAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.IUserRepository.UpdateUserAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.UpdateUserAsync
  nameWithType: IUserRepository.UpdateUserAsync
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.UserExistsByIdAsync(System.Int64)
  name: UserExistsByIdAsync(long)
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_UserExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserRepositories.IUserRepository.UserExistsByIdAsync(System.Int64)
  name.vb: UserExistsByIdAsync(Long)
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.UserExistsByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserRepositories.IUserRepository.UserExistsByIdAsync(Long)
  nameWithType: IUserRepository.UserExistsByIdAsync(long)
  nameWithType.vb: IUserRepository.UserExistsByIdAsync(Long)
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.UserExistsByIdAsync*
  name: UserExistsByIdAsync
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_UserExistsByIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.IUserRepository.UserExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.UserExistsByIdAsync
  nameWithType: IUserRepository.UserExistsByIdAsync
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.UsernameExistsAsync(System.String)
  name: UsernameExistsAsync(string)
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_UsernameExistsAsync_System_String_
  commentId: M:Haiku.API.Repositories.UserRepositories.IUserRepository.UsernameExistsAsync(System.String)
  name.vb: UsernameExistsAsync(String)
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.UsernameExistsAsync(string)
  fullName.vb: Haiku.API.Repositories.UserRepositories.IUserRepository.UsernameExistsAsync(String)
  nameWithType: IUserRepository.UsernameExistsAsync(string)
  nameWithType.vb: IUserRepository.UsernameExistsAsync(String)
- uid: Haiku.API.Repositories.UserRepositories.IUserRepository.UsernameExistsAsync*
  name: UsernameExistsAsync
  href: api/Haiku.API.Repositories.UserRepositories.IUserRepository.html#Haiku_API_Repositories_UserRepositories_IUserRepository_UsernameExistsAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.IUserRepository.UsernameExistsAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.IUserRepository.UsernameExistsAsync
  nameWithType: IUserRepository.UsernameExistsAsync
- uid: Haiku.API.Repositories.UserRepositories.UserRepository
  name: UserRepository
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html
  commentId: T:Haiku.API.Repositories.UserRepositories.UserRepository
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository
  nameWithType: UserRepository
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.#ctor(Haiku.API.Database.HaikuAPIContext)
  name: UserRepository(HaikuAPIContext)
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository__ctor_Haiku_API_Database_HaikuAPIContext_
  commentId: M:Haiku.API.Repositories.UserRepositories.UserRepository.#ctor(Haiku.API.Database.HaikuAPIContext)
  name.vb: New(HaikuAPIContext)
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.UserRepository(Haiku.API.Database.HaikuAPIContext)
  fullName.vb: Haiku.API.Repositories.UserRepositories.UserRepository.New(Haiku.API.Database.HaikuAPIContext)
  nameWithType: UserRepository.UserRepository(HaikuAPIContext)
  nameWithType.vb: UserRepository.New(HaikuAPIContext)
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.#ctor*
  name: UserRepository
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository__ctor_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.UserRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.UserRepository
  fullName.vb: Haiku.API.Repositories.UserRepositories.UserRepository.New
  nameWithType: UserRepository.UserRepository
  nameWithType.vb: UserRepository.New
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.AddUserAsync(Haiku.API.Models.User)
  name: AddUserAsync(User)
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_AddUserAsync_Haiku_API_Models_User_
  commentId: M:Haiku.API.Repositories.UserRepositories.UserRepository.AddUserAsync(Haiku.API.Models.User)
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.AddUserAsync(Haiku.API.Models.User)
  nameWithType: UserRepository.AddUserAsync(User)
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.AddUserAsync*
  name: AddUserAsync
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_AddUserAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.UserRepository.AddUserAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.AddUserAsync
  nameWithType: UserRepository.AddUserAsync
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.DeleteUserByIdAsync(System.Int64)
  name: DeleteUserByIdAsync(long)
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_DeleteUserByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserRepositories.UserRepository.DeleteUserByIdAsync(System.Int64)
  name.vb: DeleteUserByIdAsync(Long)
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.DeleteUserByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserRepositories.UserRepository.DeleteUserByIdAsync(Long)
  nameWithType: UserRepository.DeleteUserByIdAsync(long)
  nameWithType.vb: UserRepository.DeleteUserByIdAsync(Long)
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.DeleteUserByIdAsync*
  name: DeleteUserByIdAsync
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_DeleteUserByIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.UserRepository.DeleteUserByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.DeleteUserByIdAsync
  nameWithType: UserRepository.DeleteUserByIdAsync
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.GetPaginatedUsersAsync(System.Int32,System.Int32,System.String)
  name: GetPaginatedUsersAsync(int, int, string)
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_GetPaginatedUsersAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Repositories.UserRepositories.UserRepository.GetPaginatedUsersAsync(System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedUsersAsync(Integer, Integer, String)
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.GetPaginatedUsersAsync(int, int, string)
  fullName.vb: Haiku.API.Repositories.UserRepositories.UserRepository.GetPaginatedUsersAsync(Integer, Integer, String)
  nameWithType: UserRepository.GetPaginatedUsersAsync(int, int, string)
  nameWithType.vb: UserRepository.GetPaginatedUsersAsync(Integer, Integer, String)
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.GetPaginatedUsersAsync*
  name: GetPaginatedUsersAsync
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_GetPaginatedUsersAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.UserRepository.GetPaginatedUsersAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.GetPaginatedUsersAsync
  nameWithType: UserRepository.GetPaginatedUsersAsync
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.GetTotalUsersAsync(System.String)
  name: GetTotalUsersAsync(string)
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_GetTotalUsersAsync_System_String_
  commentId: M:Haiku.API.Repositories.UserRepositories.UserRepository.GetTotalUsersAsync(System.String)
  name.vb: GetTotalUsersAsync(String)
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.GetTotalUsersAsync(string)
  fullName.vb: Haiku.API.Repositories.UserRepositories.UserRepository.GetTotalUsersAsync(String)
  nameWithType: UserRepository.GetTotalUsersAsync(string)
  nameWithType.vb: UserRepository.GetTotalUsersAsync(String)
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.GetTotalUsersAsync*
  name: GetTotalUsersAsync
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_GetTotalUsersAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.UserRepository.GetTotalUsersAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.GetTotalUsersAsync
  nameWithType: UserRepository.GetTotalUsersAsync
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.GetUserByIdAsync(System.Int64)
  name: GetUserByIdAsync(long)
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_GetUserByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserRepositories.UserRepository.GetUserByIdAsync(System.Int64)
  name.vb: GetUserByIdAsync(Long)
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.GetUserByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserRepositories.UserRepository.GetUserByIdAsync(Long)
  nameWithType: UserRepository.GetUserByIdAsync(long)
  nameWithType.vb: UserRepository.GetUserByIdAsync(Long)
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.GetUserByIdAsync*
  name: GetUserByIdAsync
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_GetUserByIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.UserRepository.GetUserByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.GetUserByIdAsync
  nameWithType: UserRepository.GetUserByIdAsync
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.GetUserByUsernameAsync(System.String)
  name: GetUserByUsernameAsync(string)
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_GetUserByUsernameAsync_System_String_
  commentId: M:Haiku.API.Repositories.UserRepositories.UserRepository.GetUserByUsernameAsync(System.String)
  name.vb: GetUserByUsernameAsync(String)
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.GetUserByUsernameAsync(string)
  fullName.vb: Haiku.API.Repositories.UserRepositories.UserRepository.GetUserByUsernameAsync(String)
  nameWithType: UserRepository.GetUserByUsernameAsync(string)
  nameWithType.vb: UserRepository.GetUserByUsernameAsync(String)
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.GetUserByUsernameAsync*
  name: GetUserByUsernameAsync
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_GetUserByUsernameAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.UserRepository.GetUserByUsernameAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.GetUserByUsernameAsync
  nameWithType: UserRepository.GetUserByUsernameAsync
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.UpdateUserAsync(Haiku.API.Models.User)
  name: UpdateUserAsync(User)
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_UpdateUserAsync_Haiku_API_Models_User_
  commentId: M:Haiku.API.Repositories.UserRepositories.UserRepository.UpdateUserAsync(Haiku.API.Models.User)
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.UpdateUserAsync(Haiku.API.Models.User)
  nameWithType: UserRepository.UpdateUserAsync(User)
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.UpdateUserAsync*
  name: UpdateUserAsync
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_UpdateUserAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.UserRepository.UpdateUserAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.UpdateUserAsync
  nameWithType: UserRepository.UpdateUserAsync
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.UserExistsByIdAsync(System.Int64)
  name: UserExistsByIdAsync(long)
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_UserExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Repositories.UserRepositories.UserRepository.UserExistsByIdAsync(System.Int64)
  name.vb: UserExistsByIdAsync(Long)
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.UserExistsByIdAsync(long)
  fullName.vb: Haiku.API.Repositories.UserRepositories.UserRepository.UserExistsByIdAsync(Long)
  nameWithType: UserRepository.UserExistsByIdAsync(long)
  nameWithType.vb: UserRepository.UserExistsByIdAsync(Long)
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.UserExistsByIdAsync*
  name: UserExistsByIdAsync
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_UserExistsByIdAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.UserRepository.UserExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.UserExistsByIdAsync
  nameWithType: UserRepository.UserExistsByIdAsync
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.UsernameExistsAsync(System.String)
  name: UsernameExistsAsync(string)
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_UsernameExistsAsync_System_String_
  commentId: M:Haiku.API.Repositories.UserRepositories.UserRepository.UsernameExistsAsync(System.String)
  name.vb: UsernameExistsAsync(String)
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.UsernameExistsAsync(string)
  fullName.vb: Haiku.API.Repositories.UserRepositories.UserRepository.UsernameExistsAsync(String)
  nameWithType: UserRepository.UsernameExistsAsync(string)
  nameWithType.vb: UserRepository.UsernameExistsAsync(String)
- uid: Haiku.API.Repositories.UserRepositories.UserRepository.UsernameExistsAsync*
  name: UsernameExistsAsync
  href: api/Haiku.API.Repositories.UserRepositories.UserRepository.html#Haiku_API_Repositories_UserRepositories_UserRepository_UsernameExistsAsync_
  commentId: Overload:Haiku.API.Repositories.UserRepositories.UserRepository.UsernameExistsAsync
  isSpec: "True"
  fullName: Haiku.API.Repositories.UserRepositories.UserRepository.UsernameExistsAsync
  nameWithType: UserRepository.UsernameExistsAsync
- uid: Haiku.API.Services.AuthServices
  name: Haiku.API.Services.AuthServices
  href: api/Haiku.API.Services.AuthServices.html
  commentId: N:Haiku.API.Services.AuthServices
  fullName: Haiku.API.Services.AuthServices
  nameWithType: Haiku.API.Services.AuthServices
- uid: Haiku.API.Services.AuthServices.AuthService
  name: AuthService
  href: api/Haiku.API.Services.AuthServices.AuthService.html
  commentId: T:Haiku.API.Services.AuthServices.AuthService
  fullName: Haiku.API.Services.AuthServices.AuthService
  nameWithType: AuthService
- uid: Haiku.API.Services.AuthServices.AuthService.#ctor(Haiku.API.Services.UserServices.IUserService,Haiku.API.Services.RoleServices.IRoleService,Microsoft.Extensions.Configuration.IConfiguration,AutoMapper.IMapper,Microsoft.Extensions.Options.IOptions{Haiku.API.Models.JwtSettings})
  name: AuthService(IUserService, IRoleService, IConfiguration, IMapper, IOptions<JwtSettings>)
  href: api/Haiku.API.Services.AuthServices.AuthService.html#Haiku_API_Services_AuthServices_AuthService__ctor_Haiku_API_Services_UserServices_IUserService_Haiku_API_Services_RoleServices_IRoleService_Microsoft_Extensions_Configuration_IConfiguration_AutoMapper_IMapper_Microsoft_Extensions_Options_IOptions_Haiku_API_Models_JwtSettings__
  commentId: M:Haiku.API.Services.AuthServices.AuthService.#ctor(Haiku.API.Services.UserServices.IUserService,Haiku.API.Services.RoleServices.IRoleService,Microsoft.Extensions.Configuration.IConfiguration,AutoMapper.IMapper,Microsoft.Extensions.Options.IOptions{Haiku.API.Models.JwtSettings})
  name.vb: New(IUserService, IRoleService, IConfiguration, IMapper, IOptions(Of JwtSettings))
  fullName: Haiku.API.Services.AuthServices.AuthService.AuthService(Haiku.API.Services.UserServices.IUserService, Haiku.API.Services.RoleServices.IRoleService, Microsoft.Extensions.Configuration.IConfiguration, AutoMapper.IMapper, Microsoft.Extensions.Options.IOptions<Haiku.API.Models.JwtSettings>)
  fullName.vb: Haiku.API.Services.AuthServices.AuthService.New(Haiku.API.Services.UserServices.IUserService, Haiku.API.Services.RoleServices.IRoleService, Microsoft.Extensions.Configuration.IConfiguration, AutoMapper.IMapper, Microsoft.Extensions.Options.IOptions(Of Haiku.API.Models.JwtSettings))
  nameWithType: AuthService.AuthService(IUserService, IRoleService, IConfiguration, IMapper, IOptions<JwtSettings>)
  nameWithType.vb: AuthService.New(IUserService, IRoleService, IConfiguration, IMapper, IOptions(Of JwtSettings))
- uid: Haiku.API.Services.AuthServices.AuthService.#ctor*
  name: AuthService
  href: api/Haiku.API.Services.AuthServices.AuthService.html#Haiku_API_Services_AuthServices_AuthService__ctor_
  commentId: Overload:Haiku.API.Services.AuthServices.AuthService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Services.AuthServices.AuthService.AuthService
  fullName.vb: Haiku.API.Services.AuthServices.AuthService.New
  nameWithType: AuthService.AuthService
  nameWithType.vb: AuthService.New
- uid: Haiku.API.Services.AuthServices.AuthService.AuthenticateUserAsync(Haiku.API.Dtos.LoginDto)
  name: AuthenticateUserAsync(LoginDto)
  href: api/Haiku.API.Services.AuthServices.AuthService.html#Haiku_API_Services_AuthServices_AuthService_AuthenticateUserAsync_Haiku_API_Dtos_LoginDto_
  commentId: M:Haiku.API.Services.AuthServices.AuthService.AuthenticateUserAsync(Haiku.API.Dtos.LoginDto)
  fullName: Haiku.API.Services.AuthServices.AuthService.AuthenticateUserAsync(Haiku.API.Dtos.LoginDto)
  nameWithType: AuthService.AuthenticateUserAsync(LoginDto)
- uid: Haiku.API.Services.AuthServices.AuthService.AuthenticateUserAsync*
  name: AuthenticateUserAsync
  href: api/Haiku.API.Services.AuthServices.AuthService.html#Haiku_API_Services_AuthServices_AuthService_AuthenticateUserAsync_
  commentId: Overload:Haiku.API.Services.AuthServices.AuthService.AuthenticateUserAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthServices.AuthService.AuthenticateUserAsync
  nameWithType: AuthService.AuthenticateUserAsync
- uid: Haiku.API.Services.AuthServices.IAuthService
  name: IAuthService
  href: api/Haiku.API.Services.AuthServices.IAuthService.html
  commentId: T:Haiku.API.Services.AuthServices.IAuthService
  fullName: Haiku.API.Services.AuthServices.IAuthService
  nameWithType: IAuthService
- uid: Haiku.API.Services.AuthServices.IAuthService.AuthenticateUserAsync(Haiku.API.Dtos.LoginDto)
  name: AuthenticateUserAsync(LoginDto)
  href: api/Haiku.API.Services.AuthServices.IAuthService.html#Haiku_API_Services_AuthServices_IAuthService_AuthenticateUserAsync_Haiku_API_Dtos_LoginDto_
  commentId: M:Haiku.API.Services.AuthServices.IAuthService.AuthenticateUserAsync(Haiku.API.Dtos.LoginDto)
  fullName: Haiku.API.Services.AuthServices.IAuthService.AuthenticateUserAsync(Haiku.API.Dtos.LoginDto)
  nameWithType: IAuthService.AuthenticateUserAsync(LoginDto)
- uid: Haiku.API.Services.AuthServices.IAuthService.AuthenticateUserAsync*
  name: AuthenticateUserAsync
  href: api/Haiku.API.Services.AuthServices.IAuthService.html#Haiku_API_Services_AuthServices_IAuthService_AuthenticateUserAsync_
  commentId: Overload:Haiku.API.Services.AuthServices.IAuthService.AuthenticateUserAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthServices.IAuthService.AuthenticateUserAsync
  nameWithType: IAuthService.AuthenticateUserAsync
- uid: Haiku.API.Services.AuthorHaikuServices
  name: Haiku.API.Services.AuthorHaikuServices
  href: api/Haiku.API.Services.AuthorHaikuServices.html
  commentId: N:Haiku.API.Services.AuthorHaikuServices
  fullName: Haiku.API.Services.AuthorHaikuServices
  nameWithType: Haiku.API.Services.AuthorHaikuServices
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
  name: AuthorHaikuService
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html
  commentId: T:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService
  nameWithType: AuthorHaikuService
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.#ctor(Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository,Haiku.API.Services.AuthorServices.IAuthorService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService},AutoMapper.IMapper)
  name: AuthorHaikuService(IAuthorHaikuRepository, IAuthorService, ILogger<AuthorHaikuService>, IMapper)
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService__ctor_Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_Haiku_API_Services_AuthorServices_IAuthorService_Microsoft_Extensions_Logging_ILogger_Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService__AutoMapper_IMapper_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.#ctor(Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository,Haiku.API.Services.AuthorServices.IAuthorService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService},AutoMapper.IMapper)
  name.vb: New(IAuthorHaikuRepository, IAuthorService, ILogger(Of AuthorHaikuService), IMapper)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuService(Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository, Haiku.API.Services.AuthorServices.IAuthorService, Microsoft.Extensions.Logging.ILogger<Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService>, AutoMapper.IMapper)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.New(Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository, Haiku.API.Services.AuthorServices.IAuthorService, Microsoft.Extensions.Logging.ILogger(Of Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService), AutoMapper.IMapper)
  nameWithType: AuthorHaikuService.AuthorHaikuService(IAuthorHaikuRepository, IAuthorService, ILogger<AuthorHaikuService>, IMapper)
  nameWithType.vb: AuthorHaikuService.New(IAuthorHaikuRepository, IAuthorService, ILogger(Of AuthorHaikuService), IMapper)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.#ctor*
  name: AuthorHaikuService
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService__ctor_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuService
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.New
  nameWithType: AuthorHaikuService.AuthorHaikuService
  nameWithType.vb: AuthorHaikuService.New
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AddAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
  name: AddAuthorHaikuAsync(AuthorHaikuDto)
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_AddAuthorHaikuAsync_Haiku_API_Dtos_AuthorHaikuDto_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AddAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AddAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
  nameWithType: AuthorHaikuService.AddAuthorHaikuAsync(AuthorHaikuDto)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AddAuthorHaikuAsync*
  name: AddAuthorHaikuAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_AddAuthorHaikuAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AddAuthorHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AddAuthorHaikuAsync
  nameWithType: AuthorHaikuService.AddAuthorHaikuAsync
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuExistsByIdAsync(System.Int64)
  name: AuthorHaikuExistsByIdAsync(long)
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_AuthorHaikuExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuExistsByIdAsync(System.Int64)
  name.vb: AuthorHaikuExistsByIdAsync(Long)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuExistsByIdAsync(long)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuExistsByIdAsync(Long)
  nameWithType: AuthorHaikuService.AuthorHaikuExistsByIdAsync(long)
  nameWithType.vb: AuthorHaikuService.AuthorHaikuExistsByIdAsync(Long)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuExistsByIdAsync*
  name: AuthorHaikuExistsByIdAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_AuthorHaikuExistsByIdAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.AuthorHaikuExistsByIdAsync
  nameWithType: AuthorHaikuService.AuthorHaikuExistsByIdAsync
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.DeleteAuthorHaikuByIdAsync(System.Int64)
  name: DeleteAuthorHaikuByIdAsync(long)
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_DeleteAuthorHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.DeleteAuthorHaikuByIdAsync(System.Int64)
  name.vb: DeleteAuthorHaikuByIdAsync(Long)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.DeleteAuthorHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.DeleteAuthorHaikuByIdAsync(Long)
  nameWithType: AuthorHaikuService.DeleteAuthorHaikuByIdAsync(long)
  nameWithType.vb: AuthorHaikuService.DeleteAuthorHaikuByIdAsync(Long)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.DeleteAuthorHaikuByIdAsync*
  name: DeleteAuthorHaikuByIdAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_DeleteAuthorHaikuByIdAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.DeleteAuthorHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.DeleteAuthorHaikuByIdAsync
  nameWithType: AuthorHaikuService.DeleteAuthorHaikuByIdAsync
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetAuthorHaikuByIdAsync(System.Int64)
  name: GetAuthorHaikuByIdAsync(long)
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_GetAuthorHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetAuthorHaikuByIdAsync(System.Int64)
  name.vb: GetAuthorHaikuByIdAsync(Long)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetAuthorHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetAuthorHaikuByIdAsync(Long)
  nameWithType: AuthorHaikuService.GetAuthorHaikuByIdAsync(long)
  nameWithType.vb: AuthorHaikuService.GetAuthorHaikuByIdAsync(Long)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetAuthorHaikuByIdAsync*
  name: GetAuthorHaikuByIdAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_GetAuthorHaikuByIdAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetAuthorHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetAuthorHaikuByIdAsync
  nameWithType: AuthorHaikuService.GetAuthorHaikuByIdAsync
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  name: GetPaginatedAuthorHaikusAsync(int, int, string)
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_GetPaginatedAuthorHaikusAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusAsync(int, int, string)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  nameWithType: AuthorHaikuService.GetPaginatedAuthorHaikusAsync(int, int, string)
  nameWithType.vb: AuthorHaikuService.GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusAsync*
  name: GetPaginatedAuthorHaikusAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_GetPaginatedAuthorHaikusAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusAsync
  nameWithType: AuthorHaikuService.GetPaginatedAuthorHaikusAsync
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name: GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_GetPaginatedAuthorHaikusByAuthorIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  nameWithType: AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  nameWithType.vb: AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync*
  name: GetPaginatedAuthorHaikusByAuthorIdAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_GetPaginatedAuthorHaikusByAuthorIdAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync
  nameWithType: AuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusAsync(System.String)
  name: GetTotalAuthorHaikusAsync(string)
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_GetTotalAuthorHaikusAsync_System_String_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusAsync(System.String)
  name.vb: GetTotalAuthorHaikusAsync(String)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusAsync(string)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusAsync(String)
  nameWithType: AuthorHaikuService.GetTotalAuthorHaikusAsync(string)
  nameWithType.vb: AuthorHaikuService.GetTotalAuthorHaikusAsync(String)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusAsync*
  name: GetTotalAuthorHaikusAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_GetTotalAuthorHaikusAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusAsync
  nameWithType: AuthorHaikuService.GetTotalAuthorHaikusAsync
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  name: GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_GetTotalAuthorHaikusByAuthorIdAsync_System_Int64_System_String_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  name.vb: GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  nameWithType: AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  nameWithType.vb: AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync*
  name: GetTotalAuthorHaikusByAuthorIdAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_GetTotalAuthorHaikusByAuthorIdAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync
  nameWithType: AuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.UpdateAuthorHaikuAsync(System.Int64,Haiku.API.Dtos.AuthorHaikuDto)
  name: UpdateAuthorHaikuAsync(long, AuthorHaikuDto)
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_UpdateAuthorHaikuAsync_System_Int64_Haiku_API_Dtos_AuthorHaikuDto_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.UpdateAuthorHaikuAsync(System.Int64,Haiku.API.Dtos.AuthorHaikuDto)
  name.vb: UpdateAuthorHaikuAsync(Long, AuthorHaikuDto)
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.UpdateAuthorHaikuAsync(long, Haiku.API.Dtos.AuthorHaikuDto)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.UpdateAuthorHaikuAsync(Long, Haiku.API.Dtos.AuthorHaikuDto)
  nameWithType: AuthorHaikuService.UpdateAuthorHaikuAsync(long, AuthorHaikuDto)
  nameWithType.vb: AuthorHaikuService.UpdateAuthorHaikuAsync(Long, AuthorHaikuDto)
- uid: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.UpdateAuthorHaikuAsync*
  name: UpdateAuthorHaikuAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_AuthorHaikuService_UpdateAuthorHaikuAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.UpdateAuthorHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.AuthorHaikuService.UpdateAuthorHaikuAsync
  nameWithType: AuthorHaikuService.UpdateAuthorHaikuAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService
  name: IAuthorHaikuService
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html
  commentId: T:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService
  nameWithType: IAuthorHaikuService
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AddAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
  name: AddAuthorHaikuAsync(AuthorHaikuDto)
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_AddAuthorHaikuAsync_Haiku_API_Dtos_AuthorHaikuDto_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AddAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AddAuthorHaikuAsync(Haiku.API.Dtos.AuthorHaikuDto)
  nameWithType: IAuthorHaikuService.AddAuthorHaikuAsync(AuthorHaikuDto)
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AddAuthorHaikuAsync*
  name: AddAuthorHaikuAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_AddAuthorHaikuAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AddAuthorHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AddAuthorHaikuAsync
  nameWithType: IAuthorHaikuService.AddAuthorHaikuAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AuthorHaikuExistsByIdAsync(System.Int64)
  name: AuthorHaikuExistsByIdAsync(long)
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_AuthorHaikuExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AuthorHaikuExistsByIdAsync(System.Int64)
  name.vb: AuthorHaikuExistsByIdAsync(Long)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AuthorHaikuExistsByIdAsync(long)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AuthorHaikuExistsByIdAsync(Long)
  nameWithType: IAuthorHaikuService.AuthorHaikuExistsByIdAsync(long)
  nameWithType.vb: IAuthorHaikuService.AuthorHaikuExistsByIdAsync(Long)
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AuthorHaikuExistsByIdAsync*
  name: AuthorHaikuExistsByIdAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_AuthorHaikuExistsByIdAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AuthorHaikuExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.AuthorHaikuExistsByIdAsync
  nameWithType: IAuthorHaikuService.AuthorHaikuExistsByIdAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.DeleteAuthorHaikuByIdAsync(System.Int64)
  name: DeleteAuthorHaikuByIdAsync(long)
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_DeleteAuthorHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.DeleteAuthorHaikuByIdAsync(System.Int64)
  name.vb: DeleteAuthorHaikuByIdAsync(Long)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.DeleteAuthorHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.DeleteAuthorHaikuByIdAsync(Long)
  nameWithType: IAuthorHaikuService.DeleteAuthorHaikuByIdAsync(long)
  nameWithType.vb: IAuthorHaikuService.DeleteAuthorHaikuByIdAsync(Long)
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.DeleteAuthorHaikuByIdAsync*
  name: DeleteAuthorHaikuByIdAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_DeleteAuthorHaikuByIdAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.DeleteAuthorHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.DeleteAuthorHaikuByIdAsync
  nameWithType: IAuthorHaikuService.DeleteAuthorHaikuByIdAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetAuthorHaikuByIdAsync(System.Int64)
  name: GetAuthorHaikuByIdAsync(long)
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetAuthorHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetAuthorHaikuByIdAsync(System.Int64)
  name.vb: GetAuthorHaikuByIdAsync(Long)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetAuthorHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetAuthorHaikuByIdAsync(Long)
  nameWithType: IAuthorHaikuService.GetAuthorHaikuByIdAsync(long)
  nameWithType.vb: IAuthorHaikuService.GetAuthorHaikuByIdAsync(Long)
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetAuthorHaikuByIdAsync*
  name: GetAuthorHaikuByIdAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetAuthorHaikuByIdAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetAuthorHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetAuthorHaikuByIdAsync
  nameWithType: IAuthorHaikuService.GetAuthorHaikuByIdAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  name: GetPaginatedAuthorHaikusAsync(int, int, string)
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetPaginatedAuthorHaikusAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusAsync(System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusAsync(int, int, string)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
  nameWithType: IAuthorHaikuService.GetPaginatedAuthorHaikusAsync(int, int, string)
  nameWithType.vb: IAuthorHaikuService.GetPaginatedAuthorHaikusAsync(Integer, Integer, String)
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusAsync*
  name: GetPaginatedAuthorHaikusAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetPaginatedAuthorHaikusAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusAsync
  nameWithType: IAuthorHaikuService.GetPaginatedAuthorHaikusAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name: GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetPaginatedAuthorHaikusByAuthorIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
  nameWithType: IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(long, int, int, string)
  nameWithType.vb: IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync(Long, Integer, Integer, String)
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync*
  name: GetPaginatedAuthorHaikusByAuthorIdAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetPaginatedAuthorHaikusByAuthorIdAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync
  nameWithType: IAuthorHaikuService.GetPaginatedAuthorHaikusByAuthorIdAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusAsync(System.String)
  name: GetTotalAuthorHaikusAsync(string)
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetTotalAuthorHaikusAsync_System_String_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusAsync(System.String)
  name.vb: GetTotalAuthorHaikusAsync(String)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusAsync(string)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusAsync(String)
  nameWithType: IAuthorHaikuService.GetTotalAuthorHaikusAsync(string)
  nameWithType.vb: IAuthorHaikuService.GetTotalAuthorHaikusAsync(String)
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusAsync*
  name: GetTotalAuthorHaikusAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetTotalAuthorHaikusAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusAsync
  nameWithType: IAuthorHaikuService.GetTotalAuthorHaikusAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  name: GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetTotalAuthorHaikusByAuthorIdAsync_System_Int64_System_String_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(System.Int64,System.String)
  name.vb: GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
  nameWithType: IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(long, string)
  nameWithType.vb: IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync(Long, String)
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync*
  name: GetTotalAuthorHaikusByAuthorIdAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_GetTotalAuthorHaikusByAuthorIdAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync
  nameWithType: IAuthorHaikuService.GetTotalAuthorHaikusByAuthorIdAsync
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.UpdateAuthorHaikuAsync(System.Int64,Haiku.API.Dtos.AuthorHaikuDto)
  name: UpdateAuthorHaikuAsync(long, AuthorHaikuDto)
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_UpdateAuthorHaikuAsync_System_Int64_Haiku_API_Dtos_AuthorHaikuDto_
  commentId: M:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.UpdateAuthorHaikuAsync(System.Int64,Haiku.API.Dtos.AuthorHaikuDto)
  name.vb: UpdateAuthorHaikuAsync(Long, AuthorHaikuDto)
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.UpdateAuthorHaikuAsync(long, Haiku.API.Dtos.AuthorHaikuDto)
  fullName.vb: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.UpdateAuthorHaikuAsync(Long, Haiku.API.Dtos.AuthorHaikuDto)
  nameWithType: IAuthorHaikuService.UpdateAuthorHaikuAsync(long, AuthorHaikuDto)
  nameWithType.vb: IAuthorHaikuService.UpdateAuthorHaikuAsync(Long, AuthorHaikuDto)
- uid: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.UpdateAuthorHaikuAsync*
  name: UpdateAuthorHaikuAsync
  href: api/Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.html#Haiku_API_Services_AuthorHaikuServices_IAuthorHaikuService_UpdateAuthorHaikuAsync_
  commentId: Overload:Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.UpdateAuthorHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorHaikuServices.IAuthorHaikuService.UpdateAuthorHaikuAsync
  nameWithType: IAuthorHaikuService.UpdateAuthorHaikuAsync
- uid: Haiku.API.Services.AuthorServices
  name: Haiku.API.Services.AuthorServices
  href: api/Haiku.API.Services.AuthorServices.html
  commentId: N:Haiku.API.Services.AuthorServices
  fullName: Haiku.API.Services.AuthorServices
  nameWithType: Haiku.API.Services.AuthorServices
- uid: Haiku.API.Services.AuthorServices.AuthorService
  name: AuthorService
  href: api/Haiku.API.Services.AuthorServices.AuthorService.html
  commentId: T:Haiku.API.Services.AuthorServices.AuthorService
  fullName: Haiku.API.Services.AuthorServices.AuthorService
  nameWithType: AuthorService
- uid: Haiku.API.Services.AuthorServices.AuthorService.#ctor(Haiku.API.Repositories.AuthorRepositories.IAuthorRepository,Haiku.API.Utilities.IUnitOfWork,AutoMapper.IMapper)
  name: AuthorService(IAuthorRepository, IUnitOfWork, IMapper)
  href: api/Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService__ctor_Haiku_API_Repositories_AuthorRepositories_IAuthorRepository_Haiku_API_Utilities_IUnitOfWork_AutoMapper_IMapper_
  commentId: M:Haiku.API.Services.AuthorServices.AuthorService.#ctor(Haiku.API.Repositories.AuthorRepositories.IAuthorRepository,Haiku.API.Utilities.IUnitOfWork,AutoMapper.IMapper)
  name.vb: New(IAuthorRepository, IUnitOfWork, IMapper)
  fullName: Haiku.API.Services.AuthorServices.AuthorService.AuthorService(Haiku.API.Repositories.AuthorRepositories.IAuthorRepository, Haiku.API.Utilities.IUnitOfWork, AutoMapper.IMapper)
  fullName.vb: Haiku.API.Services.AuthorServices.AuthorService.New(Haiku.API.Repositories.AuthorRepositories.IAuthorRepository, Haiku.API.Utilities.IUnitOfWork, AutoMapper.IMapper)
  nameWithType: AuthorService.AuthorService(IAuthorRepository, IUnitOfWork, IMapper)
  nameWithType.vb: AuthorService.New(IAuthorRepository, IUnitOfWork, IMapper)
- uid: Haiku.API.Services.AuthorServices.AuthorService.#ctor*
  name: AuthorService
  href: api/Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService__ctor_
  commentId: Overload:Haiku.API.Services.AuthorServices.AuthorService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Services.AuthorServices.AuthorService.AuthorService
  fullName.vb: Haiku.API.Services.AuthorServices.AuthorService.New
  nameWithType: AuthorService.AuthorService
  nameWithType.vb: AuthorService.New
- uid: Haiku.API.Services.AuthorServices.AuthorService.AddAuthorAsync(Haiku.API.Dtos.AuthorDto)
  name: AddAuthorAsync(AuthorDto)
  href: api/Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_AddAuthorAsync_Haiku_API_Dtos_AuthorDto_
  commentId: M:Haiku.API.Services.AuthorServices.AuthorService.AddAuthorAsync(Haiku.API.Dtos.AuthorDto)
  fullName: Haiku.API.Services.AuthorServices.AuthorService.AddAuthorAsync(Haiku.API.Dtos.AuthorDto)
  nameWithType: AuthorService.AddAuthorAsync(AuthorDto)
- uid: Haiku.API.Services.AuthorServices.AuthorService.AddAuthorAsync*
  name: AddAuthorAsync
  href: api/Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_AddAuthorAsync_
  commentId: Overload:Haiku.API.Services.AuthorServices.AuthorService.AddAuthorAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorServices.AuthorService.AddAuthorAsync
  nameWithType: AuthorService.AddAuthorAsync
- uid: Haiku.API.Services.AuthorServices.AuthorService.AuthorExistsByIdAsync(System.Int64)
  name: AuthorExistsByIdAsync(long)
  href: api/Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_AuthorExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.AuthorServices.AuthorService.AuthorExistsByIdAsync(System.Int64)
  name.vb: AuthorExistsByIdAsync(Long)
  fullName: Haiku.API.Services.AuthorServices.AuthorService.AuthorExistsByIdAsync(long)
  fullName.vb: Haiku.API.Services.AuthorServices.AuthorService.AuthorExistsByIdAsync(Long)
  nameWithType: AuthorService.AuthorExistsByIdAsync(long)
  nameWithType.vb: AuthorService.AuthorExistsByIdAsync(Long)
- uid: Haiku.API.Services.AuthorServices.AuthorService.AuthorExistsByIdAsync*
  name: AuthorExistsByIdAsync
  href: api/Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_AuthorExistsByIdAsync_
  commentId: Overload:Haiku.API.Services.AuthorServices.AuthorService.AuthorExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorServices.AuthorService.AuthorExistsByIdAsync
  nameWithType: AuthorService.AuthorExistsByIdAsync
- uid: Haiku.API.Services.AuthorServices.AuthorService.DeleteAuthorByIdAsync(System.Int64)
  name: DeleteAuthorByIdAsync(long)
  href: api/Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_DeleteAuthorByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.AuthorServices.AuthorService.DeleteAuthorByIdAsync(System.Int64)
  name.vb: DeleteAuthorByIdAsync(Long)
  fullName: Haiku.API.Services.AuthorServices.AuthorService.DeleteAuthorByIdAsync(long)
  fullName.vb: Haiku.API.Services.AuthorServices.AuthorService.DeleteAuthorByIdAsync(Long)
  nameWithType: AuthorService.DeleteAuthorByIdAsync(long)
  nameWithType.vb: AuthorService.DeleteAuthorByIdAsync(Long)
- uid: Haiku.API.Services.AuthorServices.AuthorService.DeleteAuthorByIdAsync*
  name: DeleteAuthorByIdAsync
  href: api/Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_DeleteAuthorByIdAsync_
  commentId: Overload:Haiku.API.Services.AuthorServices.AuthorService.DeleteAuthorByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorServices.AuthorService.DeleteAuthorByIdAsync
  nameWithType: AuthorService.DeleteAuthorByIdAsync
- uid: Haiku.API.Services.AuthorServices.AuthorService.GetAuthorByIdAsync(System.Int64)
  name: GetAuthorByIdAsync(long)
  href: api/Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_GetAuthorByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.AuthorServices.AuthorService.GetAuthorByIdAsync(System.Int64)
  name.vb: GetAuthorByIdAsync(Long)
  fullName: Haiku.API.Services.AuthorServices.AuthorService.GetAuthorByIdAsync(long)
  fullName.vb: Haiku.API.Services.AuthorServices.AuthorService.GetAuthorByIdAsync(Long)
  nameWithType: AuthorService.GetAuthorByIdAsync(long)
  nameWithType.vb: AuthorService.GetAuthorByIdAsync(Long)
- uid: Haiku.API.Services.AuthorServices.AuthorService.GetAuthorByIdAsync*
  name: GetAuthorByIdAsync
  href: api/Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_GetAuthorByIdAsync_
  commentId: Overload:Haiku.API.Services.AuthorServices.AuthorService.GetAuthorByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorServices.AuthorService.GetAuthorByIdAsync
  nameWithType: AuthorService.GetAuthorByIdAsync
- uid: Haiku.API.Services.AuthorServices.AuthorService.GetPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
  name: GetPaginatedAuthorsAsync(int, int, string)
  href: api/Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_GetPaginatedAuthorsAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Services.AuthorServices.AuthorService.GetPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedAuthorsAsync(Integer, Integer, String)
  fullName: Haiku.API.Services.AuthorServices.AuthorService.GetPaginatedAuthorsAsync(int, int, string)
  fullName.vb: Haiku.API.Services.AuthorServices.AuthorService.GetPaginatedAuthorsAsync(Integer, Integer, String)
  nameWithType: AuthorService.GetPaginatedAuthorsAsync(int, int, string)
  nameWithType.vb: AuthorService.GetPaginatedAuthorsAsync(Integer, Integer, String)
- uid: Haiku.API.Services.AuthorServices.AuthorService.GetPaginatedAuthorsAsync*
  name: GetPaginatedAuthorsAsync
  href: api/Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_GetPaginatedAuthorsAsync_
  commentId: Overload:Haiku.API.Services.AuthorServices.AuthorService.GetPaginatedAuthorsAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorServices.AuthorService.GetPaginatedAuthorsAsync
  nameWithType: AuthorService.GetPaginatedAuthorsAsync
- uid: Haiku.API.Services.AuthorServices.AuthorService.GetTotalAuthorsAsync(System.String)
  name: GetTotalAuthorsAsync(string)
  href: api/Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_GetTotalAuthorsAsync_System_String_
  commentId: M:Haiku.API.Services.AuthorServices.AuthorService.GetTotalAuthorsAsync(System.String)
  name.vb: GetTotalAuthorsAsync(String)
  fullName: Haiku.API.Services.AuthorServices.AuthorService.GetTotalAuthorsAsync(string)
  fullName.vb: Haiku.API.Services.AuthorServices.AuthorService.GetTotalAuthorsAsync(String)
  nameWithType: AuthorService.GetTotalAuthorsAsync(string)
  nameWithType.vb: AuthorService.GetTotalAuthorsAsync(String)
- uid: Haiku.API.Services.AuthorServices.AuthorService.GetTotalAuthorsAsync*
  name: GetTotalAuthorsAsync
  href: api/Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_GetTotalAuthorsAsync_
  commentId: Overload:Haiku.API.Services.AuthorServices.AuthorService.GetTotalAuthorsAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorServices.AuthorService.GetTotalAuthorsAsync
  nameWithType: AuthorService.GetTotalAuthorsAsync
- uid: Haiku.API.Services.AuthorServices.AuthorService.UpdateAuthorAsync(System.Int64,Haiku.API.Dtos.AuthorDto)
  name: UpdateAuthorAsync(long, AuthorDto)
  href: api/Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_UpdateAuthorAsync_System_Int64_Haiku_API_Dtos_AuthorDto_
  commentId: M:Haiku.API.Services.AuthorServices.AuthorService.UpdateAuthorAsync(System.Int64,Haiku.API.Dtos.AuthorDto)
  name.vb: UpdateAuthorAsync(Long, AuthorDto)
  fullName: Haiku.API.Services.AuthorServices.AuthorService.UpdateAuthorAsync(long, Haiku.API.Dtos.AuthorDto)
  fullName.vb: Haiku.API.Services.AuthorServices.AuthorService.UpdateAuthorAsync(Long, Haiku.API.Dtos.AuthorDto)
  nameWithType: AuthorService.UpdateAuthorAsync(long, AuthorDto)
  nameWithType.vb: AuthorService.UpdateAuthorAsync(Long, AuthorDto)
- uid: Haiku.API.Services.AuthorServices.AuthorService.UpdateAuthorAsync*
  name: UpdateAuthorAsync
  href: api/Haiku.API.Services.AuthorServices.AuthorService.html#Haiku_API_Services_AuthorServices_AuthorService_UpdateAuthorAsync_
  commentId: Overload:Haiku.API.Services.AuthorServices.AuthorService.UpdateAuthorAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorServices.AuthorService.UpdateAuthorAsync
  nameWithType: AuthorService.UpdateAuthorAsync
- uid: Haiku.API.Services.AuthorServices.IAuthorService
  name: IAuthorService
  href: api/Haiku.API.Services.AuthorServices.IAuthorService.html
  commentId: T:Haiku.API.Services.AuthorServices.IAuthorService
  fullName: Haiku.API.Services.AuthorServices.IAuthorService
  nameWithType: IAuthorService
- uid: Haiku.API.Services.AuthorServices.IAuthorService.AddAuthorAsync(Haiku.API.Dtos.AuthorDto)
  name: AddAuthorAsync(AuthorDto)
  href: api/Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_AddAuthorAsync_Haiku_API_Dtos_AuthorDto_
  commentId: M:Haiku.API.Services.AuthorServices.IAuthorService.AddAuthorAsync(Haiku.API.Dtos.AuthorDto)
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.AddAuthorAsync(Haiku.API.Dtos.AuthorDto)
  nameWithType: IAuthorService.AddAuthorAsync(AuthorDto)
- uid: Haiku.API.Services.AuthorServices.IAuthorService.AddAuthorAsync*
  name: AddAuthorAsync
  href: api/Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_AddAuthorAsync_
  commentId: Overload:Haiku.API.Services.AuthorServices.IAuthorService.AddAuthorAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.AddAuthorAsync
  nameWithType: IAuthorService.AddAuthorAsync
- uid: Haiku.API.Services.AuthorServices.IAuthorService.AuthorExistsByIdAsync(System.Int64)
  name: AuthorExistsByIdAsync(long)
  href: api/Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_AuthorExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.AuthorServices.IAuthorService.AuthorExistsByIdAsync(System.Int64)
  name.vb: AuthorExistsByIdAsync(Long)
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.AuthorExistsByIdAsync(long)
  fullName.vb: Haiku.API.Services.AuthorServices.IAuthorService.AuthorExistsByIdAsync(Long)
  nameWithType: IAuthorService.AuthorExistsByIdAsync(long)
  nameWithType.vb: IAuthorService.AuthorExistsByIdAsync(Long)
- uid: Haiku.API.Services.AuthorServices.IAuthorService.AuthorExistsByIdAsync*
  name: AuthorExistsByIdAsync
  href: api/Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_AuthorExistsByIdAsync_
  commentId: Overload:Haiku.API.Services.AuthorServices.IAuthorService.AuthorExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.AuthorExistsByIdAsync
  nameWithType: IAuthorService.AuthorExistsByIdAsync
- uid: Haiku.API.Services.AuthorServices.IAuthorService.DeleteAuthorByIdAsync(System.Int64)
  name: DeleteAuthorByIdAsync(long)
  href: api/Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_DeleteAuthorByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.AuthorServices.IAuthorService.DeleteAuthorByIdAsync(System.Int64)
  name.vb: DeleteAuthorByIdAsync(Long)
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.DeleteAuthorByIdAsync(long)
  fullName.vb: Haiku.API.Services.AuthorServices.IAuthorService.DeleteAuthorByIdAsync(Long)
  nameWithType: IAuthorService.DeleteAuthorByIdAsync(long)
  nameWithType.vb: IAuthorService.DeleteAuthorByIdAsync(Long)
- uid: Haiku.API.Services.AuthorServices.IAuthorService.DeleteAuthorByIdAsync*
  name: DeleteAuthorByIdAsync
  href: api/Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_DeleteAuthorByIdAsync_
  commentId: Overload:Haiku.API.Services.AuthorServices.IAuthorService.DeleteAuthorByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.DeleteAuthorByIdAsync
  nameWithType: IAuthorService.DeleteAuthorByIdAsync
- uid: Haiku.API.Services.AuthorServices.IAuthorService.GetAuthorByIdAsync(System.Int64)
  name: GetAuthorByIdAsync(long)
  href: api/Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_GetAuthorByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.AuthorServices.IAuthorService.GetAuthorByIdAsync(System.Int64)
  name.vb: GetAuthorByIdAsync(Long)
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.GetAuthorByIdAsync(long)
  fullName.vb: Haiku.API.Services.AuthorServices.IAuthorService.GetAuthorByIdAsync(Long)
  nameWithType: IAuthorService.GetAuthorByIdAsync(long)
  nameWithType.vb: IAuthorService.GetAuthorByIdAsync(Long)
- uid: Haiku.API.Services.AuthorServices.IAuthorService.GetAuthorByIdAsync*
  name: GetAuthorByIdAsync
  href: api/Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_GetAuthorByIdAsync_
  commentId: Overload:Haiku.API.Services.AuthorServices.IAuthorService.GetAuthorByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.GetAuthorByIdAsync
  nameWithType: IAuthorService.GetAuthorByIdAsync
- uid: Haiku.API.Services.AuthorServices.IAuthorService.GetPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
  name: GetPaginatedAuthorsAsync(int, int, string)
  href: api/Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_GetPaginatedAuthorsAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Services.AuthorServices.IAuthorService.GetPaginatedAuthorsAsync(System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedAuthorsAsync(Integer, Integer, String)
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.GetPaginatedAuthorsAsync(int, int, string)
  fullName.vb: Haiku.API.Services.AuthorServices.IAuthorService.GetPaginatedAuthorsAsync(Integer, Integer, String)
  nameWithType: IAuthorService.GetPaginatedAuthorsAsync(int, int, string)
  nameWithType.vb: IAuthorService.GetPaginatedAuthorsAsync(Integer, Integer, String)
- uid: Haiku.API.Services.AuthorServices.IAuthorService.GetPaginatedAuthorsAsync*
  name: GetPaginatedAuthorsAsync
  href: api/Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_GetPaginatedAuthorsAsync_
  commentId: Overload:Haiku.API.Services.AuthorServices.IAuthorService.GetPaginatedAuthorsAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.GetPaginatedAuthorsAsync
  nameWithType: IAuthorService.GetPaginatedAuthorsAsync
- uid: Haiku.API.Services.AuthorServices.IAuthorService.GetTotalAuthorsAsync(System.String)
  name: GetTotalAuthorsAsync(string)
  href: api/Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_GetTotalAuthorsAsync_System_String_
  commentId: M:Haiku.API.Services.AuthorServices.IAuthorService.GetTotalAuthorsAsync(System.String)
  name.vb: GetTotalAuthorsAsync(String)
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.GetTotalAuthorsAsync(string)
  fullName.vb: Haiku.API.Services.AuthorServices.IAuthorService.GetTotalAuthorsAsync(String)
  nameWithType: IAuthorService.GetTotalAuthorsAsync(string)
  nameWithType.vb: IAuthorService.GetTotalAuthorsAsync(String)
- uid: Haiku.API.Services.AuthorServices.IAuthorService.GetTotalAuthorsAsync*
  name: GetTotalAuthorsAsync
  href: api/Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_GetTotalAuthorsAsync_
  commentId: Overload:Haiku.API.Services.AuthorServices.IAuthorService.GetTotalAuthorsAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.GetTotalAuthorsAsync
  nameWithType: IAuthorService.GetTotalAuthorsAsync
- uid: Haiku.API.Services.AuthorServices.IAuthorService.UpdateAuthorAsync(System.Int64,Haiku.API.Dtos.AuthorDto)
  name: UpdateAuthorAsync(long, AuthorDto)
  href: api/Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_UpdateAuthorAsync_System_Int64_Haiku_API_Dtos_AuthorDto_
  commentId: M:Haiku.API.Services.AuthorServices.IAuthorService.UpdateAuthorAsync(System.Int64,Haiku.API.Dtos.AuthorDto)
  name.vb: UpdateAuthorAsync(Long, AuthorDto)
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.UpdateAuthorAsync(long, Haiku.API.Dtos.AuthorDto)
  fullName.vb: Haiku.API.Services.AuthorServices.IAuthorService.UpdateAuthorAsync(Long, Haiku.API.Dtos.AuthorDto)
  nameWithType: IAuthorService.UpdateAuthorAsync(long, AuthorDto)
  nameWithType.vb: IAuthorService.UpdateAuthorAsync(Long, AuthorDto)
- uid: Haiku.API.Services.AuthorServices.IAuthorService.UpdateAuthorAsync*
  name: UpdateAuthorAsync
  href: api/Haiku.API.Services.AuthorServices.IAuthorService.html#Haiku_API_Services_AuthorServices_IAuthorService_UpdateAuthorAsync_
  commentId: Overload:Haiku.API.Services.AuthorServices.IAuthorService.UpdateAuthorAsync
  isSpec: "True"
  fullName: Haiku.API.Services.AuthorServices.IAuthorService.UpdateAuthorAsync
  nameWithType: IAuthorService.UpdateAuthorAsync
- uid: Haiku.API.Services.IUserProfileServices
  name: Haiku.API.Services.IUserProfileServices
  href: api/Haiku.API.Services.IUserProfileServices.html
  commentId: N:Haiku.API.Services.IUserProfileServices
  fullName: Haiku.API.Services.IUserProfileServices
  nameWithType: Haiku.API.Services.IUserProfileServices
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService
  name: IUserProfileService
  href: api/Haiku.API.Services.IUserProfileServices.IUserProfileService.html
  commentId: T:Haiku.API.Services.IUserProfileServices.IUserProfileService
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService
  nameWithType: IUserProfileService
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService.AddUserProfileAsync(Haiku.API.Dtos.UserProfileDto)
  name: AddUserProfileAsync(UserProfileDto)
  href: api/Haiku.API.Services.IUserProfileServices.IUserProfileService.html#Haiku_API_Services_IUserProfileServices_IUserProfileService_AddUserProfileAsync_Haiku_API_Dtos_UserProfileDto_
  commentId: M:Haiku.API.Services.IUserProfileServices.IUserProfileService.AddUserProfileAsync(Haiku.API.Dtos.UserProfileDto)
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService.AddUserProfileAsync(Haiku.API.Dtos.UserProfileDto)
  nameWithType: IUserProfileService.AddUserProfileAsync(UserProfileDto)
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService.AddUserProfileAsync*
  name: AddUserProfileAsync
  href: api/Haiku.API.Services.IUserProfileServices.IUserProfileService.html#Haiku_API_Services_IUserProfileServices_IUserProfileService_AddUserProfileAsync_
  commentId: Overload:Haiku.API.Services.IUserProfileServices.IUserProfileService.AddUserProfileAsync
  isSpec: "True"
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService.AddUserProfileAsync
  nameWithType: IUserProfileService.AddUserProfileAsync
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List{System.Int64})
  name: GetAllUserProfilesByUserIdsAsync(List<long>)
  href: api/Haiku.API.Services.IUserProfileServices.IUserProfileService.html#Haiku_API_Services_IUserProfileServices_IUserProfileService_GetAllUserProfilesByUserIdsAsync_System_Collections_Generic_List_System_Int64__
  commentId: M:Haiku.API.Services.IUserProfileServices.IUserProfileService.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List{System.Int64})
  name.vb: GetAllUserProfilesByUserIdsAsync(List(Of Long))
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List<long>)
  fullName.vb: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List(Of Long))
  nameWithType: IUserProfileService.GetAllUserProfilesByUserIdsAsync(List<long>)
  nameWithType.vb: IUserProfileService.GetAllUserProfilesByUserIdsAsync(List(Of Long))
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetAllUserProfilesByUserIdsAsync*
  name: GetAllUserProfilesByUserIdsAsync
  href: api/Haiku.API.Services.IUserProfileServices.IUserProfileService.html#Haiku_API_Services_IUserProfileServices_IUserProfileService_GetAllUserProfilesByUserIdsAsync_
  commentId: Overload:Haiku.API.Services.IUserProfileServices.IUserProfileService.GetAllUserProfilesByUserIdsAsync
  isSpec: "True"
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetAllUserProfilesByUserIdsAsync
  nameWithType: IUserProfileService.GetAllUserProfilesByUserIdsAsync
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetTotalUserProfilesAsync
  name: GetTotalUserProfilesAsync()
  href: api/Haiku.API.Services.IUserProfileServices.IUserProfileService.html#Haiku_API_Services_IUserProfileServices_IUserProfileService_GetTotalUserProfilesAsync
  commentId: M:Haiku.API.Services.IUserProfileServices.IUserProfileService.GetTotalUserProfilesAsync
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetTotalUserProfilesAsync()
  nameWithType: IUserProfileService.GetTotalUserProfilesAsync()
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetTotalUserProfilesAsync*
  name: GetTotalUserProfilesAsync
  href: api/Haiku.API.Services.IUserProfileServices.IUserProfileService.html#Haiku_API_Services_IUserProfileServices_IUserProfileService_GetTotalUserProfilesAsync_
  commentId: Overload:Haiku.API.Services.IUserProfileServices.IUserProfileService.GetTotalUserProfilesAsync
  isSpec: "True"
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetTotalUserProfilesAsync
  nameWithType: IUserProfileService.GetTotalUserProfilesAsync
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetUserProfileByIdAsync(System.Int64)
  name: GetUserProfileByIdAsync(long)
  href: api/Haiku.API.Services.IUserProfileServices.IUserProfileService.html#Haiku_API_Services_IUserProfileServices_IUserProfileService_GetUserProfileByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.IUserProfileServices.IUserProfileService.GetUserProfileByIdAsync(System.Int64)
  name.vb: GetUserProfileByIdAsync(Long)
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetUserProfileByIdAsync(long)
  fullName.vb: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetUserProfileByIdAsync(Long)
  nameWithType: IUserProfileService.GetUserProfileByIdAsync(long)
  nameWithType.vb: IUserProfileService.GetUserProfileByIdAsync(Long)
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetUserProfileByIdAsync*
  name: GetUserProfileByIdAsync
  href: api/Haiku.API.Services.IUserProfileServices.IUserProfileService.html#Haiku_API_Services_IUserProfileServices_IUserProfileService_GetUserProfileByIdAsync_
  commentId: Overload:Haiku.API.Services.IUserProfileServices.IUserProfileService.GetUserProfileByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetUserProfileByIdAsync
  nameWithType: IUserProfileService.GetUserProfileByIdAsync
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetUserProfileByUserIdAsync(System.Int64)
  name: GetUserProfileByUserIdAsync(long)
  href: api/Haiku.API.Services.IUserProfileServices.IUserProfileService.html#Haiku_API_Services_IUserProfileServices_IUserProfileService_GetUserProfileByUserIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.IUserProfileServices.IUserProfileService.GetUserProfileByUserIdAsync(System.Int64)
  name.vb: GetUserProfileByUserIdAsync(Long)
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetUserProfileByUserIdAsync(long)
  fullName.vb: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetUserProfileByUserIdAsync(Long)
  nameWithType: IUserProfileService.GetUserProfileByUserIdAsync(long)
  nameWithType.vb: IUserProfileService.GetUserProfileByUserIdAsync(Long)
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetUserProfileByUserIdAsync*
  name: GetUserProfileByUserIdAsync
  href: api/Haiku.API.Services.IUserProfileServices.IUserProfileService.html#Haiku_API_Services_IUserProfileServices_IUserProfileService_GetUserProfileByUserIdAsync_
  commentId: Overload:Haiku.API.Services.IUserProfileServices.IUserProfileService.GetUserProfileByUserIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService.GetUserProfileByUserIdAsync
  nameWithType: IUserProfileService.GetUserProfileByUserIdAsync
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService.SaveProfileImageAsync(Microsoft.AspNetCore.Http.IFormFile)
  name: SaveProfileImageAsync(IFormFile)
  href: api/Haiku.API.Services.IUserProfileServices.IUserProfileService.html#Haiku_API_Services_IUserProfileServices_IUserProfileService_SaveProfileImageAsync_Microsoft_AspNetCore_Http_IFormFile_
  commentId: M:Haiku.API.Services.IUserProfileServices.IUserProfileService.SaveProfileImageAsync(Microsoft.AspNetCore.Http.IFormFile)
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService.SaveProfileImageAsync(Microsoft.AspNetCore.Http.IFormFile)
  nameWithType: IUserProfileService.SaveProfileImageAsync(IFormFile)
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService.SaveProfileImageAsync*
  name: SaveProfileImageAsync
  href: api/Haiku.API.Services.IUserProfileServices.IUserProfileService.html#Haiku_API_Services_IUserProfileServices_IUserProfileService_SaveProfileImageAsync_
  commentId: Overload:Haiku.API.Services.IUserProfileServices.IUserProfileService.SaveProfileImageAsync
  isSpec: "True"
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService.SaveProfileImageAsync
  nameWithType: IUserProfileService.SaveProfileImageAsync
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService.UpdateUserProfileAsync(System.Int64,Haiku.API.Dtos.UserProfileDto)
  name: UpdateUserProfileAsync(long, UserProfileDto)
  href: api/Haiku.API.Services.IUserProfileServices.IUserProfileService.html#Haiku_API_Services_IUserProfileServices_IUserProfileService_UpdateUserProfileAsync_System_Int64_Haiku_API_Dtos_UserProfileDto_
  commentId: M:Haiku.API.Services.IUserProfileServices.IUserProfileService.UpdateUserProfileAsync(System.Int64,Haiku.API.Dtos.UserProfileDto)
  name.vb: UpdateUserProfileAsync(Long, UserProfileDto)
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService.UpdateUserProfileAsync(long, Haiku.API.Dtos.UserProfileDto)
  fullName.vb: Haiku.API.Services.IUserProfileServices.IUserProfileService.UpdateUserProfileAsync(Long, Haiku.API.Dtos.UserProfileDto)
  nameWithType: IUserProfileService.UpdateUserProfileAsync(long, UserProfileDto)
  nameWithType.vb: IUserProfileService.UpdateUserProfileAsync(Long, UserProfileDto)
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService.UpdateUserProfileAsync*
  name: UpdateUserProfileAsync
  href: api/Haiku.API.Services.IUserProfileServices.IUserProfileService.html#Haiku_API_Services_IUserProfileServices_IUserProfileService_UpdateUserProfileAsync_
  commentId: Overload:Haiku.API.Services.IUserProfileServices.IUserProfileService.UpdateUserProfileAsync
  isSpec: "True"
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService.UpdateUserProfileAsync
  nameWithType: IUserProfileService.UpdateUserProfileAsync
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService.UserProfileExistsByIdAsync(System.Int64)
  name: UserProfileExistsByIdAsync(long)
  href: api/Haiku.API.Services.IUserProfileServices.IUserProfileService.html#Haiku_API_Services_IUserProfileServices_IUserProfileService_UserProfileExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.IUserProfileServices.IUserProfileService.UserProfileExistsByIdAsync(System.Int64)
  name.vb: UserProfileExistsByIdAsync(Long)
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService.UserProfileExistsByIdAsync(long)
  fullName.vb: Haiku.API.Services.IUserProfileServices.IUserProfileService.UserProfileExistsByIdAsync(Long)
  nameWithType: IUserProfileService.UserProfileExistsByIdAsync(long)
  nameWithType.vb: IUserProfileService.UserProfileExistsByIdAsync(Long)
- uid: Haiku.API.Services.IUserProfileServices.IUserProfileService.UserProfileExistsByIdAsync*
  name: UserProfileExistsByIdAsync
  href: api/Haiku.API.Services.IUserProfileServices.IUserProfileService.html#Haiku_API_Services_IUserProfileServices_IUserProfileService_UserProfileExistsByIdAsync_
  commentId: Overload:Haiku.API.Services.IUserProfileServices.IUserProfileService.UserProfileExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.IUserProfileServices.IUserProfileService.UserProfileExistsByIdAsync
  nameWithType: IUserProfileService.UserProfileExistsByIdAsync
- uid: Haiku.API.Services.PaginationService
  name: Haiku.API.Services.PaginationService
  href: api/Haiku.API.Services.PaginationService.html
  commentId: N:Haiku.API.Services.PaginationService
  fullName: Haiku.API.Services.PaginationService
  nameWithType: Haiku.API.Services.PaginationService
- uid: Haiku.API.Services.PaginationService.IPaginationService
  name: IPaginationService
  href: api/Haiku.API.Services.PaginationService.IPaginationService.html
  commentId: T:Haiku.API.Services.PaginationService.IPaginationService
  fullName: Haiku.API.Services.PaginationService.IPaginationService
  nameWithType: IPaginationService
- uid: Haiku.API.Services.PaginationService.IPaginationService.GetPaginationMetaData(System.Int32,System.Int32,System.Int32)
  name: GetPaginationMetaData(int, int, int)
  href: api/Haiku.API.Services.PaginationService.IPaginationService.html#Haiku_API_Services_PaginationService_IPaginationService_GetPaginationMetaData_System_Int32_System_Int32_System_Int32_
  commentId: M:Haiku.API.Services.PaginationService.IPaginationService.GetPaginationMetaData(System.Int32,System.Int32,System.Int32)
  name.vb: GetPaginationMetaData(Integer, Integer, Integer)
  fullName: Haiku.API.Services.PaginationService.IPaginationService.GetPaginationMetaData(int, int, int)
  fullName.vb: Haiku.API.Services.PaginationService.IPaginationService.GetPaginationMetaData(Integer, Integer, Integer)
  nameWithType: IPaginationService.GetPaginationMetaData(int, int, int)
  nameWithType.vb: IPaginationService.GetPaginationMetaData(Integer, Integer, Integer)
- uid: Haiku.API.Services.PaginationService.IPaginationService.GetPaginationMetaData*
  name: GetPaginationMetaData
  href: api/Haiku.API.Services.PaginationService.IPaginationService.html#Haiku_API_Services_PaginationService_IPaginationService_GetPaginationMetaData_
  commentId: Overload:Haiku.API.Services.PaginationService.IPaginationService.GetPaginationMetaData
  isSpec: "True"
  fullName: Haiku.API.Services.PaginationService.IPaginationService.GetPaginationMetaData
  nameWithType: IPaginationService.GetPaginationMetaData
- uid: Haiku.API.Services.PaginationService.PaginationService
  name: PaginationService
  href: api/Haiku.API.Services.PaginationService.PaginationService.html
  commentId: T:Haiku.API.Services.PaginationService.PaginationService
  fullName: Haiku.API.Services.PaginationService.PaginationService
  nameWithType: PaginationService
- uid: Haiku.API.Services.PaginationService.PaginationService.GetPaginationMetaData(System.Int32,System.Int32,System.Int32)
  name: GetPaginationMetaData(int, int, int)
  href: api/Haiku.API.Services.PaginationService.PaginationService.html#Haiku_API_Services_PaginationService_PaginationService_GetPaginationMetaData_System_Int32_System_Int32_System_Int32_
  commentId: M:Haiku.API.Services.PaginationService.PaginationService.GetPaginationMetaData(System.Int32,System.Int32,System.Int32)
  name.vb: GetPaginationMetaData(Integer, Integer, Integer)
  fullName: Haiku.API.Services.PaginationService.PaginationService.GetPaginationMetaData(int, int, int)
  fullName.vb: Haiku.API.Services.PaginationService.PaginationService.GetPaginationMetaData(Integer, Integer, Integer)
  nameWithType: PaginationService.GetPaginationMetaData(int, int, int)
  nameWithType.vb: PaginationService.GetPaginationMetaData(Integer, Integer, Integer)
- uid: Haiku.API.Services.PaginationService.PaginationService.GetPaginationMetaData*
  name: GetPaginationMetaData
  href: api/Haiku.API.Services.PaginationService.PaginationService.html#Haiku_API_Services_PaginationService_PaginationService_GetPaginationMetaData_
  commentId: Overload:Haiku.API.Services.PaginationService.PaginationService.GetPaginationMetaData
  isSpec: "True"
  fullName: Haiku.API.Services.PaginationService.PaginationService.GetPaginationMetaData
  nameWithType: PaginationService.GetPaginationMetaData
- uid: Haiku.API.Services.RoleServices
  name: Haiku.API.Services.RoleServices
  href: api/Haiku.API.Services.RoleServices.html
  commentId: N:Haiku.API.Services.RoleServices
  fullName: Haiku.API.Services.RoleServices
  nameWithType: Haiku.API.Services.RoleServices
- uid: Haiku.API.Services.RoleServices.IRoleService
  name: IRoleService
  href: api/Haiku.API.Services.RoleServices.IRoleService.html
  commentId: T:Haiku.API.Services.RoleServices.IRoleService
  fullName: Haiku.API.Services.RoleServices.IRoleService
  nameWithType: IRoleService
- uid: Haiku.API.Services.RoleServices.IRoleService.GetUserRoleAsync(System.Int64)
  name: GetUserRoleAsync(long)
  href: api/Haiku.API.Services.RoleServices.IRoleService.html#Haiku_API_Services_RoleServices_IRoleService_GetUserRoleAsync_System_Int64_
  commentId: M:Haiku.API.Services.RoleServices.IRoleService.GetUserRoleAsync(System.Int64)
  name.vb: GetUserRoleAsync(Long)
  fullName: Haiku.API.Services.RoleServices.IRoleService.GetUserRoleAsync(long)
  fullName.vb: Haiku.API.Services.RoleServices.IRoleService.GetUserRoleAsync(Long)
  nameWithType: IRoleService.GetUserRoleAsync(long)
  nameWithType.vb: IRoleService.GetUserRoleAsync(Long)
- uid: Haiku.API.Services.RoleServices.IRoleService.GetUserRoleAsync*
  name: GetUserRoleAsync
  href: api/Haiku.API.Services.RoleServices.IRoleService.html#Haiku_API_Services_RoleServices_IRoleService_GetUserRoleAsync_
  commentId: Overload:Haiku.API.Services.RoleServices.IRoleService.GetUserRoleAsync
  isSpec: "True"
  fullName: Haiku.API.Services.RoleServices.IRoleService.GetUserRoleAsync
  nameWithType: IRoleService.GetUserRoleAsync
- uid: Haiku.API.Services.RoleServices.RoleService
  name: RoleService
  href: api/Haiku.API.Services.RoleServices.RoleService.html
  commentId: T:Haiku.API.Services.RoleServices.RoleService
  fullName: Haiku.API.Services.RoleServices.RoleService
  nameWithType: RoleService
- uid: Haiku.API.Services.RoleServices.RoleService.#ctor(Haiku.API.Repositories.RoleRepositories.IRoleRepository)
  name: RoleService(IRoleRepository)
  href: api/Haiku.API.Services.RoleServices.RoleService.html#Haiku_API_Services_RoleServices_RoleService__ctor_Haiku_API_Repositories_RoleRepositories_IRoleRepository_
  commentId: M:Haiku.API.Services.RoleServices.RoleService.#ctor(Haiku.API.Repositories.RoleRepositories.IRoleRepository)
  name.vb: New(IRoleRepository)
  fullName: Haiku.API.Services.RoleServices.RoleService.RoleService(Haiku.API.Repositories.RoleRepositories.IRoleRepository)
  fullName.vb: Haiku.API.Services.RoleServices.RoleService.New(Haiku.API.Repositories.RoleRepositories.IRoleRepository)
  nameWithType: RoleService.RoleService(IRoleRepository)
  nameWithType.vb: RoleService.New(IRoleRepository)
- uid: Haiku.API.Services.RoleServices.RoleService.#ctor*
  name: RoleService
  href: api/Haiku.API.Services.RoleServices.RoleService.html#Haiku_API_Services_RoleServices_RoleService__ctor_
  commentId: Overload:Haiku.API.Services.RoleServices.RoleService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Services.RoleServices.RoleService.RoleService
  fullName.vb: Haiku.API.Services.RoleServices.RoleService.New
  nameWithType: RoleService.RoleService
  nameWithType.vb: RoleService.New
- uid: Haiku.API.Services.RoleServices.RoleService.GetUserRoleAsync(System.Int64)
  name: GetUserRoleAsync(long)
  href: api/Haiku.API.Services.RoleServices.RoleService.html#Haiku_API_Services_RoleServices_RoleService_GetUserRoleAsync_System_Int64_
  commentId: M:Haiku.API.Services.RoleServices.RoleService.GetUserRoleAsync(System.Int64)
  name.vb: GetUserRoleAsync(Long)
  fullName: Haiku.API.Services.RoleServices.RoleService.GetUserRoleAsync(long)
  fullName.vb: Haiku.API.Services.RoleServices.RoleService.GetUserRoleAsync(Long)
  nameWithType: RoleService.GetUserRoleAsync(long)
  nameWithType.vb: RoleService.GetUserRoleAsync(Long)
- uid: Haiku.API.Services.RoleServices.RoleService.GetUserRoleAsync*
  name: GetUserRoleAsync
  href: api/Haiku.API.Services.RoleServices.RoleService.html#Haiku_API_Services_RoleServices_RoleService_GetUserRoleAsync_
  commentId: Overload:Haiku.API.Services.RoleServices.RoleService.GetUserRoleAsync
  isSpec: "True"
  fullName: Haiku.API.Services.RoleServices.RoleService.GetUserRoleAsync
  nameWithType: RoleService.GetUserRoleAsync
- uid: Haiku.API.Services.UserHaikuServices
  name: Haiku.API.Services.UserHaikuServices
  href: api/Haiku.API.Services.UserHaikuServices.html
  commentId: N:Haiku.API.Services.UserHaikuServices
  fullName: Haiku.API.Services.UserHaikuServices
  nameWithType: Haiku.API.Services.UserHaikuServices
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService
  name: IUserHaikuService
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html
  commentId: T:Haiku.API.Services.UserHaikuServices.IUserHaikuService
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService
  nameWithType: IUserHaikuService
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.AddUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
  name: AddUserHaikuAsync(UserHaikuDto)
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_AddUserHaikuAsync_Haiku_API_Dtos_UserHaikuDto_
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.AddUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.AddUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
  nameWithType: IUserHaikuService.AddUserHaikuAsync(UserHaikuDto)
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.AddUserHaikuAsync*
  name: AddUserHaikuAsync
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_AddUserHaikuAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.IUserHaikuService.AddUserHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.AddUserHaikuAsync
  nameWithType: IUserHaikuService.AddUserHaikuAsync
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.DeleteUserHaikuByIdAsync(System.Int64)
  name: DeleteUserHaikuByIdAsync(long)
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_DeleteUserHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.DeleteUserHaikuByIdAsync(System.Int64)
  name.vb: DeleteUserHaikuByIdAsync(Long)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.DeleteUserHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Services.UserHaikuServices.IUserHaikuService.DeleteUserHaikuByIdAsync(Long)
  nameWithType: IUserHaikuService.DeleteUserHaikuByIdAsync(long)
  nameWithType.vb: IUserHaikuService.DeleteUserHaikuByIdAsync(Long)
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.DeleteUserHaikuByIdAsync*
  name: DeleteUserHaikuByIdAsync
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_DeleteUserHaikuByIdAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.IUserHaikuService.DeleteUserHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.DeleteUserHaikuByIdAsync
  nameWithType: IUserHaikuService.DeleteUserHaikuByIdAsync
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusAsync(System.Int32,System.Int32,System.String)
  name: GetPaginatedUserHaikusAsync(int, int, string)
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetPaginatedUserHaikusAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusAsync(System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedUserHaikusAsync(Integer, Integer, String)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusAsync(int, int, string)
  fullName.vb: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusAsync(Integer, Integer, String)
  nameWithType: IUserHaikuService.GetPaginatedUserHaikusAsync(int, int, string)
  nameWithType.vb: IUserHaikuService.GetPaginatedUserHaikusAsync(Integer, Integer, String)
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusAsync*
  name: GetPaginatedUserHaikusAsync
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetPaginatedUserHaikusAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusAsync
  nameWithType: IUserHaikuService.GetPaginatedUserHaikusAsync
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name: GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetPaginatedUserHaikusByUserIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  fullName.vb: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
  nameWithType: IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  nameWithType.vb: IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync*
  name: GetPaginatedUserHaikusByUserIdAsync
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetPaginatedUserHaikusByUserIdAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync
  nameWithType: IUserHaikuService.GetPaginatedUserHaikusByUserIdAsync
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusAsync(System.String)
  name: GetTotalUserHaikusAsync(string)
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetTotalUserHaikusAsync_System_String_
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusAsync(System.String)
  name.vb: GetTotalUserHaikusAsync(String)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusAsync(string)
  fullName.vb: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusAsync(String)
  nameWithType: IUserHaikuService.GetTotalUserHaikusAsync(string)
  nameWithType.vb: IUserHaikuService.GetTotalUserHaikusAsync(String)
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusAsync*
  name: GetTotalUserHaikusAsync
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetTotalUserHaikusAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusAsync
  nameWithType: IUserHaikuService.GetTotalUserHaikusAsync
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusByUserIdAsync(System.Int64,System.String)
  name: GetTotalUserHaikusByUserIdAsync(long, string)
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetTotalUserHaikusByUserIdAsync_System_Int64_System_String_
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusByUserIdAsync(System.Int64,System.String)
  name.vb: GetTotalUserHaikusByUserIdAsync(Long, String)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusByUserIdAsync(long, string)
  fullName.vb: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusByUserIdAsync(Long, String)
  nameWithType: IUserHaikuService.GetTotalUserHaikusByUserIdAsync(long, string)
  nameWithType.vb: IUserHaikuService.GetTotalUserHaikusByUserIdAsync(Long, String)
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusByUserIdAsync*
  name: GetTotalUserHaikusByUserIdAsync
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetTotalUserHaikusByUserIdAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusByUserIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetTotalUserHaikusByUserIdAsync
  nameWithType: IUserHaikuService.GetTotalUserHaikusByUserIdAsync
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetUserHaikuByIdAsync(System.Int64)
  name: GetUserHaikuByIdAsync(long)
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetUserHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetUserHaikuByIdAsync(System.Int64)
  name.vb: GetUserHaikuByIdAsync(Long)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetUserHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetUserHaikuByIdAsync(Long)
  nameWithType: IUserHaikuService.GetUserHaikuByIdAsync(long)
  nameWithType.vb: IUserHaikuService.GetUserHaikuByIdAsync(Long)
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetUserHaikuByIdAsync*
  name: GetUserHaikuByIdAsync
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_GetUserHaikuByIdAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetUserHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.GetUserHaikuByIdAsync
  nameWithType: IUserHaikuService.GetUserHaikuByIdAsync
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UpdateUserHaikuAsync(System.Int64,Haiku.API.Dtos.UserHaikuDto)
  name: UpdateUserHaikuAsync(long, UserHaikuDto)
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_UpdateUserHaikuAsync_System_Int64_Haiku_API_Dtos_UserHaikuDto_
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.UpdateUserHaikuAsync(System.Int64,Haiku.API.Dtos.UserHaikuDto)
  name.vb: UpdateUserHaikuAsync(Long, UserHaikuDto)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UpdateUserHaikuAsync(long, Haiku.API.Dtos.UserHaikuDto)
  fullName.vb: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UpdateUserHaikuAsync(Long, Haiku.API.Dtos.UserHaikuDto)
  nameWithType: IUserHaikuService.UpdateUserHaikuAsync(long, UserHaikuDto)
  nameWithType.vb: IUserHaikuService.UpdateUserHaikuAsync(Long, UserHaikuDto)
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UpdateUserHaikuAsync*
  name: UpdateUserHaikuAsync
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_UpdateUserHaikuAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.IUserHaikuService.UpdateUserHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UpdateUserHaikuAsync
  nameWithType: IUserHaikuService.UpdateUserHaikuAsync
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UserHaikuExistsByIdAsync(System.Int64)
  name: UserHaikuExistsByIdAsync(long)
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_UserHaikuExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.UserHaikuServices.IUserHaikuService.UserHaikuExistsByIdAsync(System.Int64)
  name.vb: UserHaikuExistsByIdAsync(Long)
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UserHaikuExistsByIdAsync(long)
  fullName.vb: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UserHaikuExistsByIdAsync(Long)
  nameWithType: IUserHaikuService.UserHaikuExistsByIdAsync(long)
  nameWithType.vb: IUserHaikuService.UserHaikuExistsByIdAsync(Long)
- uid: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UserHaikuExistsByIdAsync*
  name: UserHaikuExistsByIdAsync
  href: api/Haiku.API.Services.UserHaikuServices.IUserHaikuService.html#Haiku_API_Services_UserHaikuServices_IUserHaikuService_UserHaikuExistsByIdAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.IUserHaikuService.UserHaikuExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.IUserHaikuService.UserHaikuExistsByIdAsync
  nameWithType: IUserHaikuService.UserHaikuExistsByIdAsync
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService
  name: UserHaikuService
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html
  commentId: T:Haiku.API.Services.UserHaikuServices.UserHaikuService
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService
  nameWithType: UserHaikuService
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.#ctor(Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository,Haiku.API.Services.UserServices.IUserService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.UserHaikuServices.UserHaikuService},AutoMapper.IMapper)
  name: UserHaikuService(IUserHaikuRepository, IUserService, ILogger<UserHaikuService>, IMapper)
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService__ctor_Haiku_API_Repositories_UserHaikuRepositories_IUserHaikuRepository_Haiku_API_Services_UserServices_IUserService_Microsoft_Extensions_Logging_ILogger_Haiku_API_Services_UserHaikuServices_UserHaikuService__AutoMapper_IMapper_
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.#ctor(Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository,Haiku.API.Services.UserServices.IUserService,Microsoft.Extensions.Logging.ILogger{Haiku.API.Services.UserHaikuServices.UserHaikuService},AutoMapper.IMapper)
  name.vb: New(IUserHaikuRepository, IUserService, ILogger(Of UserHaikuService), IMapper)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuService(Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository, Haiku.API.Services.UserServices.IUserService, Microsoft.Extensions.Logging.ILogger<Haiku.API.Services.UserHaikuServices.UserHaikuService>, AutoMapper.IMapper)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.New(Haiku.API.Repositories.UserHaikuRepositories.IUserHaikuRepository, Haiku.API.Services.UserServices.IUserService, Microsoft.Extensions.Logging.ILogger(Of Haiku.API.Services.UserHaikuServices.UserHaikuService), AutoMapper.IMapper)
  nameWithType: UserHaikuService.UserHaikuService(IUserHaikuRepository, IUserService, ILogger<UserHaikuService>, IMapper)
  nameWithType.vb: UserHaikuService.New(IUserHaikuRepository, IUserService, ILogger(Of UserHaikuService), IMapper)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.#ctor*
  name: UserHaikuService
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService__ctor_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuService
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.New
  nameWithType: UserHaikuService.UserHaikuService
  nameWithType.vb: UserHaikuService.New
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.AddUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
  name: AddUserHaikuAsync(UserHaikuDto)
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_AddUserHaikuAsync_Haiku_API_Dtos_UserHaikuDto_
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.AddUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.AddUserHaikuAsync(Haiku.API.Dtos.UserHaikuDto)
  nameWithType: UserHaikuService.AddUserHaikuAsync(UserHaikuDto)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.AddUserHaikuAsync*
  name: AddUserHaikuAsync
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_AddUserHaikuAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.AddUserHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.AddUserHaikuAsync
  nameWithType: UserHaikuService.AddUserHaikuAsync
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.DeleteUserHaikuByIdAsync(System.Int64)
  name: DeleteUserHaikuByIdAsync(long)
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_DeleteUserHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.DeleteUserHaikuByIdAsync(System.Int64)
  name.vb: DeleteUserHaikuByIdAsync(Long)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.DeleteUserHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.DeleteUserHaikuByIdAsync(Long)
  nameWithType: UserHaikuService.DeleteUserHaikuByIdAsync(long)
  nameWithType.vb: UserHaikuService.DeleteUserHaikuByIdAsync(Long)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.DeleteUserHaikuByIdAsync*
  name: DeleteUserHaikuByIdAsync
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_DeleteUserHaikuByIdAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.DeleteUserHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.DeleteUserHaikuByIdAsync
  nameWithType: UserHaikuService.DeleteUserHaikuByIdAsync
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusAsync(System.Int32,System.Int32,System.String)
  name: GetPaginatedUserHaikusAsync(int, int, string)
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_GetPaginatedUserHaikusAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusAsync(System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedUserHaikusAsync(Integer, Integer, String)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusAsync(int, int, string)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusAsync(Integer, Integer, String)
  nameWithType: UserHaikuService.GetPaginatedUserHaikusAsync(int, int, string)
  nameWithType.vb: UserHaikuService.GetPaginatedUserHaikusAsync(Integer, Integer, String)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusAsync*
  name: GetPaginatedUserHaikusAsync
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_GetPaginatedUserHaikusAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusAsync
  nameWithType: UserHaikuService.GetPaginatedUserHaikusAsync
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name: GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_GetPaginatedUserHaikusByUserIdAsync_System_Int64_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusByUserIdAsync(System.Int64,System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
  nameWithType: UserHaikuService.GetPaginatedUserHaikusByUserIdAsync(long, int, int, string)
  nameWithType.vb: UserHaikuService.GetPaginatedUserHaikusByUserIdAsync(Long, Integer, Integer, String)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusByUserIdAsync*
  name: GetPaginatedUserHaikusByUserIdAsync
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_GetPaginatedUserHaikusByUserIdAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusByUserIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetPaginatedUserHaikusByUserIdAsync
  nameWithType: UserHaikuService.GetPaginatedUserHaikusByUserIdAsync
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusAsync(System.String)
  name: GetTotalUserHaikusAsync(string)
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_GetTotalUserHaikusAsync_System_String_
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusAsync(System.String)
  name.vb: GetTotalUserHaikusAsync(String)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusAsync(string)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusAsync(String)
  nameWithType: UserHaikuService.GetTotalUserHaikusAsync(string)
  nameWithType.vb: UserHaikuService.GetTotalUserHaikusAsync(String)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusAsync*
  name: GetTotalUserHaikusAsync
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_GetTotalUserHaikusAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusAsync
  nameWithType: UserHaikuService.GetTotalUserHaikusAsync
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusByUserIdAsync(System.Int64,System.String)
  name: GetTotalUserHaikusByUserIdAsync(long, string)
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_GetTotalUserHaikusByUserIdAsync_System_Int64_System_String_
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusByUserIdAsync(System.Int64,System.String)
  name.vb: GetTotalUserHaikusByUserIdAsync(Long, String)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusByUserIdAsync(long, string)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusByUserIdAsync(Long, String)
  nameWithType: UserHaikuService.GetTotalUserHaikusByUserIdAsync(long, string)
  nameWithType.vb: UserHaikuService.GetTotalUserHaikusByUserIdAsync(Long, String)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusByUserIdAsync*
  name: GetTotalUserHaikusByUserIdAsync
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_GetTotalUserHaikusByUserIdAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusByUserIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetTotalUserHaikusByUserIdAsync
  nameWithType: UserHaikuService.GetTotalUserHaikusByUserIdAsync
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetUserHaikuByIdAsync(System.Int64)
  name: GetUserHaikuByIdAsync(long)
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_GetUserHaikuByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetUserHaikuByIdAsync(System.Int64)
  name.vb: GetUserHaikuByIdAsync(Long)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetUserHaikuByIdAsync(long)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetUserHaikuByIdAsync(Long)
  nameWithType: UserHaikuService.GetUserHaikuByIdAsync(long)
  nameWithType.vb: UserHaikuService.GetUserHaikuByIdAsync(Long)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetUserHaikuByIdAsync*
  name: GetUserHaikuByIdAsync
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_GetUserHaikuByIdAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.GetUserHaikuByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.GetUserHaikuByIdAsync
  nameWithType: UserHaikuService.GetUserHaikuByIdAsync
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.UpdateUserHaikuAsync(System.Int64,Haiku.API.Dtos.UserHaikuDto)
  name: UpdateUserHaikuAsync(long, UserHaikuDto)
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_UpdateUserHaikuAsync_System_Int64_Haiku_API_Dtos_UserHaikuDto_
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.UpdateUserHaikuAsync(System.Int64,Haiku.API.Dtos.UserHaikuDto)
  name.vb: UpdateUserHaikuAsync(Long, UserHaikuDto)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.UpdateUserHaikuAsync(long, Haiku.API.Dtos.UserHaikuDto)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.UpdateUserHaikuAsync(Long, Haiku.API.Dtos.UserHaikuDto)
  nameWithType: UserHaikuService.UpdateUserHaikuAsync(long, UserHaikuDto)
  nameWithType.vb: UserHaikuService.UpdateUserHaikuAsync(Long, UserHaikuDto)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.UpdateUserHaikuAsync*
  name: UpdateUserHaikuAsync
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_UpdateUserHaikuAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.UpdateUserHaikuAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.UpdateUserHaikuAsync
  nameWithType: UserHaikuService.UpdateUserHaikuAsync
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuExistsByIdAsync(System.Int64)
  name: UserHaikuExistsByIdAsync(long)
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_UserHaikuExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuExistsByIdAsync(System.Int64)
  name.vb: UserHaikuExistsByIdAsync(Long)
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuExistsByIdAsync(long)
  fullName.vb: Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuExistsByIdAsync(Long)
  nameWithType: UserHaikuService.UserHaikuExistsByIdAsync(long)
  nameWithType.vb: UserHaikuService.UserHaikuExistsByIdAsync(Long)
- uid: Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuExistsByIdAsync*
  name: UserHaikuExistsByIdAsync
  href: api/Haiku.API.Services.UserHaikuServices.UserHaikuService.html#Haiku_API_Services_UserHaikuServices_UserHaikuService_UserHaikuExistsByIdAsync_
  commentId: Overload:Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserHaikuServices.UserHaikuService.UserHaikuExistsByIdAsync
  nameWithType: UserHaikuService.UserHaikuExistsByIdAsync
- uid: Haiku.API.Services.UserProfileServices
  name: Haiku.API.Services.UserProfileServices
  href: api/Haiku.API.Services.UserProfileServices.html
  commentId: N:Haiku.API.Services.UserProfileServices
  fullName: Haiku.API.Services.UserProfileServices
  nameWithType: Haiku.API.Services.UserProfileServices
- uid: Haiku.API.Services.UserProfileServices.UserProfileService
  name: UserProfileService
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html
  commentId: T:Haiku.API.Services.UserProfileServices.UserProfileService
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService
  nameWithType: UserProfileService
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.#ctor(Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository,AutoMapper.IMapper)
  name: UserProfileService(IUserProfileRepository, IMapper)
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService__ctor_Haiku_API_Repositories_UserProfileRepositories_IUserProfileRepository_AutoMapper_IMapper_
  commentId: M:Haiku.API.Services.UserProfileServices.UserProfileService.#ctor(Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository,AutoMapper.IMapper)
  name.vb: New(IUserProfileRepository, IMapper)
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.UserProfileService(Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository, AutoMapper.IMapper)
  fullName.vb: Haiku.API.Services.UserProfileServices.UserProfileService.New(Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository, AutoMapper.IMapper)
  nameWithType: UserProfileService.UserProfileService(IUserProfileRepository, IMapper)
  nameWithType.vb: UserProfileService.New(IUserProfileRepository, IMapper)
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.#ctor*
  name: UserProfileService
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService__ctor_
  commentId: Overload:Haiku.API.Services.UserProfileServices.UserProfileService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.UserProfileService
  fullName.vb: Haiku.API.Services.UserProfileServices.UserProfileService.New
  nameWithType: UserProfileService.UserProfileService
  nameWithType.vb: UserProfileService.New
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.AddUserProfileAsync(Haiku.API.Dtos.UserProfileDto)
  name: AddUserProfileAsync(UserProfileDto)
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService_AddUserProfileAsync_Haiku_API_Dtos_UserProfileDto_
  commentId: M:Haiku.API.Services.UserProfileServices.UserProfileService.AddUserProfileAsync(Haiku.API.Dtos.UserProfileDto)
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.AddUserProfileAsync(Haiku.API.Dtos.UserProfileDto)
  nameWithType: UserProfileService.AddUserProfileAsync(UserProfileDto)
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.AddUserProfileAsync*
  name: AddUserProfileAsync
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService_AddUserProfileAsync_
  commentId: Overload:Haiku.API.Services.UserProfileServices.UserProfileService.AddUserProfileAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.AddUserProfileAsync
  nameWithType: UserProfileService.AddUserProfileAsync
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List{System.Int64})
  name: GetAllUserProfilesByUserIdsAsync(List<long>)
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService_GetAllUserProfilesByUserIdsAsync_System_Collections_Generic_List_System_Int64__
  commentId: M:Haiku.API.Services.UserProfileServices.UserProfileService.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List{System.Int64})
  name.vb: GetAllUserProfilesByUserIdsAsync(List(Of Long))
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List<long>)
  fullName.vb: Haiku.API.Services.UserProfileServices.UserProfileService.GetAllUserProfilesByUserIdsAsync(System.Collections.Generic.List(Of Long))
  nameWithType: UserProfileService.GetAllUserProfilesByUserIdsAsync(List<long>)
  nameWithType.vb: UserProfileService.GetAllUserProfilesByUserIdsAsync(List(Of Long))
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.GetAllUserProfilesByUserIdsAsync*
  name: GetAllUserProfilesByUserIdsAsync
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService_GetAllUserProfilesByUserIdsAsync_
  commentId: Overload:Haiku.API.Services.UserProfileServices.UserProfileService.GetAllUserProfilesByUserIdsAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.GetAllUserProfilesByUserIdsAsync
  nameWithType: UserProfileService.GetAllUserProfilesByUserIdsAsync
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.GetTotalUserProfilesAsync
  name: GetTotalUserProfilesAsync()
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService_GetTotalUserProfilesAsync
  commentId: M:Haiku.API.Services.UserProfileServices.UserProfileService.GetTotalUserProfilesAsync
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.GetTotalUserProfilesAsync()
  nameWithType: UserProfileService.GetTotalUserProfilesAsync()
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.GetTotalUserProfilesAsync*
  name: GetTotalUserProfilesAsync
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService_GetTotalUserProfilesAsync_
  commentId: Overload:Haiku.API.Services.UserProfileServices.UserProfileService.GetTotalUserProfilesAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.GetTotalUserProfilesAsync
  nameWithType: UserProfileService.GetTotalUserProfilesAsync
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.GetUserProfileByIdAsync(System.Int64)
  name: GetUserProfileByIdAsync(long)
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService_GetUserProfileByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.UserProfileServices.UserProfileService.GetUserProfileByIdAsync(System.Int64)
  name.vb: GetUserProfileByIdAsync(Long)
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.GetUserProfileByIdAsync(long)
  fullName.vb: Haiku.API.Services.UserProfileServices.UserProfileService.GetUserProfileByIdAsync(Long)
  nameWithType: UserProfileService.GetUserProfileByIdAsync(long)
  nameWithType.vb: UserProfileService.GetUserProfileByIdAsync(Long)
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.GetUserProfileByIdAsync*
  name: GetUserProfileByIdAsync
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService_GetUserProfileByIdAsync_
  commentId: Overload:Haiku.API.Services.UserProfileServices.UserProfileService.GetUserProfileByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.GetUserProfileByIdAsync
  nameWithType: UserProfileService.GetUserProfileByIdAsync
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.GetUserProfileByUserIdAsync(System.Int64)
  name: GetUserProfileByUserIdAsync(long)
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService_GetUserProfileByUserIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.UserProfileServices.UserProfileService.GetUserProfileByUserIdAsync(System.Int64)
  name.vb: GetUserProfileByUserIdAsync(Long)
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.GetUserProfileByUserIdAsync(long)
  fullName.vb: Haiku.API.Services.UserProfileServices.UserProfileService.GetUserProfileByUserIdAsync(Long)
  nameWithType: UserProfileService.GetUserProfileByUserIdAsync(long)
  nameWithType.vb: UserProfileService.GetUserProfileByUserIdAsync(Long)
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.GetUserProfileByUserIdAsync*
  name: GetUserProfileByUserIdAsync
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService_GetUserProfileByUserIdAsync_
  commentId: Overload:Haiku.API.Services.UserProfileServices.UserProfileService.GetUserProfileByUserIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.GetUserProfileByUserIdAsync
  nameWithType: UserProfileService.GetUserProfileByUserIdAsync
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.SaveProfileImageAsync(Microsoft.AspNetCore.Http.IFormFile)
  name: SaveProfileImageAsync(IFormFile)
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService_SaveProfileImageAsync_Microsoft_AspNetCore_Http_IFormFile_
  commentId: M:Haiku.API.Services.UserProfileServices.UserProfileService.SaveProfileImageAsync(Microsoft.AspNetCore.Http.IFormFile)
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.SaveProfileImageAsync(Microsoft.AspNetCore.Http.IFormFile)
  nameWithType: UserProfileService.SaveProfileImageAsync(IFormFile)
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.SaveProfileImageAsync*
  name: SaveProfileImageAsync
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService_SaveProfileImageAsync_
  commentId: Overload:Haiku.API.Services.UserProfileServices.UserProfileService.SaveProfileImageAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.SaveProfileImageAsync
  nameWithType: UserProfileService.SaveProfileImageAsync
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.UpdateUserProfileAsync(System.Int64,Haiku.API.Dtos.UserProfileDto)
  name: UpdateUserProfileAsync(long, UserProfileDto)
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService_UpdateUserProfileAsync_System_Int64_Haiku_API_Dtos_UserProfileDto_
  commentId: M:Haiku.API.Services.UserProfileServices.UserProfileService.UpdateUserProfileAsync(System.Int64,Haiku.API.Dtos.UserProfileDto)
  name.vb: UpdateUserProfileAsync(Long, UserProfileDto)
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.UpdateUserProfileAsync(long, Haiku.API.Dtos.UserProfileDto)
  fullName.vb: Haiku.API.Services.UserProfileServices.UserProfileService.UpdateUserProfileAsync(Long, Haiku.API.Dtos.UserProfileDto)
  nameWithType: UserProfileService.UpdateUserProfileAsync(long, UserProfileDto)
  nameWithType.vb: UserProfileService.UpdateUserProfileAsync(Long, UserProfileDto)
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.UpdateUserProfileAsync*
  name: UpdateUserProfileAsync
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService_UpdateUserProfileAsync_
  commentId: Overload:Haiku.API.Services.UserProfileServices.UserProfileService.UpdateUserProfileAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.UpdateUserProfileAsync
  nameWithType: UserProfileService.UpdateUserProfileAsync
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.UserProfileExistsByIdAsync(System.Int64)
  name: UserProfileExistsByIdAsync(long)
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService_UserProfileExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.UserProfileServices.UserProfileService.UserProfileExistsByIdAsync(System.Int64)
  name.vb: UserProfileExistsByIdAsync(Long)
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.UserProfileExistsByIdAsync(long)
  fullName.vb: Haiku.API.Services.UserProfileServices.UserProfileService.UserProfileExistsByIdAsync(Long)
  nameWithType: UserProfileService.UserProfileExistsByIdAsync(long)
  nameWithType.vb: UserProfileService.UserProfileExistsByIdAsync(Long)
- uid: Haiku.API.Services.UserProfileServices.UserProfileService.UserProfileExistsByIdAsync*
  name: UserProfileExistsByIdAsync
  href: api/Haiku.API.Services.UserProfileServices.UserProfileService.html#Haiku_API_Services_UserProfileServices_UserProfileService_UserProfileExistsByIdAsync_
  commentId: Overload:Haiku.API.Services.UserProfileServices.UserProfileService.UserProfileExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserProfileServices.UserProfileService.UserProfileExistsByIdAsync
  nameWithType: UserProfileService.UserProfileExistsByIdAsync
- uid: Haiku.API.Services.UserServices
  name: Haiku.API.Services.UserServices
  href: api/Haiku.API.Services.UserServices.html
  commentId: N:Haiku.API.Services.UserServices
  fullName: Haiku.API.Services.UserServices
  nameWithType: Haiku.API.Services.UserServices
- uid: Haiku.API.Services.UserServices.IUserService
  name: IUserService
  href: api/Haiku.API.Services.UserServices.IUserService.html
  commentId: T:Haiku.API.Services.UserServices.IUserService
  fullName: Haiku.API.Services.UserServices.IUserService
  nameWithType: IUserService
- uid: Haiku.API.Services.UserServices.IUserService.AddUserAsync(Haiku.API.Dtos.RegisterDto)
  name: AddUserAsync(RegisterDto)
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_AddUserAsync_Haiku_API_Dtos_RegisterDto_
  commentId: M:Haiku.API.Services.UserServices.IUserService.AddUserAsync(Haiku.API.Dtos.RegisterDto)
  fullName: Haiku.API.Services.UserServices.IUserService.AddUserAsync(Haiku.API.Dtos.RegisterDto)
  nameWithType: IUserService.AddUserAsync(RegisterDto)
- uid: Haiku.API.Services.UserServices.IUserService.AddUserAsync*
  name: AddUserAsync
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_AddUserAsync_
  commentId: Overload:Haiku.API.Services.UserServices.IUserService.AddUserAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.IUserService.AddUserAsync
  nameWithType: IUserService.AddUserAsync
- uid: Haiku.API.Services.UserServices.IUserService.AuthenticateUserAsync(System.String,System.String)
  name: AuthenticateUserAsync(string, string)
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_AuthenticateUserAsync_System_String_System_String_
  commentId: M:Haiku.API.Services.UserServices.IUserService.AuthenticateUserAsync(System.String,System.String)
  name.vb: AuthenticateUserAsync(String, String)
  fullName: Haiku.API.Services.UserServices.IUserService.AuthenticateUserAsync(string, string)
  fullName.vb: Haiku.API.Services.UserServices.IUserService.AuthenticateUserAsync(String, String)
  nameWithType: IUserService.AuthenticateUserAsync(string, string)
  nameWithType.vb: IUserService.AuthenticateUserAsync(String, String)
- uid: Haiku.API.Services.UserServices.IUserService.AuthenticateUserAsync*
  name: AuthenticateUserAsync
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_AuthenticateUserAsync_
  commentId: Overload:Haiku.API.Services.UserServices.IUserService.AuthenticateUserAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.IUserService.AuthenticateUserAsync
  nameWithType: IUserService.AuthenticateUserAsync
- uid: Haiku.API.Services.UserServices.IUserService.DeleteUserByIdAsync(System.Int64)
  name: DeleteUserByIdAsync(long)
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_DeleteUserByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.UserServices.IUserService.DeleteUserByIdAsync(System.Int64)
  name.vb: DeleteUserByIdAsync(Long)
  fullName: Haiku.API.Services.UserServices.IUserService.DeleteUserByIdAsync(long)
  fullName.vb: Haiku.API.Services.UserServices.IUserService.DeleteUserByIdAsync(Long)
  nameWithType: IUserService.DeleteUserByIdAsync(long)
  nameWithType.vb: IUserService.DeleteUserByIdAsync(Long)
- uid: Haiku.API.Services.UserServices.IUserService.DeleteUserByIdAsync*
  name: DeleteUserByIdAsync
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_DeleteUserByIdAsync_
  commentId: Overload:Haiku.API.Services.UserServices.IUserService.DeleteUserByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.IUserService.DeleteUserByIdAsync
  nameWithType: IUserService.DeleteUserByIdAsync
- uid: Haiku.API.Services.UserServices.IUserService.GetPaginatedUsersAsync(System.Int32,System.Int32,System.String)
  name: GetPaginatedUsersAsync(int, int, string)
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_GetPaginatedUsersAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Services.UserServices.IUserService.GetPaginatedUsersAsync(System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedUsersAsync(Integer, Integer, String)
  fullName: Haiku.API.Services.UserServices.IUserService.GetPaginatedUsersAsync(int, int, string)
  fullName.vb: Haiku.API.Services.UserServices.IUserService.GetPaginatedUsersAsync(Integer, Integer, String)
  nameWithType: IUserService.GetPaginatedUsersAsync(int, int, string)
  nameWithType.vb: IUserService.GetPaginatedUsersAsync(Integer, Integer, String)
- uid: Haiku.API.Services.UserServices.IUserService.GetPaginatedUsersAsync*
  name: GetPaginatedUsersAsync
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_GetPaginatedUsersAsync_
  commentId: Overload:Haiku.API.Services.UserServices.IUserService.GetPaginatedUsersAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.IUserService.GetPaginatedUsersAsync
  nameWithType: IUserService.GetPaginatedUsersAsync
- uid: Haiku.API.Services.UserServices.IUserService.GetTotalUsersAsync(System.String)
  name: GetTotalUsersAsync(string)
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_GetTotalUsersAsync_System_String_
  commentId: M:Haiku.API.Services.UserServices.IUserService.GetTotalUsersAsync(System.String)
  name.vb: GetTotalUsersAsync(String)
  fullName: Haiku.API.Services.UserServices.IUserService.GetTotalUsersAsync(string)
  fullName.vb: Haiku.API.Services.UserServices.IUserService.GetTotalUsersAsync(String)
  nameWithType: IUserService.GetTotalUsersAsync(string)
  nameWithType.vb: IUserService.GetTotalUsersAsync(String)
- uid: Haiku.API.Services.UserServices.IUserService.GetTotalUsersAsync*
  name: GetTotalUsersAsync
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_GetTotalUsersAsync_
  commentId: Overload:Haiku.API.Services.UserServices.IUserService.GetTotalUsersAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.IUserService.GetTotalUsersAsync
  nameWithType: IUserService.GetTotalUsersAsync
- uid: Haiku.API.Services.UserServices.IUserService.GetUserByIdAsync(System.Int64)
  name: GetUserByIdAsync(long)
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_GetUserByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.UserServices.IUserService.GetUserByIdAsync(System.Int64)
  name.vb: GetUserByIdAsync(Long)
  fullName: Haiku.API.Services.UserServices.IUserService.GetUserByIdAsync(long)
  fullName.vb: Haiku.API.Services.UserServices.IUserService.GetUserByIdAsync(Long)
  nameWithType: IUserService.GetUserByIdAsync(long)
  nameWithType.vb: IUserService.GetUserByIdAsync(Long)
- uid: Haiku.API.Services.UserServices.IUserService.GetUserByIdAsync*
  name: GetUserByIdAsync
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_GetUserByIdAsync_
  commentId: Overload:Haiku.API.Services.UserServices.IUserService.GetUserByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.IUserService.GetUserByIdAsync
  nameWithType: IUserService.GetUserByIdAsync
- uid: Haiku.API.Services.UserServices.IUserService.UpdateUserAsync(System.Int64,Haiku.API.Dtos.UserDto)
  name: UpdateUserAsync(long, UserDto)
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_UpdateUserAsync_System_Int64_Haiku_API_Dtos_UserDto_
  commentId: M:Haiku.API.Services.UserServices.IUserService.UpdateUserAsync(System.Int64,Haiku.API.Dtos.UserDto)
  name.vb: UpdateUserAsync(Long, UserDto)
  fullName: Haiku.API.Services.UserServices.IUserService.UpdateUserAsync(long, Haiku.API.Dtos.UserDto)
  fullName.vb: Haiku.API.Services.UserServices.IUserService.UpdateUserAsync(Long, Haiku.API.Dtos.UserDto)
  nameWithType: IUserService.UpdateUserAsync(long, UserDto)
  nameWithType.vb: IUserService.UpdateUserAsync(Long, UserDto)
- uid: Haiku.API.Services.UserServices.IUserService.UpdateUserAsync*
  name: UpdateUserAsync
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_UpdateUserAsync_
  commentId: Overload:Haiku.API.Services.UserServices.IUserService.UpdateUserAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.IUserService.UpdateUserAsync
  nameWithType: IUserService.UpdateUserAsync
- uid: Haiku.API.Services.UserServices.IUserService.UserExistsByIdAsync(System.Int64)
  name: UserExistsByIdAsync(long)
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_UserExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.UserServices.IUserService.UserExistsByIdAsync(System.Int64)
  name.vb: UserExistsByIdAsync(Long)
  fullName: Haiku.API.Services.UserServices.IUserService.UserExistsByIdAsync(long)
  fullName.vb: Haiku.API.Services.UserServices.IUserService.UserExistsByIdAsync(Long)
  nameWithType: IUserService.UserExistsByIdAsync(long)
  nameWithType.vb: IUserService.UserExistsByIdAsync(Long)
- uid: Haiku.API.Services.UserServices.IUserService.UserExistsByIdAsync*
  name: UserExistsByIdAsync
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_UserExistsByIdAsync_
  commentId: Overload:Haiku.API.Services.UserServices.IUserService.UserExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.IUserService.UserExistsByIdAsync
  nameWithType: IUserService.UserExistsByIdAsync
- uid: Haiku.API.Services.UserServices.IUserService.UsernameExistsAsync(System.String)
  name: UsernameExistsAsync(string)
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_UsernameExistsAsync_System_String_
  commentId: M:Haiku.API.Services.UserServices.IUserService.UsernameExistsAsync(System.String)
  name.vb: UsernameExistsAsync(String)
  fullName: Haiku.API.Services.UserServices.IUserService.UsernameExistsAsync(string)
  fullName.vb: Haiku.API.Services.UserServices.IUserService.UsernameExistsAsync(String)
  nameWithType: IUserService.UsernameExistsAsync(string)
  nameWithType.vb: IUserService.UsernameExistsAsync(String)
- uid: Haiku.API.Services.UserServices.IUserService.UsernameExistsAsync*
  name: UsernameExistsAsync
  href: api/Haiku.API.Services.UserServices.IUserService.html#Haiku_API_Services_UserServices_IUserService_UsernameExistsAsync_
  commentId: Overload:Haiku.API.Services.UserServices.IUserService.UsernameExistsAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.IUserService.UsernameExistsAsync
  nameWithType: IUserService.UsernameExistsAsync
- uid: Haiku.API.Services.UserServices.UserService
  name: UserService
  href: api/Haiku.API.Services.UserServices.UserService.html
  commentId: T:Haiku.API.Services.UserServices.UserService
  fullName: Haiku.API.Services.UserServices.UserService
  nameWithType: UserService
- uid: Haiku.API.Services.UserServices.UserService.#ctor(Haiku.API.Repositories.UserRepositories.IUserRepository,Haiku.API.Services.IUserProfileServices.IUserProfileService,Haiku.API.Utilities.IUnitOfWork,AutoMapper.IMapper)
  name: UserService(IUserRepository, IUserProfileService, IUnitOfWork, IMapper)
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService__ctor_Haiku_API_Repositories_UserRepositories_IUserRepository_Haiku_API_Services_IUserProfileServices_IUserProfileService_Haiku_API_Utilities_IUnitOfWork_AutoMapper_IMapper_
  commentId: M:Haiku.API.Services.UserServices.UserService.#ctor(Haiku.API.Repositories.UserRepositories.IUserRepository,Haiku.API.Services.IUserProfileServices.IUserProfileService,Haiku.API.Utilities.IUnitOfWork,AutoMapper.IMapper)
  name.vb: New(IUserRepository, IUserProfileService, IUnitOfWork, IMapper)
  fullName: Haiku.API.Services.UserServices.UserService.UserService(Haiku.API.Repositories.UserRepositories.IUserRepository, Haiku.API.Services.IUserProfileServices.IUserProfileService, Haiku.API.Utilities.IUnitOfWork, AutoMapper.IMapper)
  fullName.vb: Haiku.API.Services.UserServices.UserService.New(Haiku.API.Repositories.UserRepositories.IUserRepository, Haiku.API.Services.IUserProfileServices.IUserProfileService, Haiku.API.Utilities.IUnitOfWork, AutoMapper.IMapper)
  nameWithType: UserService.UserService(IUserRepository, IUserProfileService, IUnitOfWork, IMapper)
  nameWithType.vb: UserService.New(IUserRepository, IUserProfileService, IUnitOfWork, IMapper)
- uid: Haiku.API.Services.UserServices.UserService.#ctor*
  name: UserService
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService__ctor_
  commentId: Overload:Haiku.API.Services.UserServices.UserService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Services.UserServices.UserService.UserService
  fullName.vb: Haiku.API.Services.UserServices.UserService.New
  nameWithType: UserService.UserService
  nameWithType.vb: UserService.New
- uid: Haiku.API.Services.UserServices.UserService.AddUserAsync(Haiku.API.Dtos.RegisterDto)
  name: AddUserAsync(RegisterDto)
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_AddUserAsync_Haiku_API_Dtos_RegisterDto_
  commentId: M:Haiku.API.Services.UserServices.UserService.AddUserAsync(Haiku.API.Dtos.RegisterDto)
  fullName: Haiku.API.Services.UserServices.UserService.AddUserAsync(Haiku.API.Dtos.RegisterDto)
  nameWithType: UserService.AddUserAsync(RegisterDto)
- uid: Haiku.API.Services.UserServices.UserService.AddUserAsync*
  name: AddUserAsync
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_AddUserAsync_
  commentId: Overload:Haiku.API.Services.UserServices.UserService.AddUserAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.UserService.AddUserAsync
  nameWithType: UserService.AddUserAsync
- uid: Haiku.API.Services.UserServices.UserService.AuthenticateUserAsync(System.String,System.String)
  name: AuthenticateUserAsync(string, string)
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_AuthenticateUserAsync_System_String_System_String_
  commentId: M:Haiku.API.Services.UserServices.UserService.AuthenticateUserAsync(System.String,System.String)
  name.vb: AuthenticateUserAsync(String, String)
  fullName: Haiku.API.Services.UserServices.UserService.AuthenticateUserAsync(string, string)
  fullName.vb: Haiku.API.Services.UserServices.UserService.AuthenticateUserAsync(String, String)
  nameWithType: UserService.AuthenticateUserAsync(string, string)
  nameWithType.vb: UserService.AuthenticateUserAsync(String, String)
- uid: Haiku.API.Services.UserServices.UserService.AuthenticateUserAsync*
  name: AuthenticateUserAsync
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_AuthenticateUserAsync_
  commentId: Overload:Haiku.API.Services.UserServices.UserService.AuthenticateUserAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.UserService.AuthenticateUserAsync
  nameWithType: UserService.AuthenticateUserAsync
- uid: Haiku.API.Services.UserServices.UserService.DeleteUserByIdAsync(System.Int64)
  name: DeleteUserByIdAsync(long)
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_DeleteUserByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.UserServices.UserService.DeleteUserByIdAsync(System.Int64)
  name.vb: DeleteUserByIdAsync(Long)
  fullName: Haiku.API.Services.UserServices.UserService.DeleteUserByIdAsync(long)
  fullName.vb: Haiku.API.Services.UserServices.UserService.DeleteUserByIdAsync(Long)
  nameWithType: UserService.DeleteUserByIdAsync(long)
  nameWithType.vb: UserService.DeleteUserByIdAsync(Long)
- uid: Haiku.API.Services.UserServices.UserService.DeleteUserByIdAsync*
  name: DeleteUserByIdAsync
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_DeleteUserByIdAsync_
  commentId: Overload:Haiku.API.Services.UserServices.UserService.DeleteUserByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.UserService.DeleteUserByIdAsync
  nameWithType: UserService.DeleteUserByIdAsync
- uid: Haiku.API.Services.UserServices.UserService.GetPaginatedUsersAsync(System.Int32,System.Int32,System.String)
  name: GetPaginatedUsersAsync(int, int, string)
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_GetPaginatedUsersAsync_System_Int32_System_Int32_System_String_
  commentId: M:Haiku.API.Services.UserServices.UserService.GetPaginatedUsersAsync(System.Int32,System.Int32,System.String)
  name.vb: GetPaginatedUsersAsync(Integer, Integer, String)
  fullName: Haiku.API.Services.UserServices.UserService.GetPaginatedUsersAsync(int, int, string)
  fullName.vb: Haiku.API.Services.UserServices.UserService.GetPaginatedUsersAsync(Integer, Integer, String)
  nameWithType: UserService.GetPaginatedUsersAsync(int, int, string)
  nameWithType.vb: UserService.GetPaginatedUsersAsync(Integer, Integer, String)
- uid: Haiku.API.Services.UserServices.UserService.GetPaginatedUsersAsync*
  name: GetPaginatedUsersAsync
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_GetPaginatedUsersAsync_
  commentId: Overload:Haiku.API.Services.UserServices.UserService.GetPaginatedUsersAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.UserService.GetPaginatedUsersAsync
  nameWithType: UserService.GetPaginatedUsersAsync
- uid: Haiku.API.Services.UserServices.UserService.GetTotalUsersAsync(System.String)
  name: GetTotalUsersAsync(string)
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_GetTotalUsersAsync_System_String_
  commentId: M:Haiku.API.Services.UserServices.UserService.GetTotalUsersAsync(System.String)
  name.vb: GetTotalUsersAsync(String)
  fullName: Haiku.API.Services.UserServices.UserService.GetTotalUsersAsync(string)
  fullName.vb: Haiku.API.Services.UserServices.UserService.GetTotalUsersAsync(String)
  nameWithType: UserService.GetTotalUsersAsync(string)
  nameWithType.vb: UserService.GetTotalUsersAsync(String)
- uid: Haiku.API.Services.UserServices.UserService.GetTotalUsersAsync*
  name: GetTotalUsersAsync
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_GetTotalUsersAsync_
  commentId: Overload:Haiku.API.Services.UserServices.UserService.GetTotalUsersAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.UserService.GetTotalUsersAsync
  nameWithType: UserService.GetTotalUsersAsync
- uid: Haiku.API.Services.UserServices.UserService.GetUserByIdAsync(System.Int64)
  name: GetUserByIdAsync(long)
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_GetUserByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.UserServices.UserService.GetUserByIdAsync(System.Int64)
  name.vb: GetUserByIdAsync(Long)
  fullName: Haiku.API.Services.UserServices.UserService.GetUserByIdAsync(long)
  fullName.vb: Haiku.API.Services.UserServices.UserService.GetUserByIdAsync(Long)
  nameWithType: UserService.GetUserByIdAsync(long)
  nameWithType.vb: UserService.GetUserByIdAsync(Long)
- uid: Haiku.API.Services.UserServices.UserService.GetUserByIdAsync*
  name: GetUserByIdAsync
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_GetUserByIdAsync_
  commentId: Overload:Haiku.API.Services.UserServices.UserService.GetUserByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.UserService.GetUserByIdAsync
  nameWithType: UserService.GetUserByIdAsync
- uid: Haiku.API.Services.UserServices.UserService.UpdateUserAsync(System.Int64,Haiku.API.Dtos.UserDto)
  name: UpdateUserAsync(long, UserDto)
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_UpdateUserAsync_System_Int64_Haiku_API_Dtos_UserDto_
  commentId: M:Haiku.API.Services.UserServices.UserService.UpdateUserAsync(System.Int64,Haiku.API.Dtos.UserDto)
  name.vb: UpdateUserAsync(Long, UserDto)
  fullName: Haiku.API.Services.UserServices.UserService.UpdateUserAsync(long, Haiku.API.Dtos.UserDto)
  fullName.vb: Haiku.API.Services.UserServices.UserService.UpdateUserAsync(Long, Haiku.API.Dtos.UserDto)
  nameWithType: UserService.UpdateUserAsync(long, UserDto)
  nameWithType.vb: UserService.UpdateUserAsync(Long, UserDto)
- uid: Haiku.API.Services.UserServices.UserService.UpdateUserAsync*
  name: UpdateUserAsync
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_UpdateUserAsync_
  commentId: Overload:Haiku.API.Services.UserServices.UserService.UpdateUserAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.UserService.UpdateUserAsync
  nameWithType: UserService.UpdateUserAsync
- uid: Haiku.API.Services.UserServices.UserService.UserExistsByIdAsync(System.Int64)
  name: UserExistsByIdAsync(long)
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_UserExistsByIdAsync_System_Int64_
  commentId: M:Haiku.API.Services.UserServices.UserService.UserExistsByIdAsync(System.Int64)
  name.vb: UserExistsByIdAsync(Long)
  fullName: Haiku.API.Services.UserServices.UserService.UserExistsByIdAsync(long)
  fullName.vb: Haiku.API.Services.UserServices.UserService.UserExistsByIdAsync(Long)
  nameWithType: UserService.UserExistsByIdAsync(long)
  nameWithType.vb: UserService.UserExistsByIdAsync(Long)
- uid: Haiku.API.Services.UserServices.UserService.UserExistsByIdAsync*
  name: UserExistsByIdAsync
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_UserExistsByIdAsync_
  commentId: Overload:Haiku.API.Services.UserServices.UserService.UserExistsByIdAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.UserService.UserExistsByIdAsync
  nameWithType: UserService.UserExistsByIdAsync
- uid: Haiku.API.Services.UserServices.UserService.UsernameExistsAsync(System.String)
  name: UsernameExistsAsync(string)
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_UsernameExistsAsync_System_String_
  commentId: M:Haiku.API.Services.UserServices.UserService.UsernameExistsAsync(System.String)
  name.vb: UsernameExistsAsync(String)
  fullName: Haiku.API.Services.UserServices.UserService.UsernameExistsAsync(string)
  fullName.vb: Haiku.API.Services.UserServices.UserService.UsernameExistsAsync(String)
  nameWithType: UserService.UsernameExistsAsync(string)
  nameWithType.vb: UserService.UsernameExistsAsync(String)
- uid: Haiku.API.Services.UserServices.UserService.UsernameExistsAsync*
  name: UsernameExistsAsync
  href: api/Haiku.API.Services.UserServices.UserService.html#Haiku_API_Services_UserServices_UserService_UsernameExistsAsync_
  commentId: Overload:Haiku.API.Services.UserServices.UserService.UsernameExistsAsync
  isSpec: "True"
  fullName: Haiku.API.Services.UserServices.UserService.UsernameExistsAsync
  nameWithType: UserService.UsernameExistsAsync
- uid: Haiku.API.Services.XmlSerializationServices
  name: Haiku.API.Services.XmlSerializationServices
  href: api/Haiku.API.Services.XmlSerializationServices.html
  commentId: N:Haiku.API.Services.XmlSerializationServices
  fullName: Haiku.API.Services.XmlSerializationServices
  nameWithType: Haiku.API.Services.XmlSerializationServices
- uid: Haiku.API.Services.XmlSerializationServices.IXmlSerializationService
  name: IXmlSerializationService
  href: api/Haiku.API.Services.XmlSerializationServices.IXmlSerializationService.html
  commentId: T:Haiku.API.Services.XmlSerializationServices.IXmlSerializationService
  fullName: Haiku.API.Services.XmlSerializationServices.IXmlSerializationService
  nameWithType: IXmlSerializationService
- uid: Haiku.API.Services.XmlSerializationServices.IXmlSerializationService.SerializeAndSanitizeToXml(Haiku.API.Dtos.PaginationMetaDataDto)
  name: SerializeAndSanitizeToXml(PaginationMetaDataDto)
  href: api/Haiku.API.Services.XmlSerializationServices.IXmlSerializationService.html#Haiku_API_Services_XmlSerializationServices_IXmlSerializationService_SerializeAndSanitizeToXml_Haiku_API_Dtos_PaginationMetaDataDto_
  commentId: M:Haiku.API.Services.XmlSerializationServices.IXmlSerializationService.SerializeAndSanitizeToXml(Haiku.API.Dtos.PaginationMetaDataDto)
  fullName: Haiku.API.Services.XmlSerializationServices.IXmlSerializationService.SerializeAndSanitizeToXml(Haiku.API.Dtos.PaginationMetaDataDto)
  nameWithType: IXmlSerializationService.SerializeAndSanitizeToXml(PaginationMetaDataDto)
- uid: Haiku.API.Services.XmlSerializationServices.IXmlSerializationService.SerializeAndSanitizeToXml*
  name: SerializeAndSanitizeToXml
  href: api/Haiku.API.Services.XmlSerializationServices.IXmlSerializationService.html#Haiku_API_Services_XmlSerializationServices_IXmlSerializationService_SerializeAndSanitizeToXml_
  commentId: Overload:Haiku.API.Services.XmlSerializationServices.IXmlSerializationService.SerializeAndSanitizeToXml
  isSpec: "True"
  fullName: Haiku.API.Services.XmlSerializationServices.IXmlSerializationService.SerializeAndSanitizeToXml
  nameWithType: IXmlSerializationService.SerializeAndSanitizeToXml
- uid: Haiku.API.Utilities
  name: Haiku.API.Utilities
  href: api/Haiku.API.Utilities.html
  commentId: N:Haiku.API.Utilities
  fullName: Haiku.API.Utilities
  nameWithType: Haiku.API.Utilities
- uid: Haiku.API.Utilities.IUnitOfWork
  name: IUnitOfWork
  href: api/Haiku.API.Utilities.IUnitOfWork.html
  commentId: T:Haiku.API.Utilities.IUnitOfWork
  fullName: Haiku.API.Utilities.IUnitOfWork
  nameWithType: IUnitOfWork
- uid: Haiku.API.Utilities.IUnitOfWork.AuthorHaikus
  name: AuthorHaikus
  href: api/Haiku.API.Utilities.IUnitOfWork.html#Haiku_API_Utilities_IUnitOfWork_AuthorHaikus
  commentId: P:Haiku.API.Utilities.IUnitOfWork.AuthorHaikus
  fullName: Haiku.API.Utilities.IUnitOfWork.AuthorHaikus
  nameWithType: IUnitOfWork.AuthorHaikus
- uid: Haiku.API.Utilities.IUnitOfWork.AuthorHaikus*
  name: AuthorHaikus
  href: api/Haiku.API.Utilities.IUnitOfWork.html#Haiku_API_Utilities_IUnitOfWork_AuthorHaikus_
  commentId: Overload:Haiku.API.Utilities.IUnitOfWork.AuthorHaikus
  isSpec: "True"
  fullName: Haiku.API.Utilities.IUnitOfWork.AuthorHaikus
  nameWithType: IUnitOfWork.AuthorHaikus
- uid: Haiku.API.Utilities.IUnitOfWork.Authors
  name: Authors
  href: api/Haiku.API.Utilities.IUnitOfWork.html#Haiku_API_Utilities_IUnitOfWork_Authors
  commentId: P:Haiku.API.Utilities.IUnitOfWork.Authors
  fullName: Haiku.API.Utilities.IUnitOfWork.Authors
  nameWithType: IUnitOfWork.Authors
- uid: Haiku.API.Utilities.IUnitOfWork.Authors*
  name: Authors
  href: api/Haiku.API.Utilities.IUnitOfWork.html#Haiku_API_Utilities_IUnitOfWork_Authors_
  commentId: Overload:Haiku.API.Utilities.IUnitOfWork.Authors
  isSpec: "True"
  fullName: Haiku.API.Utilities.IUnitOfWork.Authors
  nameWithType: IUnitOfWork.Authors
- uid: Haiku.API.Utilities.IUnitOfWork.BeginTransactionAsync
  name: BeginTransactionAsync()
  href: api/Haiku.API.Utilities.IUnitOfWork.html#Haiku_API_Utilities_IUnitOfWork_BeginTransactionAsync
  commentId: M:Haiku.API.Utilities.IUnitOfWork.BeginTransactionAsync
  fullName: Haiku.API.Utilities.IUnitOfWork.BeginTransactionAsync()
  nameWithType: IUnitOfWork.BeginTransactionAsync()
- uid: Haiku.API.Utilities.IUnitOfWork.BeginTransactionAsync*
  name: BeginTransactionAsync
  href: api/Haiku.API.Utilities.IUnitOfWork.html#Haiku_API_Utilities_IUnitOfWork_BeginTransactionAsync_
  commentId: Overload:Haiku.API.Utilities.IUnitOfWork.BeginTransactionAsync
  isSpec: "True"
  fullName: Haiku.API.Utilities.IUnitOfWork.BeginTransactionAsync
  nameWithType: IUnitOfWork.BeginTransactionAsync
- uid: Haiku.API.Utilities.IUnitOfWork.CommitAsync
  name: CommitAsync()
  href: api/Haiku.API.Utilities.IUnitOfWork.html#Haiku_API_Utilities_IUnitOfWork_CommitAsync
  commentId: M:Haiku.API.Utilities.IUnitOfWork.CommitAsync
  fullName: Haiku.API.Utilities.IUnitOfWork.CommitAsync()
  nameWithType: IUnitOfWork.CommitAsync()
- uid: Haiku.API.Utilities.IUnitOfWork.CommitAsync*
  name: CommitAsync
  href: api/Haiku.API.Utilities.IUnitOfWork.html#Haiku_API_Utilities_IUnitOfWork_CommitAsync_
  commentId: Overload:Haiku.API.Utilities.IUnitOfWork.CommitAsync
  isSpec: "True"
  fullName: Haiku.API.Utilities.IUnitOfWork.CommitAsync
  nameWithType: IUnitOfWork.CommitAsync
- uid: Haiku.API.Utilities.IUnitOfWork.CompleteAsync
  name: CompleteAsync()
  href: api/Haiku.API.Utilities.IUnitOfWork.html#Haiku_API_Utilities_IUnitOfWork_CompleteAsync
  commentId: M:Haiku.API.Utilities.IUnitOfWork.CompleteAsync
  fullName: Haiku.API.Utilities.IUnitOfWork.CompleteAsync()
  nameWithType: IUnitOfWork.CompleteAsync()
- uid: Haiku.API.Utilities.IUnitOfWork.CompleteAsync*
  name: CompleteAsync
  href: api/Haiku.API.Utilities.IUnitOfWork.html#Haiku_API_Utilities_IUnitOfWork_CompleteAsync_
  commentId: Overload:Haiku.API.Utilities.IUnitOfWork.CompleteAsync
  isSpec: "True"
  fullName: Haiku.API.Utilities.IUnitOfWork.CompleteAsync
  nameWithType: IUnitOfWork.CompleteAsync
- uid: Haiku.API.Utilities.IUnitOfWork.RollbackAsync
  name: RollbackAsync()
  href: api/Haiku.API.Utilities.IUnitOfWork.html#Haiku_API_Utilities_IUnitOfWork_RollbackAsync
  commentId: M:Haiku.API.Utilities.IUnitOfWork.RollbackAsync
  fullName: Haiku.API.Utilities.IUnitOfWork.RollbackAsync()
  nameWithType: IUnitOfWork.RollbackAsync()
- uid: Haiku.API.Utilities.IUnitOfWork.RollbackAsync*
  name: RollbackAsync
  href: api/Haiku.API.Utilities.IUnitOfWork.html#Haiku_API_Utilities_IUnitOfWork_RollbackAsync_
  commentId: Overload:Haiku.API.Utilities.IUnitOfWork.RollbackAsync
  isSpec: "True"
  fullName: Haiku.API.Utilities.IUnitOfWork.RollbackAsync
  nameWithType: IUnitOfWork.RollbackAsync
- uid: Haiku.API.Utilities.IUnitOfWork.UserProfiles
  name: UserProfiles
  href: api/Haiku.API.Utilities.IUnitOfWork.html#Haiku_API_Utilities_IUnitOfWork_UserProfiles
  commentId: P:Haiku.API.Utilities.IUnitOfWork.UserProfiles
  fullName: Haiku.API.Utilities.IUnitOfWork.UserProfiles
  nameWithType: IUnitOfWork.UserProfiles
- uid: Haiku.API.Utilities.IUnitOfWork.UserProfiles*
  name: UserProfiles
  href: api/Haiku.API.Utilities.IUnitOfWork.html#Haiku_API_Utilities_IUnitOfWork_UserProfiles_
  commentId: Overload:Haiku.API.Utilities.IUnitOfWork.UserProfiles
  isSpec: "True"
  fullName: Haiku.API.Utilities.IUnitOfWork.UserProfiles
  nameWithType: IUnitOfWork.UserProfiles
- uid: Haiku.API.Utilities.IUnitOfWork.Users
  name: Users
  href: api/Haiku.API.Utilities.IUnitOfWork.html#Haiku_API_Utilities_IUnitOfWork_Users
  commentId: P:Haiku.API.Utilities.IUnitOfWork.Users
  fullName: Haiku.API.Utilities.IUnitOfWork.Users
  nameWithType: IUnitOfWork.Users
- uid: Haiku.API.Utilities.IUnitOfWork.Users*
  name: Users
  href: api/Haiku.API.Utilities.IUnitOfWork.html#Haiku_API_Utilities_IUnitOfWork_Users_
  commentId: Overload:Haiku.API.Utilities.IUnitOfWork.Users
  isSpec: "True"
  fullName: Haiku.API.Utilities.IUnitOfWork.Users
  nameWithType: IUnitOfWork.Users
- uid: Haiku.API.Utilities.MinLengthIfNotEmptyAttribute
  name: MinLengthIfNotEmptyAttribute
  href: api/Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.html
  commentId: T:Haiku.API.Utilities.MinLengthIfNotEmptyAttribute
  fullName: Haiku.API.Utilities.MinLengthIfNotEmptyAttribute
  nameWithType: MinLengthIfNotEmptyAttribute
- uid: Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.#ctor(System.Int32,System.String)
  name: MinLengthIfNotEmptyAttribute(int, string)
  href: api/Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.html#Haiku_API_Utilities_MinLengthIfNotEmptyAttribute__ctor_System_Int32_System_String_
  commentId: M:Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.#ctor(System.Int32,System.String)
  name.vb: New(Integer, String)
  fullName: Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.MinLengthIfNotEmptyAttribute(int, string)
  fullName.vb: Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.New(Integer, String)
  nameWithType: MinLengthIfNotEmptyAttribute.MinLengthIfNotEmptyAttribute(int, string)
  nameWithType.vb: MinLengthIfNotEmptyAttribute.New(Integer, String)
- uid: Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.#ctor*
  name: MinLengthIfNotEmptyAttribute
  href: api/Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.html#Haiku_API_Utilities_MinLengthIfNotEmptyAttribute__ctor_
  commentId: Overload:Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.MinLengthIfNotEmptyAttribute
  fullName.vb: Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.New
  nameWithType: MinLengthIfNotEmptyAttribute.MinLengthIfNotEmptyAttribute
  nameWithType.vb: MinLengthIfNotEmptyAttribute.New
- uid: Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  name: IsValid(object?, ValidationContext)
  href: api/Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.html#Haiku_API_Utilities_MinLengthIfNotEmptyAttribute_IsValid_System_Object_System_ComponentModel_DataAnnotations_ValidationContext_
  commentId: M:Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  name.vb: IsValid(Object, ValidationContext)
  fullName: Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.IsValid(object?, System.ComponentModel.DataAnnotations.ValidationContext)
  fullName.vb: Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.IsValid(Object, System.ComponentModel.DataAnnotations.ValidationContext)
  nameWithType: MinLengthIfNotEmptyAttribute.IsValid(object?, ValidationContext)
  nameWithType.vb: MinLengthIfNotEmptyAttribute.IsValid(Object, ValidationContext)
- uid: Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.IsValid*
  name: IsValid
  href: api/Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.html#Haiku_API_Utilities_MinLengthIfNotEmptyAttribute_IsValid_
  commentId: Overload:Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.IsValid
  isSpec: "True"
  fullName: Haiku.API.Utilities.MinLengthIfNotEmptyAttribute.IsValid
  nameWithType: MinLengthIfNotEmptyAttribute.IsValid
- uid: Haiku.API.Utilities.StringLengthIfNotEmptyAttribute
  name: StringLengthIfNotEmptyAttribute
  href: api/Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.html
  commentId: T:Haiku.API.Utilities.StringLengthIfNotEmptyAttribute
  fullName: Haiku.API.Utilities.StringLengthIfNotEmptyAttribute
  nameWithType: StringLengthIfNotEmptyAttribute
- uid: Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.#ctor(System.Int32,System.String)
  name: StringLengthIfNotEmptyAttribute(int, string)
  href: api/Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.html#Haiku_API_Utilities_StringLengthIfNotEmptyAttribute__ctor_System_Int32_System_String_
  commentId: M:Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.#ctor(System.Int32,System.String)
  name.vb: New(Integer, String)
  fullName: Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.StringLengthIfNotEmptyAttribute(int, string)
  fullName.vb: Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.New(Integer, String)
  nameWithType: StringLengthIfNotEmptyAttribute.StringLengthIfNotEmptyAttribute(int, string)
  nameWithType.vb: StringLengthIfNotEmptyAttribute.New(Integer, String)
- uid: Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.#ctor*
  name: StringLengthIfNotEmptyAttribute
  href: api/Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.html#Haiku_API_Utilities_StringLengthIfNotEmptyAttribute__ctor_
  commentId: Overload:Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.StringLengthIfNotEmptyAttribute
  fullName.vb: Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.New
  nameWithType: StringLengthIfNotEmptyAttribute.StringLengthIfNotEmptyAttribute
  nameWithType.vb: StringLengthIfNotEmptyAttribute.New
- uid: Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  name: IsValid(object?, ValidationContext)
  href: api/Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.html#Haiku_API_Utilities_StringLengthIfNotEmptyAttribute_IsValid_System_Object_System_ComponentModel_DataAnnotations_ValidationContext_
  commentId: M:Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  name.vb: IsValid(Object, ValidationContext)
  fullName: Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.IsValid(object?, System.ComponentModel.DataAnnotations.ValidationContext)
  fullName.vb: Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.IsValid(Object, System.ComponentModel.DataAnnotations.ValidationContext)
  nameWithType: StringLengthIfNotEmptyAttribute.IsValid(object?, ValidationContext)
  nameWithType.vb: StringLengthIfNotEmptyAttribute.IsValid(Object, ValidationContext)
- uid: Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.IsValid*
  name: IsValid
  href: api/Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.html#Haiku_API_Utilities_StringLengthIfNotEmptyAttribute_IsValid_
  commentId: Overload:Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.IsValid
  isSpec: "True"
  fullName: Haiku.API.Utilities.StringLengthIfNotEmptyAttribute.IsValid
  nameWithType: StringLengthIfNotEmptyAttribute.IsValid
- uid: Haiku.API.Utilities.UnitOfWork
  name: UnitOfWork
  href: api/Haiku.API.Utilities.UnitOfWork.html
  commentId: T:Haiku.API.Utilities.UnitOfWork
  fullName: Haiku.API.Utilities.UnitOfWork
  nameWithType: UnitOfWork
- uid: Haiku.API.Utilities.UnitOfWork.#ctor(Haiku.API.Database.HaikuAPIContext,Haiku.API.Repositories.AuthorRepositories.IAuthorRepository,Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository,Haiku.API.Repositories.UserRepositories.IUserRepository,Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository)
  name: UnitOfWork(HaikuAPIContext, IAuthorRepository, IAuthorHaikuRepository, IUserRepository, IUserProfileRepository)
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork__ctor_Haiku_API_Database_HaikuAPIContext_Haiku_API_Repositories_AuthorRepositories_IAuthorRepository_Haiku_API_Repositories_AuthorHaikuRepositories_IAuthorHaikuRepository_Haiku_API_Repositories_UserRepositories_IUserRepository_Haiku_API_Repositories_UserProfileRepositories_IUserProfileRepository_
  commentId: M:Haiku.API.Utilities.UnitOfWork.#ctor(Haiku.API.Database.HaikuAPIContext,Haiku.API.Repositories.AuthorRepositories.IAuthorRepository,Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository,Haiku.API.Repositories.UserRepositories.IUserRepository,Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository)
  name.vb: New(HaikuAPIContext, IAuthorRepository, IAuthorHaikuRepository, IUserRepository, IUserProfileRepository)
  fullName: Haiku.API.Utilities.UnitOfWork.UnitOfWork(Haiku.API.Database.HaikuAPIContext, Haiku.API.Repositories.AuthorRepositories.IAuthorRepository, Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository, Haiku.API.Repositories.UserRepositories.IUserRepository, Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository)
  fullName.vb: Haiku.API.Utilities.UnitOfWork.New(Haiku.API.Database.HaikuAPIContext, Haiku.API.Repositories.AuthorRepositories.IAuthorRepository, Haiku.API.Repositories.AuthorHaikuRepositories.IAuthorHaikuRepository, Haiku.API.Repositories.UserRepositories.IUserRepository, Haiku.API.Repositories.UserProfileRepositories.IUserProfileRepository)
  nameWithType: UnitOfWork.UnitOfWork(HaikuAPIContext, IAuthorRepository, IAuthorHaikuRepository, IUserRepository, IUserProfileRepository)
  nameWithType.vb: UnitOfWork.New(HaikuAPIContext, IAuthorRepository, IAuthorHaikuRepository, IUserRepository, IUserProfileRepository)
- uid: Haiku.API.Utilities.UnitOfWork.#ctor*
  name: UnitOfWork
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork__ctor_
  commentId: Overload:Haiku.API.Utilities.UnitOfWork.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Utilities.UnitOfWork.UnitOfWork
  fullName.vb: Haiku.API.Utilities.UnitOfWork.New
  nameWithType: UnitOfWork.UnitOfWork
  nameWithType.vb: UnitOfWork.New
- uid: Haiku.API.Utilities.UnitOfWork.AuthorHaikus
  name: AuthorHaikus
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_AuthorHaikus
  commentId: P:Haiku.API.Utilities.UnitOfWork.AuthorHaikus
  fullName: Haiku.API.Utilities.UnitOfWork.AuthorHaikus
  nameWithType: UnitOfWork.AuthorHaikus
- uid: Haiku.API.Utilities.UnitOfWork.AuthorHaikus*
  name: AuthorHaikus
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_AuthorHaikus_
  commentId: Overload:Haiku.API.Utilities.UnitOfWork.AuthorHaikus
  isSpec: "True"
  fullName: Haiku.API.Utilities.UnitOfWork.AuthorHaikus
  nameWithType: UnitOfWork.AuthorHaikus
- uid: Haiku.API.Utilities.UnitOfWork.Authors
  name: Authors
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_Authors
  commentId: P:Haiku.API.Utilities.UnitOfWork.Authors
  fullName: Haiku.API.Utilities.UnitOfWork.Authors
  nameWithType: UnitOfWork.Authors
- uid: Haiku.API.Utilities.UnitOfWork.Authors*
  name: Authors
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_Authors_
  commentId: Overload:Haiku.API.Utilities.UnitOfWork.Authors
  isSpec: "True"
  fullName: Haiku.API.Utilities.UnitOfWork.Authors
  nameWithType: UnitOfWork.Authors
- uid: Haiku.API.Utilities.UnitOfWork.BeginTransactionAsync
  name: BeginTransactionAsync()
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_BeginTransactionAsync
  commentId: M:Haiku.API.Utilities.UnitOfWork.BeginTransactionAsync
  fullName: Haiku.API.Utilities.UnitOfWork.BeginTransactionAsync()
  nameWithType: UnitOfWork.BeginTransactionAsync()
- uid: Haiku.API.Utilities.UnitOfWork.BeginTransactionAsync*
  name: BeginTransactionAsync
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_BeginTransactionAsync_
  commentId: Overload:Haiku.API.Utilities.UnitOfWork.BeginTransactionAsync
  isSpec: "True"
  fullName: Haiku.API.Utilities.UnitOfWork.BeginTransactionAsync
  nameWithType: UnitOfWork.BeginTransactionAsync
- uid: Haiku.API.Utilities.UnitOfWork.CommitAsync
  name: CommitAsync()
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_CommitAsync
  commentId: M:Haiku.API.Utilities.UnitOfWork.CommitAsync
  fullName: Haiku.API.Utilities.UnitOfWork.CommitAsync()
  nameWithType: UnitOfWork.CommitAsync()
- uid: Haiku.API.Utilities.UnitOfWork.CommitAsync*
  name: CommitAsync
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_CommitAsync_
  commentId: Overload:Haiku.API.Utilities.UnitOfWork.CommitAsync
  isSpec: "True"
  fullName: Haiku.API.Utilities.UnitOfWork.CommitAsync
  nameWithType: UnitOfWork.CommitAsync
- uid: Haiku.API.Utilities.UnitOfWork.CompleteAsync
  name: CompleteAsync()
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_CompleteAsync
  commentId: M:Haiku.API.Utilities.UnitOfWork.CompleteAsync
  fullName: Haiku.API.Utilities.UnitOfWork.CompleteAsync()
  nameWithType: UnitOfWork.CompleteAsync()
- uid: Haiku.API.Utilities.UnitOfWork.CompleteAsync*
  name: CompleteAsync
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_CompleteAsync_
  commentId: Overload:Haiku.API.Utilities.UnitOfWork.CompleteAsync
  isSpec: "True"
  fullName: Haiku.API.Utilities.UnitOfWork.CompleteAsync
  nameWithType: UnitOfWork.CompleteAsync
- uid: Haiku.API.Utilities.UnitOfWork.Dispose
  name: Dispose()
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_Dispose
  commentId: M:Haiku.API.Utilities.UnitOfWork.Dispose
  fullName: Haiku.API.Utilities.UnitOfWork.Dispose()
  nameWithType: UnitOfWork.Dispose()
- uid: Haiku.API.Utilities.UnitOfWork.Dispose*
  name: Dispose
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_Dispose_
  commentId: Overload:Haiku.API.Utilities.UnitOfWork.Dispose
  isSpec: "True"
  fullName: Haiku.API.Utilities.UnitOfWork.Dispose
  nameWithType: UnitOfWork.Dispose
- uid: Haiku.API.Utilities.UnitOfWork.RollbackAsync
  name: RollbackAsync()
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_RollbackAsync
  commentId: M:Haiku.API.Utilities.UnitOfWork.RollbackAsync
  fullName: Haiku.API.Utilities.UnitOfWork.RollbackAsync()
  nameWithType: UnitOfWork.RollbackAsync()
- uid: Haiku.API.Utilities.UnitOfWork.RollbackAsync*
  name: RollbackAsync
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_RollbackAsync_
  commentId: Overload:Haiku.API.Utilities.UnitOfWork.RollbackAsync
  isSpec: "True"
  fullName: Haiku.API.Utilities.UnitOfWork.RollbackAsync
  nameWithType: UnitOfWork.RollbackAsync
- uid: Haiku.API.Utilities.UnitOfWork.UserProfiles
  name: UserProfiles
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_UserProfiles
  commentId: P:Haiku.API.Utilities.UnitOfWork.UserProfiles
  fullName: Haiku.API.Utilities.UnitOfWork.UserProfiles
  nameWithType: UnitOfWork.UserProfiles
- uid: Haiku.API.Utilities.UnitOfWork.UserProfiles*
  name: UserProfiles
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_UserProfiles_
  commentId: Overload:Haiku.API.Utilities.UnitOfWork.UserProfiles
  isSpec: "True"
  fullName: Haiku.API.Utilities.UnitOfWork.UserProfiles
  nameWithType: UnitOfWork.UserProfiles
- uid: Haiku.API.Utilities.UnitOfWork.Users
  name: Users
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_Users
  commentId: P:Haiku.API.Utilities.UnitOfWork.Users
  fullName: Haiku.API.Utilities.UnitOfWork.Users
  nameWithType: UnitOfWork.Users
- uid: Haiku.API.Utilities.UnitOfWork.Users*
  name: Users
  href: api/Haiku.API.Utilities.UnitOfWork.html#Haiku_API_Utilities_UnitOfWork_Users_
  commentId: Overload:Haiku.API.Utilities.UnitOfWork.Users
  isSpec: "True"
  fullName: Haiku.API.Utilities.UnitOfWork.Users
  nameWithType: UnitOfWork.Users
- uid: Haiku.API.Utility
  name: Haiku.API.Utility
  href: api/Haiku.API.Utility.html
  commentId: N:Haiku.API.Utility
  fullName: Haiku.API.Utility
  nameWithType: Haiku.API.Utility
- uid: Haiku.API.Utility.SyllableCountAttribute
  name: SyllableCountAttribute
  href: api/Haiku.API.Utility.SyllableCountAttribute.html
  commentId: T:Haiku.API.Utility.SyllableCountAttribute
  fullName: Haiku.API.Utility.SyllableCountAttribute
  nameWithType: SyllableCountAttribute
- uid: Haiku.API.Utility.SyllableCountAttribute.#ctor(System.Int32)
  name: SyllableCountAttribute(int)
  href: api/Haiku.API.Utility.SyllableCountAttribute.html#Haiku_API_Utility_SyllableCountAttribute__ctor_System_Int32_
  commentId: M:Haiku.API.Utility.SyllableCountAttribute.#ctor(System.Int32)
  name.vb: New(Integer)
  fullName: Haiku.API.Utility.SyllableCountAttribute.SyllableCountAttribute(int)
  fullName.vb: Haiku.API.Utility.SyllableCountAttribute.New(Integer)
  nameWithType: SyllableCountAttribute.SyllableCountAttribute(int)
  nameWithType.vb: SyllableCountAttribute.New(Integer)
- uid: Haiku.API.Utility.SyllableCountAttribute.#ctor*
  name: SyllableCountAttribute
  href: api/Haiku.API.Utility.SyllableCountAttribute.html#Haiku_API_Utility_SyllableCountAttribute__ctor_
  commentId: Overload:Haiku.API.Utility.SyllableCountAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Haiku.API.Utility.SyllableCountAttribute.SyllableCountAttribute
  fullName.vb: Haiku.API.Utility.SyllableCountAttribute.New
  nameWithType: SyllableCountAttribute.SyllableCountAttribute
  nameWithType.vb: SyllableCountAttribute.New
- uid: Haiku.API.Utility.SyllableCountAttribute.BasicCountSyllables(System.String)
  name: BasicCountSyllables(string)
  href: api/Haiku.API.Utility.SyllableCountAttribute.html#Haiku_API_Utility_SyllableCountAttribute_BasicCountSyllables_System_String_
  commentId: M:Haiku.API.Utility.SyllableCountAttribute.BasicCountSyllables(System.String)
  name.vb: BasicCountSyllables(String)
  fullName: Haiku.API.Utility.SyllableCountAttribute.BasicCountSyllables(string)
  fullName.vb: Haiku.API.Utility.SyllableCountAttribute.BasicCountSyllables(String)
  nameWithType: SyllableCountAttribute.BasicCountSyllables(string)
  nameWithType.vb: SyllableCountAttribute.BasicCountSyllables(String)
- uid: Haiku.API.Utility.SyllableCountAttribute.BasicCountSyllables*
  name: BasicCountSyllables
  href: api/Haiku.API.Utility.SyllableCountAttribute.html#Haiku_API_Utility_SyllableCountAttribute_BasicCountSyllables_
  commentId: Overload:Haiku.API.Utility.SyllableCountAttribute.BasicCountSyllables
  isSpec: "True"
  fullName: Haiku.API.Utility.SyllableCountAttribute.BasicCountSyllables
  nameWithType: SyllableCountAttribute.BasicCountSyllables
- uid: Haiku.API.Utility.SyllableCountAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  name: IsValid(object?, ValidationContext)
  href: api/Haiku.API.Utility.SyllableCountAttribute.html#Haiku_API_Utility_SyllableCountAttribute_IsValid_System_Object_System_ComponentModel_DataAnnotations_ValidationContext_
  commentId: M:Haiku.API.Utility.SyllableCountAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  name.vb: IsValid(Object, ValidationContext)
  fullName: Haiku.API.Utility.SyllableCountAttribute.IsValid(object?, System.ComponentModel.DataAnnotations.ValidationContext)
  fullName.vb: Haiku.API.Utility.SyllableCountAttribute.IsValid(Object, System.ComponentModel.DataAnnotations.ValidationContext)
  nameWithType: SyllableCountAttribute.IsValid(object?, ValidationContext)
  nameWithType.vb: SyllableCountAttribute.IsValid(Object, ValidationContext)
- uid: Haiku.API.Utility.SyllableCountAttribute.IsValid*
  name: IsValid
  href: api/Haiku.API.Utility.SyllableCountAttribute.html#Haiku_API_Utility_SyllableCountAttribute_IsValid_
  commentId: Overload:Haiku.API.Utility.SyllableCountAttribute.IsValid
  isSpec: "True"
  fullName: Haiku.API.Utility.SyllableCountAttribute.IsValid
  nameWithType: SyllableCountAttribute.IsValid
- uid: HaikuApi.Tests
  name: HaikuApi.Tests
  href: api/HaikuApi.Tests.html
  commentId: N:HaikuApi.Tests
  fullName: HaikuApi.Tests
  nameWithType: HaikuApi.Tests
- uid: HaikuApi.Tests.CustomWebApplicationFactory`1
  name: CustomWebApplicationFactory<TProgram>
  href: api/HaikuApi.Tests.CustomWebApplicationFactory-1.html
  commentId: T:HaikuApi.Tests.CustomWebApplicationFactory`1
  name.vb: CustomWebApplicationFactory(Of TProgram)
  fullName: HaikuApi.Tests.CustomWebApplicationFactory<TProgram>
  fullName.vb: HaikuApi.Tests.CustomWebApplicationFactory(Of TProgram)
  nameWithType: CustomWebApplicationFactory<TProgram>
  nameWithType.vb: CustomWebApplicationFactory(Of TProgram)
- uid: HaikuApi.Tests.CustomWebApplicationFactory`1.ConfigureWebHost(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  name: ConfigureWebHost(IWebHostBuilder)
  href: api/HaikuApi.Tests.CustomWebApplicationFactory-1.html#HaikuApi_Tests_CustomWebApplicationFactory_1_ConfigureWebHost_Microsoft_AspNetCore_Hosting_IWebHostBuilder_
  commentId: M:HaikuApi.Tests.CustomWebApplicationFactory`1.ConfigureWebHost(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  fullName: HaikuApi.Tests.CustomWebApplicationFactory<TProgram>.ConfigureWebHost(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  fullName.vb: HaikuApi.Tests.CustomWebApplicationFactory(Of TProgram).ConfigureWebHost(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  nameWithType: CustomWebApplicationFactory<TProgram>.ConfigureWebHost(IWebHostBuilder)
  nameWithType.vb: CustomWebApplicationFactory(Of TProgram).ConfigureWebHost(IWebHostBuilder)
- uid: HaikuApi.Tests.CustomWebApplicationFactory`1.ConfigureWebHost*
  name: ConfigureWebHost
  href: api/HaikuApi.Tests.CustomWebApplicationFactory-1.html#HaikuApi_Tests_CustomWebApplicationFactory_1_ConfigureWebHost_
  commentId: Overload:HaikuApi.Tests.CustomWebApplicationFactory`1.ConfigureWebHost
  isSpec: "True"
  fullName: HaikuApi.Tests.CustomWebApplicationFactory<TProgram>.ConfigureWebHost
  fullName.vb: HaikuApi.Tests.CustomWebApplicationFactory(Of TProgram).ConfigureWebHost
  nameWithType: CustomWebApplicationFactory<TProgram>.ConfigureWebHost
  nameWithType.vb: CustomWebApplicationFactory(Of TProgram).ConfigureWebHost
- uid: HaikuApi.Tests.TestUtilities
  name: HaikuApi.Tests.TestUtilities
  href: api/HaikuApi.Tests.TestUtilities.html
  commentId: N:HaikuApi.Tests.TestUtilities
  fullName: HaikuApi.Tests.TestUtilities
  nameWithType: HaikuApi.Tests.TestUtilities
- uid: HaikuApi.Tests.TestUtilities.TestAuthHandler
  name: TestAuthHandler
  href: api/HaikuApi.Tests.TestUtilities.TestAuthHandler.html
  commentId: T:HaikuApi.Tests.TestUtilities.TestAuthHandler
  fullName: HaikuApi.Tests.TestUtilities.TestAuthHandler
  nameWithType: TestAuthHandler
- uid: HaikuApi.Tests.TestUtilities.TestAuthHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder)
  name: TestAuthHandler(IOptionsMonitor<AuthenticationSchemeOptions>, ILoggerFactory, UrlEncoder)
  href: api/HaikuApi.Tests.TestUtilities.TestAuthHandler.html#HaikuApi_Tests_TestUtilities_TestAuthHandler__ctor_Microsoft_Extensions_Options_IOptionsMonitor_Microsoft_AspNetCore_Authentication_AuthenticationSchemeOptions__Microsoft_Extensions_Logging_ILoggerFactory_System_Text_Encodings_Web_UrlEncoder_
  commentId: M:HaikuApi.Tests.TestUtilities.TestAuthHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder)
  name.vb: New(IOptionsMonitor(Of AuthenticationSchemeOptions), ILoggerFactory, UrlEncoder)
  fullName: HaikuApi.Tests.TestUtilities.TestAuthHandler.TestAuthHandler(Microsoft.Extensions.Options.IOptionsMonitor<Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions>, Microsoft.Extensions.Logging.ILoggerFactory, System.Text.Encodings.Web.UrlEncoder)
  fullName.vb: HaikuApi.Tests.TestUtilities.TestAuthHandler.New(Microsoft.Extensions.Options.IOptionsMonitor(Of Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions), Microsoft.Extensions.Logging.ILoggerFactory, System.Text.Encodings.Web.UrlEncoder)
  nameWithType: TestAuthHandler.TestAuthHandler(IOptionsMonitor<AuthenticationSchemeOptions>, ILoggerFactory, UrlEncoder)
  nameWithType.vb: TestAuthHandler.New(IOptionsMonitor(Of AuthenticationSchemeOptions), ILoggerFactory, UrlEncoder)
- uid: HaikuApi.Tests.TestUtilities.TestAuthHandler.#ctor*
  name: TestAuthHandler
  href: api/HaikuApi.Tests.TestUtilities.TestAuthHandler.html#HaikuApi_Tests_TestUtilities_TestAuthHandler__ctor_
  commentId: Overload:HaikuApi.Tests.TestUtilities.TestAuthHandler.#ctor
  isSpec: "True"
  name.vb: New
  fullName: HaikuApi.Tests.TestUtilities.TestAuthHandler.TestAuthHandler
  fullName.vb: HaikuApi.Tests.TestUtilities.TestAuthHandler.New
  nameWithType: TestAuthHandler.TestAuthHandler
  nameWithType.vb: TestAuthHandler.New
- uid: HaikuApi.Tests.TestUtilities.TestAuthHandler.HandleAuthenticateAsync
  name: HandleAuthenticateAsync()
  href: api/HaikuApi.Tests.TestUtilities.TestAuthHandler.html#HaikuApi_Tests_TestUtilities_TestAuthHandler_HandleAuthenticateAsync
  commentId: M:HaikuApi.Tests.TestUtilities.TestAuthHandler.HandleAuthenticateAsync
  fullName: HaikuApi.Tests.TestUtilities.TestAuthHandler.HandleAuthenticateAsync()
  nameWithType: TestAuthHandler.HandleAuthenticateAsync()
- uid: HaikuApi.Tests.TestUtilities.TestAuthHandler.HandleAuthenticateAsync*
  name: HandleAuthenticateAsync
  href: api/HaikuApi.Tests.TestUtilities.TestAuthHandler.html#HaikuApi_Tests_TestUtilities_TestAuthHandler_HandleAuthenticateAsync_
  commentId: Overload:HaikuApi.Tests.TestUtilities.TestAuthHandler.HandleAuthenticateAsync
  isSpec: "True"
  fullName: HaikuApi.Tests.TestUtilities.TestAuthHandler.HandleAuthenticateAsync
  nameWithType: TestAuthHandler.HandleAuthenticateAsync
- uid: HaikuApi.Tests.UnitTests
  name: HaikuApi.Tests.UnitTests
  href: api/HaikuApi.Tests.UnitTests.html
  commentId: N:HaikuApi.Tests.UnitTests
  fullName: HaikuApi.Tests.UnitTests
  nameWithType: HaikuApi.Tests.UnitTests
- uid: HaikuApi.Tests.UnitTests.AuthorServiceTests
  name: AuthorServiceTests
  href: api/HaikuApi.Tests.UnitTests.AuthorServiceTests.html
  commentId: T:HaikuApi.Tests.UnitTests.AuthorServiceTests
  fullName: HaikuApi.Tests.UnitTests.AuthorServiceTests
  nameWithType: AuthorServiceTests
- uid: HaikuApi.Tests.UnitTests.AuthorServiceTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  name: AuthorServiceTests(ITestOutputHelper)
  href: api/HaikuApi.Tests.UnitTests.AuthorServiceTests.html#HaikuApi_Tests_UnitTests_AuthorServiceTests__ctor_Xunit_Abstractions_ITestOutputHelper_
  commentId: M:HaikuApi.Tests.UnitTests.AuthorServiceTests.#ctor(Xunit.Abstractions.ITestOutputHelper)
  name.vb: New(ITestOutputHelper)
  fullName: HaikuApi.Tests.UnitTests.AuthorServiceTests.AuthorServiceTests(Xunit.Abstractions.ITestOutputHelper)
  fullName.vb: HaikuApi.Tests.UnitTests.AuthorServiceTests.New(Xunit.Abstractions.ITestOutputHelper)
  nameWithType: AuthorServiceTests.AuthorServiceTests(ITestOutputHelper)
  nameWithType.vb: AuthorServiceTests.New(ITestOutputHelper)
- uid: HaikuApi.Tests.UnitTests.AuthorServiceTests.#ctor*
  name: AuthorServiceTests
  href: api/HaikuApi.Tests.UnitTests.AuthorServiceTests.html#HaikuApi_Tests_UnitTests_AuthorServiceTests__ctor_
  commentId: Overload:HaikuApi.Tests.UnitTests.AuthorServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: HaikuApi.Tests.UnitTests.AuthorServiceTests.AuthorServiceTests
  fullName.vb: HaikuApi.Tests.UnitTests.AuthorServiceTests.New
  nameWithType: AuthorServiceTests.AuthorServiceTests
  nameWithType.vb: AuthorServiceTests.New
- uid: HaikuApi.Tests.UnitTests.AuthorServiceTests.CreateAuthorAsync_AddAuthor
  name: CreateAuthorAsync_AddAuthor()
  href: api/HaikuApi.Tests.UnitTests.AuthorServiceTests.html#HaikuApi_Tests_UnitTests_AuthorServiceTests_CreateAuthorAsync_AddAuthor
  commentId: M:HaikuApi.Tests.UnitTests.AuthorServiceTests.CreateAuthorAsync_AddAuthor
  fullName: HaikuApi.Tests.UnitTests.AuthorServiceTests.CreateAuthorAsync_AddAuthor()
  nameWithType: AuthorServiceTests.CreateAuthorAsync_AddAuthor()
- uid: HaikuApi.Tests.UnitTests.AuthorServiceTests.CreateAuthorAsync_AddAuthor*
  name: CreateAuthorAsync_AddAuthor
  href: api/HaikuApi.Tests.UnitTests.AuthorServiceTests.html#HaikuApi_Tests_UnitTests_AuthorServiceTests_CreateAuthorAsync_AddAuthor_
  commentId: Overload:HaikuApi.Tests.UnitTests.AuthorServiceTests.CreateAuthorAsync_AddAuthor
  isSpec: "True"
  fullName: HaikuApi.Tests.UnitTests.AuthorServiceTests.CreateAuthorAsync_AddAuthor
  nameWithType: AuthorServiceTests.CreateAuthorAsync_AddAuthor
- uid: HaikuApi.Tests.UnitTests.AuthorServiceTests.DeleteAuthorAsync_DeleteAuthor
  name: DeleteAuthorAsync_DeleteAuthor()
  href: api/HaikuApi.Tests.UnitTests.AuthorServiceTests.html#HaikuApi_Tests_UnitTests_AuthorServiceTests_DeleteAuthorAsync_DeleteAuthor
  commentId: M:HaikuApi.Tests.UnitTests.AuthorServiceTests.DeleteAuthorAsync_DeleteAuthor
  fullName: HaikuApi.Tests.UnitTests.AuthorServiceTests.DeleteAuthorAsync_DeleteAuthor()
  nameWithType: AuthorServiceTests.DeleteAuthorAsync_DeleteAuthor()
- uid: HaikuApi.Tests.UnitTests.AuthorServiceTests.DeleteAuthorAsync_DeleteAuthor*
  name: DeleteAuthorAsync_DeleteAuthor
  href: api/HaikuApi.Tests.UnitTests.AuthorServiceTests.html#HaikuApi_Tests_UnitTests_AuthorServiceTests_DeleteAuthorAsync_DeleteAuthor_
  commentId: Overload:HaikuApi.Tests.UnitTests.AuthorServiceTests.DeleteAuthorAsync_DeleteAuthor
  isSpec: "True"
  fullName: HaikuApi.Tests.UnitTests.AuthorServiceTests.DeleteAuthorAsync_DeleteAuthor
  nameWithType: AuthorServiceTests.DeleteAuthorAsync_DeleteAuthor
- uid: HaikuApi.Tests.UnitTests.AuthorServiceTests.GetAuthorAsync_ReturnAuthor
  name: GetAuthorAsync_ReturnAuthor()
  href: api/HaikuApi.Tests.UnitTests.AuthorServiceTests.html#HaikuApi_Tests_UnitTests_AuthorServiceTests_GetAuthorAsync_ReturnAuthor
  commentId: M:HaikuApi.Tests.UnitTests.AuthorServiceTests.GetAuthorAsync_ReturnAuthor
  fullName: HaikuApi.Tests.UnitTests.AuthorServiceTests.GetAuthorAsync_ReturnAuthor()
  nameWithType: AuthorServiceTests.GetAuthorAsync_ReturnAuthor()
- uid: HaikuApi.Tests.UnitTests.AuthorServiceTests.GetAuthorAsync_ReturnAuthor*
  name: GetAuthorAsync_ReturnAuthor
  href: api/HaikuApi.Tests.UnitTests.AuthorServiceTests.html#HaikuApi_Tests_UnitTests_AuthorServiceTests_GetAuthorAsync_ReturnAuthor_
  commentId: Overload:HaikuApi.Tests.UnitTests.AuthorServiceTests.GetAuthorAsync_ReturnAuthor
  isSpec: "True"
  fullName: HaikuApi.Tests.UnitTests.AuthorServiceTests.GetAuthorAsync_ReturnAuthor
  nameWithType: AuthorServiceTests.GetAuthorAsync_ReturnAuthor
- uid: HaikuApi.Tests.UnitTests.AuthorServiceTests.UpdateAuthorAsync_UpdateAuthor
  name: UpdateAuthorAsync_UpdateAuthor()
  href: api/HaikuApi.Tests.UnitTests.AuthorServiceTests.html#HaikuApi_Tests_UnitTests_AuthorServiceTests_UpdateAuthorAsync_UpdateAuthor
  commentId: M:HaikuApi.Tests.UnitTests.AuthorServiceTests.UpdateAuthorAsync_UpdateAuthor
  fullName: HaikuApi.Tests.UnitTests.AuthorServiceTests.UpdateAuthorAsync_UpdateAuthor()
  nameWithType: AuthorServiceTests.UpdateAuthorAsync_UpdateAuthor()
- uid: HaikuApi.Tests.UnitTests.AuthorServiceTests.UpdateAuthorAsync_UpdateAuthor*
  name: UpdateAuthorAsync_UpdateAuthor
  href: api/HaikuApi.Tests.UnitTests.AuthorServiceTests.html#HaikuApi_Tests_UnitTests_AuthorServiceTests_UpdateAuthorAsync_UpdateAuthor_
  commentId: Overload:HaikuApi.Tests.UnitTests.AuthorServiceTests.UpdateAuthorAsync_UpdateAuthor
  isSpec: "True"
  fullName: HaikuApi.Tests.UnitTests.AuthorServiceTests.UpdateAuthorAsync_UpdateAuthor
  nameWithType: AuthorServiceTests.UpdateAuthorAsync_UpdateAuthor
