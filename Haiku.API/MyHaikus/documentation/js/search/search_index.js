var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AccountDto.html",[0,1.039,1,3.053]],["body/interfaces/AccountDto.html",[0,1.63,1,5.559,2,2.642,3,0.229,4,0.203,5,0.178,6,5.326,7,7.124,8,3.925,9,0.281,10,0.704,11,3.838,12,6.72,13,0.92,14,0.326,15,0.015,16,0.542,17,6.138,18,0.229,19,0.013,20,0.013]],["title/components/AddAuthorComponent.html",[21,0.326,22,0.891]],["body/components/AddAuthorComponent.html",[3,0.122,4,0.108,5,0.095,9,0.15,10,0.466,11,3.005,13,0.377,14,0.343,15,0.015,16,0.592,18,0.122,19,0.009,20,0.009,21,0.535,22,1.381,23,1.16,24,0.867,25,1.052,26,0.901,27,0.901,28,5.71,29,4.852,30,2.549,31,0.608,32,2.338,33,1.53,34,1.301,35,1.783,36,2.095,37,0.688,38,2.076,39,2.152,40,1.502,41,1.405,42,4.804,43,1.301,44,4.093,45,2.493,46,2.493,47,1.226,48,2.383,49,0.571,50,4.093,51,2.731,52,2.28,53,2.497,54,2.032,55,0.628,56,2.549,57,3.688,58,2.726,59,0.831,60,3.267,61,0.703,62,0.661,63,0.703,64,4.718,65,3.111,66,3.267,67,2.46,68,2.124,69,1.861,70,1.581,71,3.681,72,3.128,73,1.205,74,1.861,75,1.47,76,1.645,77,2.46,78,2.596,79,0.857,80,1.858,81,1.648,82,0.812,83,1.049,84,3.267,85,1.581,86,1.517,87,2.124,88,1.581,89,3.185,90,2.03,91,3.267,92,2.03,93,2.03,94,1.116,95,2.124,96,1.861,97,2.124,98,1.301,99,2.03,100,1.931,101,2.28,102,2.03,103,2.124,104,3.267,105,2.834,106,1.542,107,1.036,108,1.673,109,3.267,110,1.549,111,2.834,112,0.848,113,2.28,114,2.834,115,0.466,116,1.139,117,2.124,118,1.471,119,0.688,120,2.166,121,1.904,122,0.256,123,1.471,124,1.471,125,1.471,126,1.471,127,0.916,128,1.471,129,1.471,130,1.406,131,1.406,132,1.406,133,1.406,134,1.289,135,1.406,136,1.236,137,1.052,138,1.471,139,1.471,140,3.681,141,0.716,142,3.267,143,1.471,144,1.345,145,1.406,146,1.904,147,2.549,148,1.471,149,3.681,150,3.337,151,2.61,152,2.124,153,3.688,154,3.337,155,2.124,156,2.749,157,3.128,158,2.03,159,2.124,160,2.03,161,2.226,162,2.596,163,1.713,164,0.835,165,1.301,166,1.205,167,0.744,168,1.673,169,0.901,170,1.527,171,0.773,172,1.951,173,0.744,174,1.673,175,0.773,176,1.328,177,0.744,178,0.817,179,0.773,180,0.744,181,1.301,182,0.744,183,0.901,184,0.773,185,0.773,186,0.901,187,0.773,188,0.901,189,0.773,190,0.901,191,0.773,192,0.901,193,0.744,194,0.901,195,0.744,196,0.901,197,0.773,198,0.773,199,0.744,200,0.901,201,0.773,202,1.301,203,0.744,204,0.901,205,0.773,206,0.835,207,0.773,208,1.673,209,0.773,210,0.773,211,0.901,212,0.773,213,0.744,214,1.377,215,0.773,216,0.744,217,0.901,218,0.803,219,0.744,220,0.773,221,0.744,222,0.744,223,0.901,224,0.773,225,0.835,226,0.773,227,0.744,228,0.901,229,0.744,230,0.867,231,0.901]],["title/components/AddAuthorFormComponent.html",[21,0.326,171,0.926]],["body/components/AddAuthorFormComponent.html",[3,0.126,4,0.112,5,0.098,9,0.155,10,0.479,11,3.797,13,0.839,14,0.333,15,0.015,16,0.499,18,0.126,19,0.009,20,0.009,21,0.543,22,0.772,23,1.191,24,0.9,25,1.092,26,0.935,27,0.935,28,5.674,29,4.822,31,0.532,32,2.401,33,1.583,37,0.714,38,2.081,39,2.157,40,1.423,41,1.443,43,1.337,47,0.936,49,0.587,52,1.396,55,0.451,59,0.824,61,0.615,62,0.725,63,0.615,65,2.938,73,1.238,79,0.846,80,1.517,81,1.191,82,0.747,83,0.898,85,1.623,86,1.473,94,1.606,101,1.396,107,0.907,110,1.576,112,0.609,115,0.335,121,1.976,122,0.265,127,0.802,137,1.092,138,1.527,139,1.527,141,1.351,151,3.074,152,2.182,155,2.182,156,2.823,157,3.213,158,2.085,159,2.182,160,2.085,163,1.759,164,0.866,165,1.337,166,1.238,167,0.772,168,1.702,169,0.935,170,1.56,171,1.46,172,1.971,173,0.772,174,1.702,175,0.802,176,1.351,177,0.772,178,0.829,179,0.802,180,0.772,181,1.337,182,0.772,183,0.935,184,0.802,185,0.802,186,0.935,187,0.802,188,0.935,189,0.802,190,0.935,191,0.802,192,0.935,193,0.772,194,0.935,195,0.772,196,0.935,197,0.802,198,0.802,199,0.772,200,0.935,201,0.802,202,1.337,203,0.772,204,0.935,205,0.802,206,0.866,207,0.802,208,1.702,209,0.802,210,0.802,211,0.935,212,0.802,213,0.772,214,1.391,215,0.802,216,0.772,217,0.935,218,0.834,219,0.772,220,0.802,221,0.772,222,0.772,223,0.935,224,0.802,225,1.992,226,0.802,227,0.772,228,0.935,229,0.772,230,0.9,231,0.935,232,4.822,233,1.768,234,2.823,235,3.111,236,2.666,237,5.654,238,3.111,239,4.905,240,3.295,241,2.823,242,3.595,243,3.394,244,2.666,245,3.295,246,1.866,247,3.056,248,2.823,249,2.666,250,2.948,251,2.425,252,2.823,253,3.591,254,3.39,255,1.759,256,2.287,257,3.371,258,3.394,259,2.527,260,1.866,261,1.912,262,2.053,263,2.527,264,2.54,265,2.941,266,2.666,267,2.287,268,2.287,269,2.941,270,2.666,271,2.666,272,2.401,273,2.668,274,2.941,275,2.425,276,2.527,277,1.68,278,1.338,279,1.459,280,3.39,281,1.866,282,1.866,283,2.248,284,2.248,285,2.248,286,2.646,287,3.295,288,3.39,289,1.103,290,3.39,291,3.39,292,2.941,293,2.941,294,1.866,295,3.39,296,3.39,297,1.866,298,1.866,299,3.595,300,3.595,301,3.217,302,2.287,303,2.182,304,3.595]],["title/components/AddAuthorHaikuComponent.html",[21,0.326,173,0.891]],["body/components/AddAuthorHaikuComponent.html",[3,0.117,4,0.104,5,0.091,9,0.144,10,0.453,13,0.362,14,0.34,15,0.015,16,0.584,18,0.117,19,0.008,20,0.008,21,0.451,22,0.715,23,1.128,24,0.834,25,1.012,26,0.867,27,0.867,31,0.503,33,1.583,34,1.265,35,1.744,36,2.049,37,0.662,38,2.07,39,2.145,40,1.497,41,1.366,43,1.265,45,2.439,46,2.439,47,1.216,48,2.331,49,0.555,51,2.681,52,2.23,53,2.452,54,1.995,55,0.61,58,2.694,59,0.823,61,0.688,62,0.618,63,0.688,67,2.391,68,2.065,69,1.809,70,1.536,71,3.578,72,3.041,73,1.172,74,1.809,75,1.438,76,1.599,77,2.391,78,2.523,79,0.848,80,1.845,81,1.626,82,0.801,83,1.039,85,1.536,86,1.506,87,2.065,88,1.536,89,3.151,90,1.974,92,1.974,93,1.974,94,1.085,95,2.065,96,1.809,97,2.065,98,1.265,99,1.974,100,1.888,101,2.23,102,1.974,103,2.065,106,1.483,107,1.013,108,1.642,110,1.521,112,1.07,113,2.23,115,0.453,116,1.095,117,2.065,118,1.415,119,0.662,122,0.246,123,1.415,124,1.415,125,1.415,126,1.415,127,0.896,128,1.415,129,1.415,130,1.352,131,1.352,132,1.352,133,1.352,134,1.24,135,1.352,136,1.189,137,1.012,138,1.415,139,1.415,140,3.578,141,0.688,143,1.415,144,1.294,145,1.352,146,1.831,147,2.452,148,1.415,149,3.578,150,2.523,151,3.012,152,2.065,153,3.105,154,2.523,155,2.065,158,1.974,159,2.065,160,1.974,161,2.164,162,2.523,163,1.665,164,0.803,165,1.265,166,1.172,167,0.715,168,1.642,169,0.867,170,1.494,171,0.743,172,1.93,173,1.356,174,1.642,175,0.743,176,1.67,177,0.715,178,0.804,179,0.743,180,0.715,181,1.265,182,0.715,183,0.867,184,0.743,185,0.743,186,0.867,187,0.743,188,0.867,189,0.743,190,0.867,191,0.743,192,0.867,193,0.715,194,0.867,195,0.715,196,0.867,197,0.743,198,0.743,199,0.715,200,0.867,201,0.743,202,1.265,203,0.715,204,0.867,205,0.743,206,0.803,207,0.743,208,1.642,209,0.743,210,0.743,211,0.867,212,0.743,213,0.715,214,1.363,215,0.743,216,0.715,217,0.867,218,0.773,219,0.715,220,0.743,221,0.715,222,0.715,223,0.867,224,0.743,225,0.803,226,0.743,227,0.715,228,0.867,229,0.715,230,0.834,231,0.867,305,4.809,306,4.226,307,4.226,308,2.083,309,3.873,310,3.28,311,3.978,312,2.452,313,4.098,314,3.142,315,4.586,316,3.56,317,3.142,318,3.142,319,3.142,320,3.142,321,3.142,322,3.142,323,3.142,324,3.142,325,2.452,326,2.083,327,2.083,328,3.142,329,2.065,330,2.523,331,3.448,332,2.523,333,3.853,334,3.47,335,3.638,336,2.523,337,2.672,338,2.672]],["title/components/AddAuthorHaikuFormComponent.html",[21,0.326,175,0.926]],["body/components/AddAuthorHaikuFormComponent.html",[3,0.074,4,0.066,5,0.058,9,0.091,10,0.319,13,0.77,14,0.35,15,0.015,16,0.512,18,0.074,19,0.006,20,0.006,21,0.339,22,0.455,23,0.795,24,0.53,25,0.643,26,0.551,27,0.551,31,0.514,33,1.607,34,0.892,35,1.312,36,1.541,37,0.421,38,1.989,39,2.056,40,1.27,41,0.963,43,0.892,45,1.834,46,1.834,47,1.167,48,1.753,49,0.391,51,2.108,52,1.677,53,1.928,54,1.568,55,0.266,57,3.189,59,0.877,61,0.653,62,0.644,63,0.653,65,2.95,73,0.826,75,1.081,79,0.895,80,1.87,81,1.767,82,0.878,83,1.121,85,1.568,86,1.479,87,1.455,88,1.083,89,2.717,90,1.391,92,2.015,93,1.391,94,1.428,95,1.455,96,1.275,97,1.455,98,1.291,99,2.015,100,1.127,101,1.677,102,1.391,103,1.455,106,0.942,107,1.289,108,1.418,110,1.636,112,0.924,113,1.677,115,0.197,117,1.455,118,0.899,119,0.858,120,1.324,121,1.163,122,0.156,123,0.899,124,0.899,125,0.899,126,0.899,127,0.911,128,0.899,129,0.899,130,0.859,131,0.859,132,0.859,133,0.859,134,0.788,135,0.859,136,0.755,137,0.643,138,0.899,139,0.899,141,1.126,143,0.899,144,0.822,145,0.859,148,0.899,151,2.015,152,1.455,155,1.455,158,1.391,159,1.455,160,1.391,163,2.191,164,0.51,165,0.892,166,0.826,167,0.455,168,1.291,169,0.551,170,1.123,171,0.472,172,1.664,173,0.455,174,1.291,175,1.108,176,1.775,177,0.455,178,0.736,179,0.472,180,0.455,181,0.892,182,0.455,183,0.551,184,0.472,185,0.472,186,0.551,187,0.472,188,0.551,189,0.472,190,0.551,191,0.472,192,0.551,193,0.455,194,0.551,195,0.455,196,0.551,197,0.472,198,0.472,199,0.455,200,0.551,201,0.472,202,0.892,203,0.455,204,0.551,205,0.472,206,0.51,207,0.472,208,1.291,209,0.472,210,0.472,211,0.551,212,0.472,213,0.455,214,1.175,215,0.472,216,0.455,217,0.551,218,0.491,219,0.455,220,0.472,221,0.455,222,0.455,223,0.551,224,0.472,225,1.82,226,0.472,227,0.455,228,0.551,229,0.455,230,0.53,231,0.551,232,5.06,233,1.041,235,2.241,236,1.779,238,2.241,240,2.373,241,1.883,242,2.728,243,2.576,244,1.779,245,2.373,246,1.098,247,2.32,248,1.163,249,1.779,250,2.124,251,1.428,252,1.883,253,2.83,255,1.173,256,1.525,257,2.848,258,2.576,259,1.685,260,1.098,261,1.275,262,1.867,263,1.685,264,1.928,266,1.779,267,1.525,268,1.525,270,1.779,271,1.779,272,1.602,273,1.922,275,1.428,276,1.685,277,0.989,278,0.788,279,0.859,281,1.098,282,2.576,283,1.324,284,1.324,287,2.373,289,1.066,294,1.098,297,1.098,298,1.098,299,1.883,300,1.883,301,2.441,302,1.525,303,1.455,304,1.883,305,5.06,306,4.447,307,4.447,316,2.441,327,1.324,329,2.884,330,2.576,331,3.748,332,3.029,334,2.728,335,3.029,336,3.029,337,1.883,338,3.207,339,4.073,340,3.533,341,2.124,342,3.178,343,3.533,344,4.073,345,2.124,346,3.178,347,4.013,348,2.124,349,2.124,350,4.061,351,3.232,352,3.232,353,4.681,354,3.232,355,1.558,356,1.996,357,1.996,358,1.996,359,1.996,360,1.883,361,1.883,362,3.029,363,3.987,364,2.108,365,3.207,366,2.728,367,3.232,368,3.232,369,2.804,370,3.232,371,3.178,372,1.996,373,1.732,374,1.732,375,1.996,376,3.232,377,4.58,378,1.996,379,2.576,380,2.522,381,3.187,382,1.928,383,2.522,384,3.232,385,1.996,386,3.232,387,2.522,388,2.312,389,4.681,390,2.143,391,0.826,392,3.232,393,1.996,394,3.232,395,1.996,396,1.484,397,1.525,398,1.732,399,1.732,400,1.732,401,1.732,402,1.558,403,1.732,404,2.312,405,1.732,406,1.428,407,1.568,408,1.996,409,1.428,410,1.732,411,2.522,412,1.237,413,1.558,414,1.098,415,1.996,416,1.163,417,2.522,418,1.163,419,1.558,420,1.163,421,1.779,422,1.732,423,2.804,424,1.558,425,1.996,426,1.558,427,1.732,428,2.522,429,1.558,430,1.163,431,1.996,432,1.558,433,1.558,434,2.522,435,1.558,436,1.996,437,1.558,438,1.996,439,1.996,440,1.996,441,1.996,442,1.996,443,1.996,444,1.996,445,1.732,446,1.996,447,1.996,448,1.996,449,1.732,450,1.996,451,1.996,452,1.996,453,1.996,454,1.996,455,1.558,456,1.996,457,1.996,458,1.996,459,2.804,460,3.232,461,2.522]],["title/components/AddUserHaikuComponent.html",[21,0.326,177,0.891]],["body/components/AddUserHaikuComponent.html",[3,0.116,4,0.103,5,0.09,9,0.142,10,0.45,13,0.359,14,0.34,15,0.015,16,0.582,18,0.116,19,0.008,20,0.008,21,0.525,22,0.708,23,1.119,24,0.825,25,1.001,26,0.858,27,0.858,31,0.591,32,2.255,33,1.325,34,1.255,35,1.734,36,2.037,37,0.655,38,2.069,39,2.144,40,1.495,41,1.356,43,1.255,45,2.424,46,2.424,47,1.214,48,2.317,49,0.551,51,2.668,52,2.217,53,2.44,54,1.985,55,0.606,58,2.685,59,0.821,61,0.684,62,0.616,63,0.684,67,2.373,68,2.049,69,1.796,70,1.525,71,3.551,72,3.018,73,1.163,74,1.796,75,1.429,76,1.587,77,2.373,78,2.505,79,0.845,80,1.842,81,1.62,82,0.798,83,1.036,85,1.525,86,1.503,87,2.049,88,1.525,89,3.142,90,1.959,92,1.959,93,1.959,94,1.077,95,2.049,96,1.796,97,2.049,98,1.255,99,1.959,100,1.877,101,2.217,102,1.959,103,2.049,106,1.467,107,1.007,108,1.634,110,1.514,112,0.818,113,2.217,115,0.45,116,1.084,117,2.049,118,1.4,119,0.655,122,0.243,123,1.4,124,1.4,125,1.4,126,1.4,127,0.891,128,1.4,129,1.4,130,1.338,131,1.338,132,1.338,133,1.338,134,1.227,135,1.338,136,1.176,137,1.001,138,1.4,139,1.4,140,3.551,141,0.681,143,1.4,144,1.281,145,1.338,146,1.812,147,2.426,148,1.4,149,3.551,150,2.505,151,3.003,152,2.049,153,3.09,154,2.505,155,2.049,158,1.959,159,2.049,160,1.959,161,2.148,162,2.505,163,1.652,164,0.794,165,1.255,166,1.163,167,0.708,168,1.634,169,0.858,170,1.485,171,0.736,172,1.925,173,0.708,174,1.634,175,0.736,176,1.687,177,1.349,178,1.038,179,0.736,180,0.708,181,1.255,182,0.708,183,0.858,184,0.736,185,0.736,186,0.858,187,0.736,188,0.858,189,0.736,190,0.858,191,0.736,192,0.858,193,0.708,194,0.858,195,0.708,196,0.858,197,0.736,198,0.736,199,0.708,200,0.858,201,0.736,202,1.255,203,0.708,204,0.858,205,0.736,206,0.794,207,0.736,208,1.634,209,0.736,210,0.736,211,0.858,212,0.736,213,0.708,214,1.359,215,0.736,216,0.708,217,0.858,218,0.765,219,0.708,220,0.736,221,0.708,222,0.708,223,0.858,224,0.736,225,0.794,226,0.736,227,0.708,228,0.858,229,0.708,230,0.825,231,0.858,306,4.216,307,4.216,308,2.062,309,3.85,310,3.255,326,2.062,329,2.049,330,2.505,331,3.435,332,2.505,333,3.839,334,3.453,335,3.625,336,2.505,337,2.652,338,2.652,462,4.798,463,3.948,464,2.698,465,4.369,466,2.426,467,4.551,468,3.549,469,3.109,470,3.109,471,3.109,472,2.698,473,2.698,474,2.426,475,2.698,476,2.698,477,2.698,478,2.062,479,3.109]],["title/components/AddUserHaikuFormComponent.html",[21,0.326,179,0.926]],["body/components/AddUserHaikuFormComponent.html",[3,0.109,4,0.097,5,0.085,9,0.135,10,0.431,13,0.809,14,0.332,15,0.015,16,0.59,18,0.109,19,0.008,20,0.008,21,0.513,22,0.669,23,1.074,24,0.78,25,0.947,26,0.811,27,0.811,31,0.479,32,2.164,33,1.302,34,1.204,35,1.678,36,1.112,37,0.619,38,2.06,39,2.134,40,1.387,41,1.301,43,1.204,47,1.136,48,2.242,49,0.529,54,1.932,55,0.391,59,0.836,61,0.555,62,0.625,63,0.555,73,1.116,79,0.85,80,1.688,81,1.418,82,0.782,83,0.999,85,1.463,86,1.391,94,1.528,107,1.208,108,1.781,110,1.473,112,0.936,113,2.145,115,0.29,119,0.619,122,0.23,127,0.723,141,1.263,151,2.481,152,1.966,155,1.966,158,1.879,159,1.966,160,1.879,163,2.344,164,0.751,165,1.204,166,1.116,167,0.669,168,1.591,169,0.811,170,1.437,171,0.696,172,1.894,173,0.669,174,1.591,175,0.696,176,1.769,177,0.669,178,1.039,179,1.364,180,0.669,181,1.204,182,0.669,183,0.811,184,0.696,185,0.696,186,0.811,187,0.696,188,0.811,189,0.696,190,0.811,191,0.696,192,0.811,193,0.669,194,0.811,195,0.669,196,0.811,197,0.696,198,0.696,199,0.669,200,0.811,201,0.696,202,1.204,203,0.669,204,0.811,205,0.696,206,0.751,207,0.696,208,1.591,209,0.696,210,0.696,211,0.811,212,0.696,213,0.669,214,1.337,215,0.696,216,0.669,217,0.811,218,0.723,219,0.669,220,0.696,221,0.669,222,0.669,223,0.811,224,0.696,225,1.952,226,0.696,227,0.669,228,0.811,229,0.669,230,0.78,231,0.811,232,4.863,233,1.533,234,2.545,235,2.867,236,2.403,238,2.867,240,3.036,241,2.545,242,3.36,243,3.173,244,2.403,245,3.036,246,1.618,247,2.857,248,1.713,249,2.403,250,2.716,252,2.545,253,3.39,255,1.585,256,2.061,257,3.24,258,3.173,259,2.277,260,1.618,261,1.723,262,2.237,263,2.277,264,2.375,266,2.403,267,2.061,268,2.061,270,2.403,271,2.403,272,2.164,273,2.458,276,2.277,277,1.457,278,1.16,279,1.265,281,1.618,282,2.867,283,1.949,284,1.949,287,3.036,289,0.994,294,1.618,297,1.618,298,1.618,299,2.545,300,2.545,301,2.277,302,2.061,303,1.966,304,2.545,306,4.273,307,4.273,329,3.215,330,3.173,331,4.005,332,3.553,334,3.36,335,3.553,336,3.553,337,2.545,338,3.762,342,4.065,396,1.074,398,2.55,402,2.294,406,2.102,412,1.822,413,2.294,414,1.618,416,1.713,417,3.407,418,1.713,419,2.294,420,1.713,455,2.294,462,4.863,468,3.007,478,1.949,480,5.209,481,4.519,482,3.486,483,3.036,484,2.721,485,4.366,486,2.939,487,2.939,488,2.596,489,2.277,490,2.939,491,2.102,492,2.102,493,2.294,494,1.949,495,2.939,496,5.209,497,2.294,498,2.939,499,2.55,500,2.939,501,2.939,502,2.939,503,2.939,504,2.939]],["title/components/AllAuthorHaikusComponent.html",[21,0.326,180,0.891]],["body/components/AllAuthorHaikusComponent.html",[3,0.076,4,0.067,5,0.059,9,0.093,10,0.325,13,0.477,14,0.345,15,0.015,16,0.459,18,0.076,19,0.006,20,0.006,21,0.344,22,0.464,23,0.809,24,0.542,26,0.563,27,0.563,31,0.571,33,1.608,34,0.907,35,1.331,36,1.564,37,0.43,38,1.993,39,2.061,40,1.138,41,0.608,43,0.907,45,1.861,46,1.861,47,1.146,48,1.779,49,0.398,51,2.135,52,1.952,53,1.952,54,1.588,55,0.438,59,0.88,61,0.706,62,0.587,63,0.706,68,2.135,69,1.87,70,2.25,75,0.873,79,0.908,80,1.923,81,1.825,82,0.908,83,1.14,85,1.102,86,1.42,87,1.481,88,1.102,89,2.904,90,1.416,92,2.392,93,1.416,94,0.778,95,1.481,96,1.298,97,1.481,98,1.308,99,1.416,100,1.147,101,1.952,102,1.416,103,1.481,106,0.963,107,1.295,108,1.733,110,1.329,112,0.999,113,1.702,115,0.202,117,1.861,118,0.919,119,0.43,122,0.16,123,0.919,124,0.919,125,1.481,126,0.919,127,0.92,128,0.919,129,0.919,130,0.878,131,0.878,132,0.878,133,0.878,134,0.805,135,0.878,136,0.772,137,1.059,138,1.481,139,1.481,141,1.139,143,1.481,144,1.355,145,1.416,148,1.481,164,0.521,165,0.907,166,0.84,167,0.464,168,1.308,169,0.563,170,1.14,171,0.483,172,1.678,173,0.464,174,1.308,175,0.483,176,1.664,177,0.464,178,0.837,179,0.483,180,1.079,181,0.907,182,0.464,183,0.563,184,0.483,185,0.483,186,0.563,187,0.483,188,0.563,189,0.483,190,0.563,191,0.483,192,0.563,193,0.464,194,0.563,195,0.464,196,0.563,197,0.483,198,0.483,199,0.464,200,0.563,201,0.483,202,0.907,203,0.464,204,0.563,205,0.483,206,0.521,207,0.483,208,1.308,209,0.483,210,0.483,211,0.563,212,0.483,213,0.464,214,1.308,215,0.483,216,0.464,217,0.563,218,0.502,219,0.464,220,0.483,221,0.464,222,0.464,223,0.563,224,0.483,225,0.521,226,0.483,227,0.464,228,0.563,229,0.464,230,0.542,231,0.563,255,1.194,289,0.749,302,1.552,303,1.481,305,5.075,312,1.592,313,3.445,316,2.711,325,1.592,326,1.353,327,1.353,329,2.503,333,1.917,341,2.155,345,2.155,346,3.225,347,4.058,348,2.711,349,2.155,360,1.917,361,1.917,362,3.059,364,2.135,365,3.239,366,1.917,371,1.592,377,2.352,379,1.81,380,2.567,381,3.223,382,2.289,387,2.567,391,1.769,396,1.875,397,2.964,407,1.588,411,2.567,424,1.592,426,1.592,428,2.567,429,1.592,430,1.189,432,1.592,433,1.592,434,2.567,435,1.592,437,2.567,505,5.755,506,1.77,507,3.716,508,3.289,509,5.2,510,4.133,511,4.133,512,3.585,513,2.741,514,4.113,515,4.113,516,4.741,517,2.854,518,3.289,519,4.741,520,2.352,521,2.854,522,3.217,523,2.04,524,2.04,525,2.04,526,1.917,527,1.715,528,2.04,529,2.04,530,2.181,531,2.352,532,2.04,533,2.04,534,2.04,535,2.854,536,2.04,537,1.917,538,1.355,539,3.585,540,2.039,541,3.289,542,2.04,543,2.567,544,2.567,545,1.917,546,2.567,547,2.567,548,3.172,549,4.181,550,3.585,551,2.04,552,2.04,553,2.854,554,2.854,555,2.854,556,2.854,557,2.567,558,2.04,559,2.854,560,2.04,561,2.04,562,2.04,563,2.04,564,6.081,565,2.04,566,2.04,567,2.04,568,1.917,569,2.04,570,2.04,571,2.04,572,5.072,573,3.585,574,2.04,575,2.04,576,2.04,577,2.04,578,2.04,579,1.459,580,5.2,581,4.133,582,1.353,583,1.77,584,2.04,585,2.04,586,1.592,587,1.77,588,4.133,589,2.04,590,2.04,591,1.459,592,1.77,593,1.77,594,2.04,595,2.04,596,3.585,597,2.04,598,1.77,599,3.289,600,2.04,601,3.289,602,2.04,603,2.04,604,1.77,605,3.289,606,3.289,607,2.854,608,2.854,609,2.854,610,3.699,611,2.854,612,3.289,613,3.289,614,3.289,615,3.289,616,2.352,617,2.854,618,2.854,619,2.567,620,1.77,621,1.77,622,2.352,623,2.352,624,2.352,625,2.567]],["title/components/AllAuthorsComponent.html",[21,0.326,182,0.891]],["body/components/AllAuthorsComponent.html",[3,0.077,4,0.068,5,0.06,9,0.094,10,0.327,11,1.64,13,0.479,14,0.348,15,0.015,16,0.461,18,0.077,19,0.006,20,0.006,21,0.435,22,0.468,23,0.814,24,0.546,26,0.567,27,0.567,31,0.644,33,1.543,34,0.913,35,1.338,36,1.572,37,0.433,38,1.995,39,2.063,40,1.142,41,0.613,43,0.913,45,1.871,46,1.871,47,1.186,48,1.788,49,0.401,51,2.145,52,1.962,53,1.962,54,1.596,55,0.44,56,1.605,57,3.07,59,0.887,61,0.745,62,0.664,63,0.745,65,2.351,68,2.145,69,1.306,70,2.255,75,0.879,79,0.931,80,1.924,81,1.827,82,0.917,83,1.143,85,1.109,86,1.423,87,1.491,88,1.109,89,2.911,90,1.425,92,2.401,93,1.425,94,0.783,95,1.491,96,1.306,97,1.491,98,1.314,99,1.425,100,1.154,101,1.962,102,1.425,103,1.491,106,0.97,107,1.363,108,1.783,110,1.559,112,1.003,113,1.711,115,0.203,117,1.871,118,0.926,119,0.433,120,1.364,121,1.198,122,0.161,123,0.926,124,0.926,125,1.491,126,0.926,127,0.971,128,0.926,129,0.926,130,0.885,131,1.788,132,0.885,133,0.885,134,0.811,135,0.885,136,0.778,137,1.066,138,1.491,139,1.491,141,1.337,143,1.491,144,1.363,145,1.425,148,1.491,164,0.525,165,0.913,166,0.846,167,0.468,168,1.314,169,0.567,170,1.146,171,0.487,172,1.683,173,0.468,174,1.314,175,0.487,176,1.043,177,0.468,178,0.745,179,0.487,180,0.468,181,0.913,182,1.085,183,0.567,184,0.487,185,0.487,186,0.567,187,0.487,188,0.567,189,0.487,190,0.567,191,0.487,192,0.567,193,0.468,194,0.567,195,0.468,196,0.567,197,0.487,198,0.487,199,0.468,200,0.567,201,0.487,202,0.913,203,0.468,204,0.567,205,0.487,206,0.525,207,0.487,208,1.314,209,0.487,210,0.487,211,0.567,212,0.487,213,0.468,214,1.311,215,0.487,216,0.468,217,0.567,218,0.506,219,0.468,220,0.487,221,0.468,222,0.468,223,0.567,224,0.487,225,0.525,226,0.487,227,0.468,228,0.567,229,0.468,230,0.546,231,0.567,238,2.287,255,1.729,261,1.306,262,1.509,264,1.363,289,0.754,302,1.562,303,1.491,333,1.929,340,3.605,341,2.167,343,3.605,345,2.167,346,3.243,347,4.074,348,2.723,349,2.167,350,4.132,360,1.929,361,1.929,362,3.07,363,4.331,364,2.145,365,3.251,366,1.929,371,1.605,377,2.368,379,1.822,380,2.583,381,3.236,382,2.298,387,2.583,391,1.918,396,1.906,397,3.118,407,1.596,411,2.583,421,3.557,422,3.605,423,4.53,424,1.605,426,1.605,427,1.784,428,2.583,429,1.605,430,1.198,432,1.605,433,1.605,434,2.583,435,1.605,437,2.583,445,1.784,449,2.872,507,1.64,512,3.605,513,2.756,515,4.132,517,2.872,522,3.228,526,1.929,527,2.484,530,2.195,531,2.368,535,2.872,537,1.929,538,1.363,539,3.605,540,2.052,543,2.583,544,2.583,545,1.929,546,2.583,547,2.583,548,3.182,550,3.605,553,2.872,554,2.872,555,2.872,556,2.872,568,1.929,572,5.089,573,3.605,579,1.471,582,1.364,586,1.605,587,1.784,591,1.471,592,1.784,593,1.784,596,3.605,598,1.784,604,1.784,607,2.872,608,2.872,609,2.872,611,2.872,616,2.368,617,2.872,618,2.872,619,2.583,620,1.784,621,1.784,622,2.368,623,2.368,624,2.368,625,2.583,626,6.688,627,5.513,628,1.784,629,2.872,630,1.64,631,3.311,632,5.221,633,3.605,634,4.132,635,2.872,636,3.311,637,4.763,638,2.368,639,2.872,640,2.056,641,2.056,642,2.056,643,2.056,644,2.872,645,2.056,646,4.132,647,1.491,648,2.056,649,2.056,650,2.056,651,2.056,652,2.056,653,3.311,654,2.056,655,2.056,656,2.056,657,2.583,658,2.056,659,2.872,660,2.056,661,3.311,662,2.056,663,2.056,664,2.056,665,2.056,666,2.056,667,2.056,668,2.056,669,2.056,670,2.056,671,2.056,672,2.056,673,2.056,674,2.056,675,2.056,676,2.056,677,1.784,678,4.155,679,2.056,680,2.056,681,2.056,682,2.056,683,2.056,684,2.056,685,3.311,686,2.056,687,3.311,688,2.056,689,2.056,690,1.784,691,3.311,692,3.311,693,3.311,694,3.311,695,2.872,696,3.311]],["title/components/AppComponent.html",[21,0.326,187,0.926]],["body/components/AppComponent.html",[3,0.177,4,0.158,5,0.138,9,0.218,10,0.603,13,0.55,14,0.218,15,0.015,16,0.421,18,0.177,19,0.011,20,0.011,21,0.611,22,1.085,23,1.501,24,1.265,25,1.535,26,1.315,27,1.315,31,0.523,33,1.487,37,1.004,38,2.122,39,2.202,40,1.405,41,1.819,43,1.684,55,0.896,59,0.704,62,0.63,83,0.694,107,0.892,115,0.471,122,0.373,164,1.218,165,1.684,166,1.56,167,1.085,168,1.959,169,1.315,170,1.858,171,1.128,172,2.133,173,1.085,174,1.959,175,1.128,176,1.555,177,1.085,178,0.932,179,1.128,180,1.085,181,1.684,182,1.085,183,1.315,184,1.128,185,1.128,186,1.315,187,1.68,188,1.315,189,1.128,190,1.315,191,1.128,192,1.315,193,1.085,194,1.315,195,1.085,196,1.315,197,1.128,198,1.128,199,1.085,200,1.315,201,1.128,202,1.684,203,1.085,204,1.315,205,1.128,206,1.218,207,1.128,208,1.959,209,1.128,210,1.128,211,1.315,212,1.128,213,1.085,214,1.506,215,1.128,216,1.085,217,1.315,218,1.172,219,1.085,220,1.128,221,1.085,222,1.085,223,1.315,224,1.128,225,1.218,226,1.128,227,1.085,228,1.315,229,1.085,230,1.265,231,1.315,329,3.032,697,4.135,698,6.104,699,3.557,700,2.045,701,6.734,702,6.104,703,6.104,704,4.048]],["title/modules/AppModule.html",[705,2.798,706,2.798]],["body/modules/AppModule.html",[3,0.118,4,0.105,5,0.092,15,0.015,16,0.724,18,0.118,19,0.008,20,0.008,22,1.509,23,1.561,29,3.057,33,1.535,39,1.224,115,0.313,116,1.103,122,0.248,141,0.693,164,0.809,171,1.568,173,1.509,175,1.568,176,1.536,177,1.509,178,0.994,179,1.568,180,1.509,182,1.509,184,1.568,185,1.568,187,1.761,189,1.568,191,1.568,193,1.509,195,1.509,197,1.568,198,1.091,199,1.509,201,1.568,203,1.509,205,1.568,207,1.568,209,1.568,210,1.568,212,1.568,213,1.509,215,1.568,216,1.509,218,1.63,219,1.509,220,1.568,221,1.36,222,1.509,224,1.568,226,1.091,227,1.695,229,1.695,232,3.606,278,1.248,306,3.481,307,3.481,383,2.469,505,4.273,507,2.96,627,2.263,705,2.263,706,5.942,707,2.098,708,2.263,709,4.718,710,4.662,711,4.718,712,4.243,713,2.745,714,2.745,715,2.745,716,2.745,717,2.745,718,2.745,719,4.395,720,4.395,721,3.999,722,2.745,723,2.098,724,3.164,725,3.999,726,3.999,727,4.61,728,3.999,729,2.469,730,4.61,731,3.164,732,4.61,733,4.61,734,1.493,735,4.61,736,4.61,737,2.745,738,4.61,739,2.263,740,3.164,741,4.61,742,3.164,743,4.61,744,3.164,745,4.61,746,3.164,747,2.857,748,1.844,749,1.844,750,1.149,751,3.164,752,3.164,753,3.164,754,3.164,755,2.745,756,2.745,757,2.263,758,2.745,759,3.597,760,3.164,761,2.469,762,7.15,763,2.745,764,3.164,765,2.469,766,2.745,767,2.745,768,3.999,769,3.057,770,3.962,771,2.745,772,3.999,773,4.718,774,2.745,775,2.745,776,2.745,777,2.469,778,3.999,779,3.057,780,5.75,781,5.75,782,3.999,783,3.597,784,3.597,785,3.703,786,3.703,787,2.745,788,2.469,789,2.745,790,2.745,791,2.469,792,2.745,793,5.75,794,4.61,795,3.164,796,3.164,797,2.745,798,3.164,799,2.745,800,3.164,801,3.164]],["title/modules/AppRoutingModule.html",[705,2.798,719,2.595]],["body/modules/AppRoutingModule.html",[3,0.149,4,0.132,5,0.116,15,0.015,16,0.717,18,0.149,19,0.01,20,0.01,21,0.671,22,1.239,23,0.985,29,2.656,33,1.53,40,1.156,69,2.736,73,1.928,115,0.396,116,1.396,122,0.313,173,1.239,176,1.192,177,1.239,178,1.018,180,1.239,182,1.239,184,1.288,185,1.288,193,1.239,195,1.239,198,0.948,199,1.239,201,1.463,203,1.239,206,1.023,207,1.288,209,1.288,210,1.288,212,1.288,213,1.239,214,1.291,216,1.239,219,1.239,221,1.407,222,1.239,289,0.912,306,3.171,307,3.171,363,2.995,505,4.742,507,3.286,627,2.864,707,2.656,712,3.125,719,3.609,725,3.475,726,4.721,737,4.721,755,3.475,756,3.475,757,2.864,758,3.475,763,3.475,766,3.475,767,3.475,768,3.475,769,2.656,771,3.475,772,3.475,773,5.362,774,3.475,775,3.475,776,3.475,777,3.125,778,3.475,779,2.656,780,5.753,781,6.205,782,4.721,783,4.246,784,4.246,785,3.373,786,3.373,787,3.475,788,3.125,789,3.475,790,3.475,791,3.125,792,3.475,793,5.753,802,4.005,803,4.005,804,4.099,805,2.656,806,5.458,807,4.005,808,5.458,809,4.005,810,4.42,811,4.005,812,4.005,813,8.075,814,5.509,815,3.609,816,7.548,817,5.89,818,5.442,819,6.631,820,3.171,821,4.005,822,3.475,823,4.005,824,4.005,825,4.005,826,4.005,827,4.005]],["title/guards/AuthenticationGuard.html",[806,2.798,828,2.28]],["body/guards/AuthenticationGuard.html",[3,0.205,4,0.182,5,0.159,9,0.252,14,0.252,15,0.015,16,0.635,18,0.205,19,0.012,20,0.012,31,0.605,34,1.52,47,1.106,49,0.809,55,0.889,58,3.108,59,0.771,61,0.7,62,0.515,63,0.7,79,0.809,82,0.809,110,1.837,115,0.544,116,1.921,122,0.431,141,1.575,178,0.95,255,2.426,262,2.611,364,3.009,483,3.893,484,3.528,647,3.009,700,1.846,805,3.654,806,4.778,814,5.568,828,3.893,829,4.78,830,5.347,831,4.778,832,4.634,833,4.299,834,5.51,835,5.51,836,4.431,837,5.214,838,3.893,839,4.141,840,3.677,841,1.201,842,4.299,843,1.921,844,4.78,845,4.299]],["title/injectables/AuthenticationService.html",[484,1.846,841,0.703]],["body/injectables/AuthenticationService.html",[3,0.138,4,0.122,5,0.107,9,0.169,10,0.509,13,0.876,14,0.32,15,0.015,16,0.566,18,0.138,19,0.009,20,0.009,31,0.703,47,1.268,49,0.624,55,0.685,59,0.867,61,0.814,62,0.6,63,0.814,79,0.965,80,1.458,81,1.267,82,0.92,83,0.75,86,0.749,98,1.421,108,2.166,110,1.783,112,1.065,115,0.365,119,0.779,122,0.289,127,0.981,134,1.459,141,1.569,178,0.954,255,2.328,256,3.026,261,2.033,262,2.802,264,2.122,268,3.026,272,3.177,289,1.589,364,2.32,381,3.675,391,1.638,396,1.458,484,2.431,527,2.687,568,2.155,630,2.553,647,3.383,700,1.239,747,4.327,748,2.155,749,2.155,750,2.152,830,4.585,836,3.417,839,4.327,840,2.835,841,0.926,843,1.29,846,1.399,847,3.209,848,3.923,849,5.789,850,5.928,851,4.47,852,5.562,853,6.411,854,4.47,855,5.562,856,5.152,857,3.209,858,5.152,859,4.47,860,3.699,861,4.47,862,5.118,863,4.753,864,4.47,865,6.518,866,4.626,867,4.47,868,4.47,869,2.553,870,3.699,871,3.528,872,4.02,873,4.327,874,3.699,875,5.152,876,3.699,877,4.47,878,4.47,879,3.699,880,6.056,881,4.47,882,3.699,883,5.152,884,3.699,885,4.47,886,4.02,887,2.339,888,3.699,889,3.209,890,3.209,891,3.699,892,3.699,893,3.699,894,3.699,895,3.699,896,3.209,897,4.47,898,3.209,899,3.209,900,4.47,901,4.47,902,4.47,903,3.209,904,3.209,905,4.47,906,3.209,907,3.209,908,3.699]],["title/interfaces/AuthorDto.html",[0,1.039,65,1.762]],["body/interfaces/AuthorDto.html",[0,1.632,2,2.645,3,0.229,4,0.203,5,0.178,9,0.282,10,0.704,11,3.839,13,0.921,14,0.345,15,0.015,18,0.229,19,0.013,20,0.013,62,0.725,65,3.21,391,1.924,396,1.753,909,5.332,910,6.146]],["title/interfaces/AuthorHaikuDto.html",[0,1.039,316,2.04]],["body/interfaces/AuthorHaikuDto.html",[0,1.578,2,2.557,3,0.221,4,0.196,5,0.172,9,0.272,10,0.691,13,0.945,14,0.363,15,0.015,18,0.221,19,0.013,20,0.013,316,3.645,329,3.452,391,1.959,396,1.922,416,4.467,418,4.467,420,4.467,421,4.087,911,5.155,912,5.942]],["title/injectables/AuthorHaikuService.html",[313,2.425,841,0.703]],["body/injectables/AuthorHaikuService.html",[3,0.096,4,0.085,5,0.075,9,0.118,10,0.391,13,0.857,14,0.334,15,0.015,16,0.61,18,0.096,19,0.007,20,0.007,31,0.724,32,1.28,33,1.579,37,1.138,40,0.741,47,1.219,49,0.654,55,0.527,59,0.797,61,0.838,62,0.617,63,0.905,65,1.784,67,2.065,70,2.211,73,1.765,74,2.131,75,1.434,76,2.301,78,2.18,79,0.899,82,0.863,83,0.701,86,1.245,88,1.327,94,0.937,98,1.093,100,1.381,107,0.901,112,1.047,115,0.255,119,0.544,122,0.202,127,1.194,137,2.296,176,1.697,214,1.197,289,1.6,311,3.436,313,2.455,316,3.664,327,1.713,341,3.336,345,3.442,348,2.065,349,2.065,361,3.147,362,2.972,363,2.18,365,3.147,366,3.147,382,2.224,391,1.864,396,1.974,397,2.9,407,1.327,421,2.651,430,2.308,483,2.807,489,2.065,507,3.731,514,3.436,520,2.833,526,2.308,537,4.154,538,1.064,545,2.308,548,2.816,549,4.395,557,3.091,564,5.332,568,3.147,630,1.963,700,0.865,734,1.219,750,1.438,841,0.712,843,0.901,846,0.977,848,3.731,863,2.807,869,3.045,871,2.972,887,3.118,913,6.096,914,2.016,915,2.308,916,4.091,917,4.817,918,3.961,919,4.817,920,4.817,921,3.961,922,2.972,923,1.422,924,2.972,925,2.651,926,2.549,927,2.651,928,2.432,929,2.816,930,3.961,931,2.676,932,3.961,933,2.583,934,2.455,935,3.961,936,3.961,937,2.583,938,2.18,939,4.154,940,3.581,941,2.308,942,3.147,943,2.308,944,2.308,945,2.308,946,3.961,947,2.583,948,3.348,949,2.972,950,2.583,951,4.721,952,2.583,953,3.863,954,3.863,955,2.583,956,2.583,957,3.961,958,2.583,959,2.455,960,2.583,961,2.065,962,3.764,963,2.065,964,3.205,965,2.273,966,2.651,967,2.065,968,5.401,969,2.583,970,2.065,971,3.436,972,2.627,973,2.065,974,5.332,975,3.764,976,1.505,977,1.347,978,1.347,979,1.505,980,1.219,981,1.422,982,1.422,983,1.347,984,1.422,985,1.422,986,1.422,987,1.713,988,2.016,989,2.241,990,2.18,991,2.583,992,2.241,993,2.583,994,2.833,995,2.833,996,3.045,997,2.583,998,2.986,999,3.382,1000,3.205,1001,3.037,1002,3.205,1003,2.627,1004,3.382,1005,2.627,1006,2.627,1007,3.863,1008,2.833,1009,2.833,1010,3.382,1011,3.382,1012,2.807,1013,2.583,1014,4.817,1015,2.18,1016,2.18,1017,2.583,1018,1.601,1019,2.583,1020,1.713,1021,2.583,1022,1.848,1023,1.713]],["title/injectables/AuthorService.html",[57,2.153,841,0.703]],["body/injectables/AuthorService.html",[3,0.113,4,0.101,5,0.088,9,0.14,10,0.443,13,0.852,14,0.342,15,0.015,16,0.625,18,0.113,19,0.008,20,0.008,31,0.742,32,1.51,33,1.565,37,0.945,40,0.839,47,1.246,49,0.711,50,3.89,55,0.597,57,2.467,59,0.817,61,0.859,62,0.632,63,0.899,65,3.326,67,2.338,70,1.966,73,1.84,74,2.315,75,1.558,76,2.28,78,2.467,79,0.912,82,0.872,83,0.653,86,1.267,88,1.502,94,1.061,98,1.237,100,1.062,107,0.839,112,1.124,115,0.301,119,0.642,121,1.776,122,0.238,127,1.172,137,2.319,214,1.274,289,1.54,341,2.774,345,3.06,348,1.589,349,1.589,361,2.613,362,2.467,363,4.106,365,2.613,366,2.613,382,1.847,390,2.973,391,1.84,396,1.942,397,2.511,407,1.021,421,3.599,430,1.776,489,2.338,526,2.613,537,3.811,538,1.255,545,2.613,548,3.06,568,2.613,630,2.222,634,3.89,638,3.207,657,3.499,700,1.021,734,1.438,750,1.628,841,0.806,843,1.062,846,1.153,848,3.758,869,3.099,871,2.467,887,3.133,915,2.613,916,4.054,922,3.229,923,1.677,924,3.229,925,2.928,926,2.769,927,2.928,928,2.642,931,2.907,934,2.779,938,2.467,939,4.255,940,3.811,941,2.613,942,3.419,943,2.613,944,2.613,945,2.613,948,3.637,949,3.229,951,4.196,953,3.207,954,3.207,959,2.779,961,2.338,962,3.693,963,2.338,964,3.441,965,2.511,966,2.928,967,2.338,970,2.338,972,2.973,973,2.338,975,3.807,976,1.776,977,1.589,978,1.589,979,1.776,980,1.438,981,1.677,982,1.677,983,1.589,984,1.677,985,1.677,986,1.677,987,2.02,990,2.467,994,2.179,995,2.179,996,3.099,998,2.779,999,3.441,1000,3.229,1001,3.06,1002,3.229,1003,2.02,1004,3.441,1005,2.02,1006,2.02,1007,3.207,1008,2.179,1009,2.179,1010,3.441,1011,3.441,1012,2.613,1015,2.467,1016,2.467,1018,1.889,1020,2.02,1022,2.179,1023,2.02,1024,2.643,1025,5.32,1026,4.484,1027,5.32,1028,4.484,1029,4.484,1030,4.484,1031,3.047,1032,4.484,1033,4.484,1034,3.047,1035,4.484,1036,3.047,1037,3.047,1038,3.047,1039,4.484,1040,3.047,1041,3.047,1042,5.867,1043,3.047,1044,3.047,1045,3.047,1046,5.32,1047,3.047,1048,3.047,1049,3.047]],["title/guards/AuthorizationGuard.html",[808,2.798,828,2.28]],["body/guards/AuthorizationGuard.html",[3,0.199,4,0.177,5,0.155,9,0.245,14,0.3,15,0.015,16,0.627,18,0.199,19,0.012,20,0.012,31,0.72,34,1.474,47,1.085,49,0.794,55,0.873,58,3.089,59,0.757,61,0.833,62,0.613,63,0.833,79,0.794,82,0.794,110,1.813,115,0.528,116,1.864,122,0.418,127,0.885,141,1.554,178,0.94,255,2.381,262,2.576,289,1.217,364,2.954,647,2.954,700,1.791,805,3.545,808,4.691,814,5.292,828,3.822,831,4.691,832,4.9,836,4.35,837,5.774,838,3.822,840,3.609,841,1.179,843,1.864,929,3.858,1050,4.637,1051,5.774,1052,5.345,1053,5.345,1054,6.559,1055,6.559,1056,7.594,1057,5.345,1058,4.691,1059,6.559,1060,4.637,1061,4.637,1062,5.345,1063,5.345,1064,4.171]],["title/interceptors/AuthorizationInterceptor.html",[720,2.595,1065,3.394]],["body/interceptors/AuthorizationInterceptor.html",[3,0.194,4,0.173,5,0.151,9,0.239,14,0.296,15,0.015,16,0.648,18,0.194,19,0.012,20,0.012,31,0.573,34,1.439,49,0.889,55,0.694,59,0.746,61,0.821,62,0.604,63,0.821,67,3.37,79,0.783,82,0.783,94,1.529,115,0.516,119,1.099,122,0.408,127,1.07,145,3.307,279,2.246,289,1.599,377,4.622,483,3.766,548,3.661,720,4.286,734,2.463,797,4.527,833,4.072,841,1.161,863,4.395,887,3.032,929,3.826,931,3.957,962,3.661,963,3.826,989,4.527,992,4.527,996,3.202,1058,4.622,1060,4.527,1066,4.527,1067,6.463,1068,5.218,1069,6.463,1070,7.541,1071,7.541,1072,5.218,1073,6.463,1074,7.021,1075,7.021,1076,6.463,1077,6.463,1078,6.463,1079,6.463,1080,6.463,1081,6.463,1082,5.218,1083,5.218,1084,5.218,1085,5.218,1086,5.218,1087,5.218,1088,5.218,1089,5.218]],["title/injectables/AuthorizationService.html",[841,0.703,929,2.04]],["body/injectables/AuthorizationService.html",[3,0.135,4,0.12,5,0.105,9,0.166,10,0.502,13,0.911,14,0.333,15,0.015,16,0.561,18,0.135,19,0.009,20,0.009,31,0.697,47,1.282,49,0.615,55,0.483,59,0.863,61,0.881,62,0.649,63,0.881,79,0.969,80,1.442,81,1.25,82,0.916,83,0.74,86,0.735,98,1.402,108,2.005,110,1.887,112,1.054,115,0.358,119,0.764,122,0.284,127,1.052,134,1.431,141,1.618,163,2.308,178,0.97,255,2.519,256,2.768,261,2.508,262,2.843,264,2.093,268,3,272,3.15,279,1.561,289,1.622,332,2.796,364,2.288,381,3.636,527,2.65,630,2.518,647,3.37,700,1.215,747,4.3,748,2.113,749,2.113,750,2.13,817,4.96,836,3.37,840,2.796,841,0.913,843,1.265,846,1.372,848,3.86,849,2.83,851,4.409,852,5.515,854,4.409,855,5.515,857,3.146,859,4.409,861,4.409,862,5.016,863,4.734,864,4.409,865,6.306,866,4.578,867,4.409,868,4.409,869,2.518,871,2.796,872,3.965,873,3.94,877,4.409,878,4.409,880,6.018,881,4.409,885,4.409,886,2.83,887,2.314,889,3.146,890,3.146,896,3.146,897,4.409,898,3.146,899,3.146,900,4.409,901,4.409,902,4.409,903,3.146,904,3.146,905,4.409,906,3.146,907,3.146,929,2.65,1051,4.578,1058,4.961,1061,5.089,1090,3.146,1091,6.357,1092,5.866,1093,5.082,1094,5.082,1095,5.082,1096,5.082,1097,3.627,1098,3.627,1099,5.082,1100,3.627,1101,6.018,1102,4.409,1103,4.409,1104,5.082,1105,3.627,1106,5.082,1107,3.627,1108,3.627,1109,5.082,1110,3.627,1111,3.627,1112,3.627,1113,3.627,1114,3.627,1115,3.627,1116,3.627,1117,3.627,1118,3.627,1119,3.627,1120,3.627]],["title/injectables/ErrorHandlingService.html",[841,0.703,928,1.762]],["body/injectables/ErrorHandlingService.html",[3,0.153,4,0.136,5,0.119,9,0.188,13,0.875,14,0.307,15,0.015,16,0.553,18,0.153,19,0.01,20,0.01,31,0.767,47,1.192,49,0.67,52,2.279,59,0.773,61,0.851,62,0.674,63,0.851,79,0.907,82,0.929,83,0.598,86,1.677,90,2.382,92,2.883,93,2.883,96,2.184,100,2.674,101,3.084,102,3.354,107,1.036,112,0.995,115,0.406,119,0.865,122,0.321,127,1.158,130,2.382,131,1.767,132,2.382,133,3.01,134,2.184,135,2.382,136,1.554,178,0.851,261,1.62,267,3.162,268,2.612,289,1.26,364,3.017,369,5.813,379,3.046,616,2.937,700,1.376,734,1.938,750,2.01,799,4.802,831,3.959,840,3.046,841,0.995,843,1.432,846,1.554,887,3.052,928,2.492,931,3.862,938,3.046,961,2.886,975,4.09,976,3.648,996,2.035,1121,6.068,1122,3.563,1123,3.671,1124,7.364,1125,5.535,1126,5.535,1127,5.535,1128,5.535,1129,5.535,1130,4.107,1131,5.813,1132,5.535,1133,4.107,1134,5.813,1135,4.802,1136,4.107,1137,4.792,1138,6.7,1139,5.535,1140,4.319,1141,5.535,1142,5.535,1143,4.107,1144,4.107,1145,5.535,1146,4.107,1147,4.107,1148,4.107,1149,4.107,1150,4.107,1151,4.107,1152,4.107,1153,5.535,1154,4.107,1155,4.319,1156,5.535,1157,4.107,1158,7.205,1159,4.107,1160,4.107,1161,4.107,1162,4.107,1163,4.107,1164,3.563,1165,4.107,1166,4.107,1167,4.107,1168,4.107,1169,3.563,1170,4.107,1171,4.107,1172,4.107,1173,4.107,1174,4.107,1175,4.107,1176,4.107,1177,4.107,1178,4.107]],["title/components/FooterComponent.html",[21,0.326,189,0.926]],["body/components/FooterComponent.html",[3,0.167,4,0.148,5,0.129,9,0.205,10,0.579,14,0.205,15,0.015,16,0.395,18,0.167,19,0.011,20,0.011,21,0.599,22,1.018,23,1.44,24,1.187,25,1.44,26,1.233,27,1.233,31,0.491,33,1.465,35,1.44,37,0.942,38,2.115,39,2.195,40,1.381,41,1.745,43,1.616,49,0.709,55,0.869,59,0.753,62,0.611,70,1.962,79,0.709,80,1.606,81,1.44,82,0.709,83,0.951,107,0.837,112,1.052,115,0.442,122,0.35,158,1.924,164,1.142,165,1.616,166,1.496,167,1.018,168,1.912,169,1.233,170,1.802,171,1.058,172,2.105,173,1.018,174,1.912,175,1.058,176,1.518,177,1.018,178,0.914,179,1.058,180,1.018,181,1.616,182,1.018,183,1.233,184,1.058,185,1.058,186,1.233,187,1.058,188,1.233,189,1.64,190,1.233,191,1.058,192,1.233,193,1.018,194,1.233,195,1.018,196,1.233,197,1.058,198,1.058,199,1.018,200,1.233,201,1.058,202,1.616,203,1.018,204,1.233,205,1.058,206,1.142,207,1.058,208,1.912,209,1.058,210,1.058,211,1.233,212,1.058,213,1.018,214,1.486,215,1.058,216,1.018,217,1.233,218,1.099,219,1.018,220,1.058,221,1.018,222,1.018,223,1.233,224,1.058,225,1.142,226,1.058,227,1.018,228,1.233,229,1.018,230,1.187,231,1.233,396,1.44,407,1.962,699,3.413,815,3.884,1179,3.879,1180,4.188,1181,6.93,1182,6.531,1183,5.857,1184,7.194,1185,6.93,1186,5.857,1187,4.471,1188,5.857,1189,5.857,1190,7.194,1191,5.857,1192,4.471,1193,4.471,1194,4.471,1195,5.857,1196,4.471,1197,5.857,1198,5.857]],["title/components/HeaderComponent.html",[21,0.326,191,0.926]],["body/components/HeaderComponent.html",[3,0.149,4,0.132,5,0.116,9,0.183,10,0.537,14,0.249,15,0.015,16,0.612,18,0.149,19,0.01,20,0.01,21,0.577,22,0.91,23,1.337,24,1.061,25,1.288,26,1.103,27,1.103,31,0.439,33,1.521,34,1.499,35,1.989,37,0.842,38,2.103,39,2.181,40,1.452,41,1.619,43,1.499,47,1.097,49,0.658,54,2.22,55,0.723,58,2.885,59,0.764,61,0.508,62,0.62,63,0.508,68,2.448,69,3.01,70,1.821,79,0.748,80,1.704,81,1.337,82,0.658,83,0.899,107,0.748,108,1.828,115,0.395,116,1.394,122,0.313,164,1.022,165,1.499,166,1.389,167,0.91,168,1.828,169,1.103,170,1.703,171,0.946,172,2.053,173,0.91,174,1.828,175,0.946,176,1.63,177,0.91,178,0.978,179,0.946,180,0.91,181,1.499,182,0.91,183,1.103,184,0.946,185,0.946,186,1.103,187,0.946,188,1.103,189,0.946,190,1.103,191,1.568,192,1.103,193,0.91,194,1.103,195,0.91,196,1.103,197,0.946,198,1.461,199,0.91,200,1.103,201,0.946,202,1.499,203,0.91,204,1.103,205,0.946,206,1.578,207,0.946,208,1.828,209,0.946,210,0.946,211,1.103,212,0.946,213,0.91,214,1.449,215,0.946,216,0.91,217,1.103,218,0.983,219,0.91,220,0.946,221,1.406,222,0.91,223,1.103,224,0.946,225,1.022,226,0.946,227,0.91,228,1.103,229,0.91,230,1.061,231,1.103,302,2.565,303,2.448,363,3.647,382,2.729,396,1.337,483,3.599,484,3.127,488,2.781,497,3.12,507,3.284,522,4.024,622,3.887,623,3.887,699,3.168,704,3.605,723,3.605,815,4.394,820,3.862,842,3.12,1064,3.12,1137,3.887,1180,3.887,1199,3.469,1200,6.627,1201,6.175,1202,5.436,1203,6.619,1204,3.998,1205,4.741,1206,5.436,1207,3.998,1208,3.998,1209,3.998,1210,3.998,1211,3.469,1212,3.469,1213,3.887,1214,4.716]],["title/components/HomeComponent.html",[21,0.326,193,0.891]],["body/components/HomeComponent.html",[3,0.17,4,0.151,5,0.132,15,0.015,16,0.404,18,0.17,19,0.011,20,0.011,21,0.603,22,1.04,23,1.46,24,1.213,26,1.26,27,1.26,31,0.501,33,1.472,37,0.962,38,2.118,39,2.197,40,1.389,43,1.638,62,0.617,69,2.343,70,1.99,72,3.939,115,0.451,122,0.358,164,1.167,165,1.638,166,1.517,167,1.04,168,1.928,169,1.26,170,1.82,171,1.081,172,2.114,173,1.04,174,1.928,175,1.081,176,1.531,177,1.04,178,0.96,179,1.081,180,1.04,181,1.638,182,1.04,183,1.26,184,1.081,185,1.081,186,1.26,187,1.081,188,1.26,189,1.081,190,1.26,191,1.081,192,1.26,193,1.591,194,1.26,195,1.04,196,1.26,197,1.081,198,1.081,199,1.04,200,1.26,201,1.081,202,1.638,203,1.04,204,1.26,205,1.081,206,1.167,207,1.081,208,1.928,209,1.081,210,1.081,211,1.26,212,1.081,213,1.04,214,1.522,215,1.081,216,1.04,217,1.26,218,1.123,219,1.04,220,1.081,221,1.04,222,1.04,223,1.26,224,1.081,225,1.686,226,1.081,227,1.04,228,1.26,229,1.04,230,1.213,231,1.26,363,3.268,507,3.679,548,3.097,699,3.461,704,4.634,815,4.634,820,3.461,980,2.803,1134,5.153,1180,4.248,1215,3.963,1216,5.939,1217,5.939,1218,5.153,1219,5.939,1220,5.939,1221,5.939,1222,5.939,1223,5.939,1224,5.939,1225,5.939,1226,5.939,1227,5.939,1228,5.939,1229,5.939,1230,5.939,1231,5.939,1232,5.939,1233,5.939,1234,5.939,1235,5.153,1236,5.939]],["title/interfaces/ImageDto.html",[0,1.039,1237,2.798]],["body/interfaces/ImageDto.html",[0,1.648,2,2.672,3,0.231,4,0.205,5,0.18,9,0.284,10,0.709,12,6.744,13,0.872,14,0.329,15,0.015,18,0.231,19,0.013,20,0.013,391,1.986,396,1.859,1237,5.129,1238,5.387]],["title/injectables/ImageService.html",[841,0.703,1239,3.053]],["body/injectables/ImageService.html",[3,0.143,4,0.127,5,0.216,9,0.176,10,0.522,13,0.85,14,0.347,15,0.015,16,0.651,18,0.143,19,0.01,20,0.01,31,0.714,40,0.988,47,1.292,49,0.789,55,0.703,59,0.814,61,0.827,62,0.609,63,0.827,73,1.663,76,1.841,79,0.892,82,0.876,83,0.558,86,1.07,88,1.769,94,1.25,107,0.717,112,0.949,115,0.379,119,0.808,122,0.3,127,1.13,137,2.097,178,0.896,214,1.028,264,2.175,289,1.482,382,2.681,391,1.934,396,1.895,481,5.648,489,2.754,630,2.617,695,4.582,700,1.284,734,1.809,750,1.918,841,0.949,843,1.337,846,1.45,848,3.497,869,2.617,887,3.015,915,3.078,916,4.036,922,3.583,923,2.11,924,3.583,925,3.325,926,3.073,927,3.325,928,2.932,931,3.384,938,2.906,939,4.294,940,4.113,941,3.078,942,3.794,943,3.078,944,3.078,945,3.078,948,3.274,949,2.906,959,3.274,961,2.754,962,3.561,963,2.754,964,3.758,965,2.851,966,3.325,967,2.754,975,3.561,976,2.234,977,1.999,978,1.999,979,2.234,980,1.809,981,2.11,982,2.11,983,1.999,984,2.11,985,2.11,990,2.906,996,2.617,998,2.376,999,2.11,1000,2.11,1001,1.999,1002,2.11,1004,2.906,1010,2.906,1011,2.906,1012,2.234,1015,2.11,1016,2.11,1018,2.376,1155,4.121,1237,4.321,1239,4.121,1240,3.326,1241,5.281,1242,8.107,1243,6.042,1244,5.281,1245,4.582,1246,5.281,1247,5.281,1248,3.834,1249,5.281,1250,3.834,1251,3.777,1252,5.281,1253,3.834,1254,5.281,1255,6.511,1256,3.834,1257,5.281,1258,5.281,1259,6.511,1260,5.281,1261,6.042,1262,4.121,1263,6.042,1264,3.834,1265,3.834,1266,3.834,1267,3.834,1268,3.834,1269,6.042,1270,3.834,1271,3.834,1272,3.834]],["title/directives/IsAuthorizedDirective.html",[167,0.891,227,0.891]],["body/directives/IsAuthorizedDirective.html",[3,0.186,4,0.165,5,0.144,9,0.228,10,0.621,13,0.725,14,0.315,15,0.015,16,0.638,18,0.186,19,0.012,20,0.012,34,1.733,35,2.215,36,2.602,37,1.051,38,1.605,47,1.303,49,0.761,53,2.973,54,2.419,55,0.836,59,0.876,61,0.633,62,0.466,63,0.633,69,2.848,79,0.874,80,1.775,81,1.545,82,0.761,83,1.051,98,1.733,107,1.175,108,1.992,115,0.621,119,1.051,122,0.39,144,2.054,167,1.43,178,0.798,226,1.18,227,1.43,364,2.829,379,3.457,838,3.661,840,3.457,929,4.022,1051,5.634,1101,5.45,1273,6.019,1274,4.327,1275,7.442,1276,5.967,1277,6.264,1278,4.493,1279,4.327,1280,6.591,1281,5.967,1282,6.264,1283,6.282,1284,4.987,1285,4.987,1286,4.987,1287,4.902,1288,5.967,1289,4.987,1290,4.987,1291,5.45,1292,4.987,1293,4.987,1294,4.327,1295,4.987,1296,4.987,1297,4.327,1298,4.987,1299,4.327]],["title/directives/IsUnAuthenticatedDirective.html",[167,0.891,229,0.891]],["body/directives/IsUnAuthenticatedDirective.html",[3,0.184,4,0.163,5,0.143,9,0.226,10,0.617,14,0.314,15,0.015,16,0.605,18,0.184,19,0.011,20,0.011,31,0.685,34,1.723,35,2.206,36,2.591,37,1.041,38,1.596,47,1.301,49,0.756,53,2.963,54,2.411,55,0.831,59,0.856,61,0.793,62,0.584,63,0.793,69,2.464,79,0.872,80,1.893,81,1.536,82,0.756,83,0.997,98,1.723,107,0.925,108,1.985,115,0.488,119,1.041,122,0.387,127,0.818,166,1.596,167,1.638,178,0.793,226,1.169,229,1.422,230,1.658,256,2.948,262,2.613,364,3.24,484,3.632,493,3.856,830,4.467,838,4.193,839,4.46,840,3.96,849,5.344,886,4.874,1273,5.915,1276,5.941,1277,5.419,1279,4.287,1280,6.576,1281,5.941,1282,6.243,1288,5.941,1291,5.419,1294,4.287,1297,4.287,1299,4.287,1300,4.287,1301,6.246,1302,6.246,1303,6.246,1304,4.941,1305,4.941,1306,6.246,1307,4.941,1308,4.287,1309,4.941,1310,4.941]],["title/interfaces/JWTokenDto.html",[0,1.039,1311,2.798]],["body/interfaces/JWTokenDto.html",[0,1.668,2,2.703,3,0.234,4,0.208,5,0.182,9,0.288,10,0.713,13,0.876,14,0.288,15,0.015,18,0.234,19,0.013,20,0.013,863,4.546,1311,5.163,1312,5.45]],["title/components/LoginComponent.html",[21,0.326,195,0.891]],["body/components/LoginComponent.html",[3,0.124,4,0.11,5,0.096,9,0.152,10,0.472,13,0.383,14,0.35,15,0.015,16,0.572,18,0.124,19,0.009,20,0.009,21,0.539,22,0.756,23,1.174,24,0.882,25,1.069,26,0.916,27,0.916,31,0.613,33,1.352,34,1.317,35,1.8,36,2.114,37,0.7,38,2.078,39,2.154,40,1.261,41,1.422,43,1.317,45,2.517,46,2.517,47,1.215,48,2.405,49,0.578,51,2.751,52,2.301,53,2.516,54,2.047,55,0.442,58,2.739,59,0.858,61,0.71,62,0.63,63,0.71,68,2.15,70,1.599,75,1.622,76,1.664,79,0.841,80,1.847,81,1.502,82,0.74,83,1.053,85,1.599,86,1.522,87,2.15,88,1.599,89,3.199,90,2.054,92,2.054,93,2.054,94,1.13,95,2.15,96,1.883,97,2.15,98,1.317,99,2.054,100,1.664,101,2.301,102,2.054,103,2.15,106,1.567,107,1.211,108,1.685,110,1.561,112,0.858,113,2.301,115,0.328,116,1.158,117,2.15,118,1.495,119,0.7,122,0.26,123,1.495,124,1.495,125,1.495,126,1.495,127,0.925,128,1.495,129,1.495,130,1.429,131,1.429,132,1.429,133,1.429,134,1.31,135,1.429,136,1.256,137,1.069,138,1.495,139,1.495,141,0.727,143,1.495,144,1.368,145,1.429,148,1.495,161,2.253,162,2.627,163,1.733,164,0.848,165,1.317,166,1.22,167,0.756,168,1.685,169,0.916,170,1.542,171,0.786,172,1.96,173,0.756,174,1.685,175,0.786,176,1.338,177,0.756,178,0.919,179,0.786,180,0.756,181,1.317,182,0.756,183,0.916,184,0.786,185,0.786,186,0.916,187,0.786,188,0.916,189,0.786,190,0.916,191,0.786,192,0.916,193,0.756,194,0.916,195,1.391,196,0.916,197,0.786,198,1.899,199,0.756,200,0.916,201,0.786,202,1.317,203,0.756,204,0.916,205,0.786,206,1.428,207,0.786,208,1.685,209,0.786,210,0.786,211,0.916,212,0.786,213,0.756,214,1.383,215,0.786,216,0.756,217,0.916,218,0.817,219,0.756,220,0.786,221,0.756,222,0.756,223,0.916,224,0.786,225,0.848,226,0.786,227,0.756,228,0.916,229,0.756,230,0.882,231,0.916,279,1.429,513,3.706,582,2.202,815,3.166,839,2.959,949,2.627,1064,2.591,1123,3.166,1213,3.414,1262,3.725,1313,2.881,1314,5.588,1315,4.773,1316,4.656,1317,3.321,1318,4.819,1319,3.321,1320,3.321,1321,3.321,1322,4.141,1323,3.321,1324,4.773,1325,2.516,1326,2.883,1327,3.321,1328,3.321,1329,3.321,1330,3.321,1331,3.321,1332,3.321,1333,3.321,1334,3.321,1335,2.591,1336,4.773,1337,3.321,1338,3.321,1339,3.321,1340,3.321,1341,3.321,1342,4.773,1343,4.773,1344,3.321,1345,3.321]],["title/interfaces/LoginDto.html",[0,1.039,1316,2.425]],["body/interfaces/LoginDto.html",[0,1.648,2,2.672,3,0.231,4,0.205,5,0.18,9,0.284,10,0.709,13,0.923,14,0.329,15,0.015,18,0.231,19,0.013,20,0.013,1316,4.445,1325,3.201,1326,3.668,1346,5.387]],["title/components/LoginFormComponent.html",[21,0.326,197,0.926]],["body/components/LoginFormComponent.html",[3,0.133,4,0.118,5,0.103,9,0.163,10,0.496,13,0.835,14,0.331,15,0.015,16,0.513,18,0.133,19,0.009,20,0.009,21,0.553,22,0.811,23,1.234,24,0.946,25,1.147,26,0.983,27,0.983,31,0.551,33,1.38,37,0.751,38,2.088,39,2.165,40,1.291,41,1.495,43,1.384,49,0.608,55,0.474,59,0.818,61,0.637,62,0.663,63,0.637,73,1.282,79,0.876,80,1.696,81,1.551,82,0.835,83,0.968,85,1.681,86,1.466,94,1.632,107,0.667,110,1.611,112,0.64,115,0.352,122,0.279,127,0.831,141,1.382,153,3.773,156,2.924,163,2.29,164,0.91,165,1.384,166,1.282,167,0.811,168,1.74,169,0.983,170,1.603,171,0.843,172,1.996,173,0.811,174,1.74,175,0.843,176,1.382,177,0.811,178,0.9,179,0.843,180,0.811,181,1.384,182,0.811,183,0.983,184,0.843,185,0.843,186,0.983,187,0.843,188,0.983,189,0.843,190,0.983,191,0.843,192,0.983,193,0.811,194,0.983,195,0.811,196,0.983,197,1.492,198,1.801,199,0.811,200,0.983,201,0.843,202,1.384,203,0.811,204,0.983,205,0.843,206,0.91,207,0.843,208,1.74,209,0.843,210,0.843,211,0.983,212,0.843,213,0.811,214,1.409,215,0.843,216,0.811,217,0.983,218,0.876,219,0.811,220,0.843,221,0.811,222,0.811,223,0.983,224,0.843,225,2.005,226,0.843,227,0.811,228,0.983,229,0.811,230,0.946,231,0.983,233,1.858,234,2.924,235,3.197,236,2.762,240,3.386,241,2.924,242,3.675,243,3.471,244,2.762,245,3.386,246,1.961,247,3.125,249,2.762,250,3.03,252,2.924,253,3.659,255,1.822,256,2.368,257,3.415,258,3.471,259,2.617,260,1.961,261,1.98,262,2.109,263,2.617,264,2.067,266,2.762,267,2.368,268,2.368,270,2.762,271,2.762,272,2.487,273,2.742,274,3.091,275,2.548,276,2.617,277,1.765,278,1.406,279,1.533,281,1.961,282,2.762,285,2.363,287,3.386,289,1.143,294,1.961,297,1.961,298,1.961,301,3.289,303,2.26,373,3.091,404,3.589,409,3.589,761,5.646,1316,4.121,1325,3.03,1326,3.472,1335,2.78,1347,6.278,1348,5.81,1349,3.091,1350,3.563,1351,3.563,1352,2.78,1353,2.78,1354,3.563,1355,3.563,1356,3.563,1357,3.563,1358,3.563,1359,3.563,1360,7.236,1361,3.916,1362,4.354]],["title/injectables/LoginService.html",[841,0.703,1318,2.798]],["body/injectables/LoginService.html",[3,0.159,4,0.142,5,0.124,8,2.233,9,0.196,10,0.562,13,0.494,14,0.351,15,0.015,16,0.693,18,0.159,19,0.01,20,0.01,31,0.624,47,1.323,49,0.689,55,0.757,59,0.818,61,0.723,62,0.532,63,0.723,73,1.741,74,2.245,75,1.511,76,1.984,79,0.825,82,0.774,83,0.828,86,0.867,96,2.245,107,1.065,112,0.769,115,0.423,119,0.902,122,0.335,127,0.709,137,1.833,141,0.938,178,0.926,198,1.844,238,3.518,267,2.686,289,1.296,397,2.02,484,3.512,489,2.968,700,1.434,734,2.02,747,4.613,748,2.495,749,2.495,750,2.321,817,4.441,841,1.023,843,1.493,846,1.62,848,3.168,862,4.518,863,3.97,869,2.121,871,3.132,887,2.877,922,3.749,923,2.356,924,3.749,925,3.518,926,3.215,927,3.518,928,3.068,929,3.881,931,3.376,949,3.132,961,2.968,962,3.699,963,2.968,964,3.903,965,3.017,966,3.518,967,2.968,975,3.334,977,2.233,978,2.233,980,2.02,981,2.356,982,2.356,983,2.233,984,2.356,985,2.356,988,3.341,990,3.132,996,2.121,999,2.356,1000,2.356,1001,2.233,1002,2.356,1004,2.356,1010,2.356,1011,2.356,1012,2.495,1015,2.356,1016,2.356,1123,3.774,1137,4.07,1164,4.938,1262,4.441,1308,3.714,1311,3.062,1316,4.685,1318,4.07,1322,4.938,1325,2.344,1326,2.686,1335,3.341,1363,3.714,1364,6.393,1365,6.393,1366,5.691,1367,4.281,1368,4.281,1369,4.281,1370,3.062,1371,4.281,1372,3.714,1373,5.691,1374,4.281,1375,4.281,1376,5.691,1377,4.281,1378,4.281,1379,4.281,1380,4.281,1381,4.281,1382,4.281,1383,4.281,1384,4.281,1385,4.281]],["title/injectables/LogoutService.html",[841,0.703,1205,2.595]],["body/injectables/LogoutService.html",[3,0.2,4,0.178,5,0.156,9,0.246,14,0.246,15,0.015,16,0.672,18,0.2,19,0.012,20,0.012,31,0.59,47,1.227,49,0.797,55,0.876,58,3.053,59,0.759,61,0.683,62,0.503,63,0.683,79,0.797,80,1.749,81,1.618,82,0.797,83,0.958,96,2.597,99,2.832,115,0.531,116,1.874,122,0.421,178,0.942,382,2.71,484,3.699,538,2.71,700,1.801,723,4.364,747,4.858,748,3.132,749,3.132,750,2.583,839,4.079,841,1.183,843,1.874,845,4.194,846,2.034,862,4.364,863,3.835,872,5.136,929,4.087,988,4.194,1023,4.364,1058,4.707,1123,4.364,1137,4.707,1203,6.714,1205,4.364,1372,4.663,1386,4.663,1387,4.663,1388,5.375,1389,5.375,1390,5.375,1391,5.375,1392,5.375]],["title/classes/MatchingValidator.html",[122,0.306,1393,2.595]],["body/classes/MatchingValidator.html",[3,0.195,4,0.173,5,0.152,9,0.24,13,0.908,14,0.24,15,0.015,16,0.462,18,0.195,19,0.012,20,0.014,31,0.711,49,0.784,59,0.604,61,0.665,62,0.706,63,0.665,79,0.784,82,0.914,108,2.026,122,0.41,127,1.072,141,1.419,225,1.877,255,2.351,257,3.629,259,3.377,273,3.318,278,2.066,289,1.474,336,4.042,414,4.232,1103,5.618,1140,5.053,1287,5.053,1393,4.871,1394,4.085,1395,5.618,1396,3.744,1397,6.476,1398,5.253,1399,6.1,1400,6.476,1401,7.346,1402,5.235,1403,5.053,1404,5.732,1405,4.631,1406,6.476,1407,5.732,1408,7.346,1409,5.053,1410,5.053,1411,5.235,1412,6.476,1413,5.235,1414,5.235,1415,5.235,1416,4.542,1417,5.235,1418,5.235,1419,5.235]],["title/injectables/NavigationService.html",[522,2.153,841,0.703]],["body/injectables/NavigationService.html",[3,0.119,4,0.106,5,0.093,9,0.147,14,0.329,15,0.015,16,0.411,18,0.119,19,0.009,20,0.009,31,0.787,33,1.542,47,0.531,49,0.564,55,0.619,58,2.627,59,0.882,61,0.911,62,0.671,63,0.911,68,3.609,69,3.036,70,2.627,79,0.971,80,2.008,81,1.971,82,0.971,83,1.166,94,1.821,115,0.317,116,1.118,122,0.251,127,1.165,146,3.503,176,1.717,178,1.011,198,1.101,214,1.514,221,1.248,363,3.015,382,1.917,391,1.966,396,1.985,421,3.664,488,2.998,507,3.299,520,3.328,521,4.038,522,2.561,549,4.762,557,3.632,559,4.038,619,3.632,629,6.105,638,3.328,639,4.038,657,3.632,659,4.038,699,2.712,700,1.074,750,1.69,820,3.193,841,0.836,843,1.118,845,2.502,846,1.213,1123,3.086,1131,6.105,1387,2.782,1420,2.782,1421,4.654,1422,3.632,1423,3.632,1424,6.011,1425,6.011,1426,6.011,1427,5.215,1428,4.654,1429,4.654,1430,6.011,1431,6.011,1432,3.206,1433,3.206,1434,3.206,1435,4.038,1436,3.206,1437,4.038,1438,3.206,1439,5.196,1440,3.206,1441,3.206,1442,3.206,1443,3.206,1444,3.206,1445,3.206,1446,4.654,1447,3.206,1448,4.654,1449,3.206,1450,3.206,1451,3.206,1452,6.011,1453,6.384]],["title/components/NotFoundComponent.html",[21,0.326,199,0.891]],["body/components/NotFoundComponent.html",[3,0.179,4,0.159,5,0.139,15,0.015,16,0.425,18,0.179,19,0.011,20,0.011,21,0.613,22,1.096,23,1.51,24,1.278,26,1.328,27,1.328,31,0.528,33,1.49,37,1.014,38,2.123,39,2.203,40,1.409,43,1.694,62,0.633,70,2.522,115,0.476,122,0.377,164,1.23,165,1.694,166,1.569,167,1.096,168,1.966,169,1.328,170,1.866,171,1.139,172,2.137,173,1.096,174,1.966,175,1.139,176,1.561,177,1.096,178,0.935,179,1.139,180,1.096,181,1.694,182,1.096,183,1.328,184,1.139,185,1.139,186,1.328,187,1.139,188,1.328,189,1.139,190,1.328,191,1.139,192,1.328,193,1.096,194,1.328,195,1.096,196,1.328,197,1.139,198,1.139,199,1.623,200,1.328,201,1.139,202,1.694,203,1.096,204,1.328,205,1.139,206,1.23,207,1.139,208,1.966,209,1.139,210,1.139,211,1.328,212,1.139,213,1.096,214,1.509,215,1.139,216,1.096,217,1.328,218,1.184,219,1.096,220,1.139,221,1.096,222,1.096,223,1.328,224,1.139,225,1.23,226,1.139,227,1.096,228,1.328,229,1.096,230,1.278,231,1.328,616,5.097,699,3.58,757,3.443,1169,6.183,1180,4.393,1454,4.176,1455,4.176,1456,6.143,1457,6.143,1458,6.143,1459,6.143]],["title/interfaces/PaginationMetaDataDto.html",[0,1.039,986,2.153]],["body/interfaces/PaginationMetaDataDto.html",[0,1.611,2,2.612,3,0.226,4,0.201,5,0.176,9,0.278,10,0.699,14,0.354,15,0.015,18,0.226,19,0.013,20,0.013,341,4.024,345,4.024,348,4.024,349,4.024,396,2.02,986,3.894,1460,5.265]],["title/interfaces/ProfileDto.html",[0,1.039,1461,2.28]],["body/interfaces/ProfileDto.html",[0,1.611,2,2.612,3,0.226,4,0.201,5,0.176,9,0.278,10,0.699,11,3.824,13,0.864,14,0.354,15,0.015,18,0.226,19,0.013,20,0.013,391,1.972,396,1.998,488,3.475,1251,5.519,1461,4.124,1462,5.265]],["title/injectables/ProfileService.html",[841,0.703,1463,2.798]],["body/injectables/ProfileService.html",[3,0.128,4,0.113,5,0.099,9,0.157,10,0.483,13,0.827,14,0.346,15,0.015,16,0.633,18,0.128,19,0.009,20,0.009,31,0.748,33,0.952,40,0.914,47,1.271,49,0.751,55,0.65,59,0.827,61,0.865,62,0.637,63,0.865,73,1.831,74,1.928,75,1.297,76,2.376,79,0.915,82,0.849,83,0.499,86,1.256,88,1.637,94,1.156,98,1.348,100,1.196,107,0.642,112,0.617,115,0.339,119,0.723,122,0.269,127,1.128,137,2.308,178,0.89,214,1.327,221,1.825,289,1.551,362,2.689,391,1.89,396,1.911,488,2.201,489,2.548,538,1.413,630,2.421,700,1.15,734,1.619,750,1.774,820,2.848,822,6.327,841,0.878,843,1.196,846,1.298,848,3.745,869,3.073,871,2.689,887,3.129,915,2.848,916,4.223,922,3.413,923,1.888,924,3.413,925,3.132,926,2.927,927,3.132,928,2.793,931,3.073,938,2.689,939,4.31,940,3.97,941,2.848,942,3.614,943,2.848,944,2.848,945,2.848,948,3.029,949,2.689,959,3.844,961,2.548,962,3.737,963,2.548,964,3.607,965,2.686,966,3.132,967,2.548,970,2.548,972,3.241,973,2.548,975,3.803,976,2,977,1.789,978,1.789,979,2,980,1.619,981,1.888,982,1.888,983,1.789,984,1.888,985,1.888,990,2.689,996,3.073,998,3.528,999,3.413,1000,3.132,1001,2.968,1002,3.132,1003,2.275,1004,3.413,1005,2.275,1006,2.275,1010,3.413,1011,3.413,1012,3.317,1015,2.689,1016,2.689,1020,2.275,1461,4.085,1463,3.495,1464,2.977,1465,5.691,1466,4.887,1467,4.887,1468,4.887,1469,4.887,1470,4.24,1471,4.887,1472,4.887,1473,3.431,1474,6.202,1475,4.887,1476,3.431,1477,4.887,1478,3.431,1479,6.202,1480,4.887,1481,3.431,1482,4.887,1483,3.431,1484,4.887,1485,6.202,1486,3.431,1487,4.24,1488,2.678,1489,3.431,1490,4.887,1491,3.431,1492,3.431,1493,3.431,1494,3.431,1495,3.431,1496,3.431]],["title/components/RegisterComponent.html",[21,0.326,203,0.891]],["body/components/RegisterComponent.html",[3,0.122,4,0.108,5,0.095,8,3.499,9,0.15,10,0.467,13,0.378,14,0.349,15,0.015,16,0.637,18,0.122,19,0.009,20,0.009,21,0.536,22,0.747,23,1.163,24,0.871,25,1.056,26,0.905,27,0.905,31,0.609,33,1.347,34,1.305,35,1.787,36,2.1,37,0.691,38,2.077,39,2.152,40,1.325,41,1.41,43,1.305,45,2.499,46,2.499,47,1.212,48,2.388,49,0.573,51,2.736,52,2.286,53,2.502,54,2.035,55,0.629,58,1.294,59,0.856,61,0.705,62,0.628,63,0.705,73,1.552,74,1.867,75,1.613,76,1.65,77,2.467,79,0.858,80,1.86,81,1.65,82,0.813,83,1.079,85,1.585,86,1.518,87,2.131,88,1.585,89,3.189,90,2.036,92,2.036,93,2.036,94,1.12,95,2.131,96,1.867,97,2.131,98,1.305,99,2.036,100,1.65,101,2.286,102,2.036,103,2.131,106,1.548,107,1.205,108,1.676,110,1.552,112,1.092,113,2.286,115,0.467,116,1.144,117,2.131,118,1.477,119,0.691,122,0.257,123,1.477,124,1.477,125,1.477,126,1.477,127,0.918,128,1.477,129,1.477,130,1.412,131,1.412,132,1.412,133,1.412,134,1.294,135,1.412,136,1.241,137,1.056,138,1.477,139,1.477,141,0.719,143,1.477,144,1.351,145,1.412,148,1.477,164,0.838,165,1.305,166,1.209,167,0.747,168,1.676,169,0.905,170,1.531,171,0.776,172,1.953,173,0.747,174,1.676,175,0.776,176,1.331,177,0.747,178,0.942,179,0.776,180,0.747,181,1.305,182,0.747,183,0.905,184,0.776,185,0.776,186,0.905,187,0.776,188,0.905,189,0.776,190,0.905,191,0.776,192,0.905,193,0.747,194,0.905,195,0.747,196,0.905,197,0.776,198,1.313,199,0.747,200,0.905,201,0.776,202,1.305,203,1.383,204,0.905,205,0.776,206,2.016,207,0.776,208,1.676,209,0.776,210,0.776,211,0.905,212,0.776,213,0.747,214,1.379,215,0.776,216,0.747,217,0.905,218,0.807,219,0.747,220,0.776,221,0.747,222,0.747,223,0.905,224,0.776,225,0.838,226,0.776,227,0.747,228,0.905,229,0.747,230,0.871,231,0.905,264,1.949,391,1.209,407,2.035,482,1.71,494,2.175,513,3.68,522,1.805,579,2.346,582,2.175,591,2.346,759,5.237,887,1.294,1213,3.384,1325,1.949,1326,2.233,1370,2.346,1497,2.846,1498,5.55,1499,4.731,1500,3.28,1501,4.799,1502,3.28,1503,3.28,1504,3.28,1505,3.28,1506,3.28,1507,4.731,1508,4.471,1509,3.28,1510,4.105,1511,3.28,1512,3.28,1513,3.28,1514,3.28,1515,3.692,1516,3.28,1517,2.56,1518,3.28,1519,4.731,1520,3.28,1521,3.28,1522,3.28,1523,4.731,1524,4.731]],["title/interfaces/RegisterDto.html",[0,1.039,1508,2.425]],["body/interfaces/RegisterDto.html",[0,1.63,2,2.642,3,0.229,4,0.203,5,0.178,9,0.281,10,0.704,13,0.939,14,0.345,15,0.015,18,0.229,19,0.013,20,0.013,1325,3.19,1326,3.655,1508,4.416,1525,5.326,1526,5.136]],["title/components/RegisterFormComponent.html",[21,0.326,205,0.926]],["body/components/RegisterFormComponent.html",[3,0.123,4,0.11,5,0.096,9,0.152,10,0.471,13,0.819,14,0.325,15,0.015,16,0.571,18,0.123,19,0.009,20,0.009,21,0.539,22,0.755,23,1.173,24,0.88,25,1.068,26,0.915,27,0.915,31,0.523,32,2.363,33,1.352,37,0.699,38,2.078,39,2.154,40,1.26,41,1.421,43,1.315,47,0.549,49,0.578,55,0.441,59,0.801,61,0.606,62,0.649,63,0.606,73,1.218,79,0.86,80,1.656,81,1.501,82,0.816,83,0.941,85,1.598,86,1.439,94,1.594,107,0.62,110,1.56,112,0.596,115,0.328,122,0.26,127,0.789,141,1.338,150,3.36,151,3.232,153,4.032,154,3.36,156,3.558,161,2.25,162,2.624,163,2.579,164,0.847,165,1.315,166,1.218,167,0.755,168,1.684,169,0.915,170,1.54,171,0.785,172,1.959,173,0.755,174,1.684,175,0.785,176,1.338,177,0.755,178,0.882,179,0.785,180,0.755,181,1.315,182,0.755,183,0.915,184,0.785,185,0.785,186,0.915,187,0.785,188,0.915,189,0.785,190,0.915,191,0.785,192,0.915,193,0.755,194,0.915,195,0.755,196,0.915,197,0.785,198,0.785,199,0.755,200,0.915,201,0.785,202,1.315,203,0.755,204,0.915,205,1.445,206,1.815,207,0.785,208,1.684,209,0.785,210,0.785,211,0.915,212,0.785,213,0.755,214,1.383,215,0.785,216,0.755,217,0.915,218,0.815,219,0.755,220,0.785,221,0.755,222,0.755,223,0.915,224,0.785,225,1.986,226,0.785,227,0.755,228,0.915,229,0.755,230,0.88,231,0.915,233,1.729,234,2.779,235,3.073,236,2.624,240,3.254,241,2.779,242,3.558,243,3.36,244,2.624,245,3.254,246,1.825,247,3.026,248,2.779,249,2.624,250,2.912,251,2.372,252,2.779,253,3.56,255,1.731,256,2.25,257,3.352,258,3.36,259,2.487,260,1.825,261,1.881,262,2.027,263,2.487,264,1.964,265,2.877,266,2.624,267,2.25,268,2.25,270,2.624,271,2.624,272,2.363,273,2.635,276,2.487,277,2.363,278,1.308,279,1.427,281,1.825,282,3.073,285,2.199,287,3.254,289,1.086,294,1.825,297,1.825,298,1.825,299,3.558,300,3.558,301,3.184,302,2.882,303,2.147,304,3.558,404,5.079,409,2.372,414,2.624,765,5.542,1325,3.121,1326,3.628,1352,4.357,1353,3.721,1361,4.765,1393,2.199,1407,3.721,1508,3.785,1517,2.588,1526,3.162,1527,6.161,1528,5.584,1529,4.602,1530,3.316,1531,2.877,1532,2.877,1533,2.877,1534,3.316,1535,2.877,1536,2.877,1537,3.316,1538,2.877,1539,3.316,1540,3.316,1541,3.316,1542,3.316,1543,4.137,1544,4.137]],["title/injectables/RegisterService.html",[841,0.703,1501,2.798]],["body/injectables/RegisterService.html",[3,0.15,4,0.133,5,0.116,9,0.184,10,0.539,13,0.915,14,0.353,15,0.015,16,0.658,18,0.15,19,0.01,20,0.01,31,0.728,32,1.989,33,1.061,40,1.02,47,1.334,49,0.804,55,0.725,59,0.845,61,0.843,62,0.621,63,0.843,67,2.842,73,1.829,74,2.151,75,1.447,76,1.901,78,3,79,0.902,82,0.841,83,0.793,86,0.813,88,2.224,94,1.571,107,1.02,112,1.247,115,0.397,119,0.846,122,0.314,127,1.024,137,1.755,178,0.909,206,1.997,289,0.914,489,2.842,630,2.701,700,1.345,734,1.895,747,2.489,748,2.34,749,2.34,750,2.247,841,0.98,843,1.4,846,1.519,848,3.067,869,1.989,887,2.824,915,3.176,922,3.653,923,2.209,924,3.653,925,3.406,926,3.133,927,3.406,928,2.989,931,3.289,934,3.379,938,3.653,939,4.555,940,4.525,941,3.868,942,4.341,943,3.868,944,3.868,945,3.868,961,2.842,962,3.619,963,2.842,964,3.819,965,2.921,966,3.406,967,2.842,975,3.227,977,2.094,978,2.094,980,1.895,981,2.209,982,2.209,983,2.094,984,2.209,985,2.209,990,3,996,1.989,999,2.209,1000,2.209,1001,2.094,1002,2.209,1004,2.209,1010,2.209,1011,2.209,1015,2.209,1016,2.209,1018,2.489,1501,3.898,1508,4.437,1510,4.729,1517,3.133,1538,4.729,1545,3.483,1546,5.451,1547,6.189,1548,5.369,1549,5.451,1550,5.451,1551,4.729,1552,5.451,1553,5.451,1554,4.015,1555,4.015,1556,5.451,1557,4.015,1558,4.729,1559,4.015,1560,4.015,1561,4.015,1562,4.015,1563,3.483,1564,4.015,1565,4.015]],["title/classes/SyllableValidator.html",[122,0.306,412,2.425]],["body/classes/SyllableValidator.html",[3,0.162,4,0.144,5,0.126,9,0.2,13,0.875,14,0.295,15,0.015,16,0.385,18,0.162,19,0.011,20,0.011,31,0.753,49,0.698,59,0.744,61,0.819,62,0.603,63,0.819,75,1.529,77,3.003,79,0.939,82,0.888,83,0.939,86,1.167,108,1.968,122,0.505,127,1.067,152,1.963,163,1.582,225,1.471,257,3.044,261,2.272,263,3.822,278,1.72,289,1.562,331,4.042,333,3.356,335,4.423,396,1.992,397,2.057,407,2.299,412,3.57,414,3.169,586,3.401,610,4.494,647,2.593,1001,3.822,1394,3.401,1396,3.117,1399,6.661,1403,4.494,1404,5.354,1409,5.354,1410,5.033,1416,3.781,1566,5.953,1567,5.759,1568,5.759,1569,7.329,1570,7.329,1571,6.45,1572,5.759,1573,5.759,1574,6.45,1575,5.759,1576,4.358,1577,6.861,1578,7.982,1579,5.759,1580,4.358,1581,7.813,1582,5.759,1583,4.358,1584,5.759,1585,7.329,1586,6.861,1587,5.953,1588,4.358,1589,4.358,1590,6.45,1591,4.358,1592,4.358,1593,4.358,1594,4.358,1595,4.358,1596,4.358,1597,4.358,1598,4.358,1599,4.358,1600,4.358,1601,4.358,1602,4.358,1603,4.358]],["title/guards/UnAuthenticatedGuard.html",[810,2.798,828,2.28]],["body/guards/UnAuthenticatedGuard.html",[3,0.202,4,0.179,5,0.157,9,0.248,14,0.248,15,0.015,16,0.631,18,0.202,19,0.012,20,0.012,31,0.595,34,1.496,47,1.095,49,0.801,55,0.88,58,3.098,59,0.763,61,0.689,62,0.507,63,0.689,79,0.801,82,0.801,110,1.825,115,0.536,116,1.891,122,0.424,141,1.564,178,0.944,262,2.593,364,2.98,483,3.856,484,3.509,647,2.98,700,1.817,804,4.388,805,3.596,810,4.733,814,5.547,820,3.856,828,3.856,830,5.547,831,4.733,832,4.102,833,4.232,836,4.388,837,5.164,838,3.856,839,4.102,840,3.641,841,1.189,842,4.232,843,1.891,844,4.705,1604,6.196,1605,4.705,1606,6.617,1607,6.617,1608,6.617,1609,5.423,1610,5.423,1611,6.617,1612,6.617,1613,5.423]],["title/components/UpdateAuthorComponent.html",[21,0.326,213,0.891]],["body/components/UpdateAuthorComponent.html",[3,0.102,4,0.091,5,0.079,9,0.126,10,0.41,11,3.118,13,0.317,14,0.346,15,0.015,16,0.556,18,0.102,19,0.008,20,0.008,21,0.498,22,0.625,23,1.02,24,0.729,25,0.884,26,0.757,27,0.757,30,2.142,31,0.656,33,1.562,34,1.144,35,1.61,36,1.891,37,0.578,38,2.049,39,2.122,40,1.259,41,1.236,42,4.337,43,1.144,44,3.598,45,2.251,46,2.251,47,1.232,48,2.152,49,0.502,51,2.509,52,2.295,53,2.295,54,1.867,55,0.552,56,2.142,57,3.462,58,2.578,59,0.852,61,0.76,62,0.676,63,0.76,65,3.254,68,1.868,69,1.636,70,1.39,73,1.06,74,1.636,75,1.327,76,1.446,77,2.163,79,0.909,80,1.845,81,1.654,82,0.85,83,1.074,85,1.39,86,1.509,87,1.868,88,1.39,89,3.029,90,1.785,92,1.785,93,1.785,94,1.319,95,1.868,96,1.636,97,1.868,98,1.537,99,1.785,100,1.446,101,2.295,102,1.785,103,1.868,105,2.381,106,1.295,107,1.313,108,1.856,110,1.793,111,2.381,112,0.745,113,2.059,114,2.381,115,0.41,116,0.957,117,2.251,118,1.236,119,0.578,120,1.82,121,1.599,122,0.215,123,1.236,124,1.236,125,1.236,126,1.236,127,0.99,128,1.236,129,1.236,130,1.181,131,1.181,132,1.181,133,1.181,134,1.083,135,1.181,136,1.038,137,1.336,138,1.868,139,1.868,141,1.378,143,1.868,144,1.708,145,1.785,146,1.599,148,1.868,150,3.066,151,2.398,153,3.508,154,3.066,155,1.868,156,2.417,157,2.75,158,1.785,159,1.868,160,1.785,161,1.957,162,2.282,163,1.506,164,0.701,165,1.144,166,1.06,167,0.625,168,1.537,169,0.757,170,1.379,171,0.649,172,1.856,173,0.625,174,1.537,175,0.649,176,1.221,177,0.625,178,0.76,179,0.649,180,0.625,181,1.144,182,0.625,183,0.757,184,0.649,185,0.649,186,0.757,187,0.649,188,0.757,189,0.649,190,0.757,191,0.649,192,0.757,193,0.625,194,0.757,195,0.625,196,0.757,197,0.649,198,0.649,199,0.625,200,0.757,201,0.649,202,1.144,203,0.625,204,0.757,205,0.649,206,0.701,207,0.649,208,1.537,209,0.649,210,0.649,211,0.757,212,0.649,213,1.269,214,1.541,215,0.649,216,0.625,217,0.757,218,0.675,219,0.625,220,0.649,221,0.625,222,0.625,223,0.757,224,0.649,225,0.701,226,0.649,227,0.625,228,0.757,229,0.625,230,0.729,231,0.757,238,2.751,255,1.506,261,1.636,262,1.815,264,1.708,360,2.417,391,1.917,396,1.753,397,1.957,407,1.39,421,3.292,538,1.708,540,2.571,633,4.337,635,3.598,638,2.966,644,3.598,646,4.834,647,1.868,690,2.381,779,4.939,832,3.099,970,2.163,973,2.163,1614,5.811,1615,4.999,1616,4.148,1617,3.985,1618,2.744,1619,2.744,1620,2.744,1621,2.744,1622,4.148,1623,2.744,1624,2.966,1625,2.966,1626,2.744,1627,4.148,1628,2.744,1629,4.148,1630,2.744,1631,2.744,1632,2.744,1633,2.744,1634,4.672,1635,4.148,1636,2.142,1637,2.744,1638,2.744,1639,2.744,1640,2.381,1641,2.744,1642,2.744,1643,2.744,1644,2.744,1645,2.966,1646,3.598]],["title/components/UpdateAuthorFormComponent.html",[21,0.326,215,0.926]],["body/components/UpdateAuthorFormComponent.html",[3,0.101,4,0.09,5,0.079,9,0.125,10,0.407,11,3.782,13,0.792,14,0.326,15,0.015,16,0.49,18,0.101,19,0.008,20,0.008,21,0.496,22,0.619,23,1.013,24,0.722,25,0.875,26,0.75,27,0.75,31,0.452,33,1.588,34,1.136,35,1.601,37,0.573,38,2.047,39,2.12,40,1.173,41,1.227,43,1.136,47,1.136,49,0.499,54,1.858,55,0.362,59,0.858,61,0.523,62,0.731,63,0.523,65,3.247,73,1.052,75,1.093,79,0.919,80,1.842,81,1.812,82,0.862,83,1.049,85,1.379,86,1.359,94,1.483,98,1.136,107,1.037,108,0.75,110,1.602,112,0.488,115,0.407,121,1.584,122,0.213,127,0.681,136,1.558,141,1.373,151,2.886,152,1.854,155,1.854,156,2.399,157,2.731,158,1.772,159,1.854,160,1.772,161,2.617,163,1.495,164,0.695,165,1.136,166,1.052,167,0.619,168,1.529,169,0.75,170,1.371,171,0.643,172,1.85,173,0.619,174,1.529,175,0.643,176,1.215,177,0.619,178,0.757,179,0.643,180,0.619,181,1.136,182,0.619,183,0.75,184,0.643,185,0.643,186,0.75,187,0.643,188,0.75,189,0.643,190,0.75,191,0.643,192,0.75,193,0.619,194,0.75,195,0.619,196,0.75,197,0.643,198,0.643,199,0.619,200,0.75,201,0.643,202,1.136,203,0.619,204,0.75,205,0.643,206,0.695,207,0.643,208,1.529,209,0.643,210,0.643,211,0.75,212,0.643,213,0.619,214,1.469,215,1.312,216,0.619,217,0.75,218,0.668,219,0.619,220,0.643,221,0.619,222,0.619,223,0.75,224,0.643,225,2.01,226,0.643,227,0.619,228,0.75,229,0.619,230,0.722,231,0.75,233,1.417,234,2.399,235,2.735,236,2.266,238,2.735,239,4.312,240,2.896,241,2.399,242,3.231,243,3.051,244,2.266,245,2.896,246,1.496,247,2.747,248,1.584,249,2.266,250,2.592,252,2.399,253,3.278,255,2.013,256,1.943,257,3.165,258,3.051,259,2.147,260,1.496,261,1.625,262,2.276,263,2.147,264,2.283,266,2.266,267,1.943,268,1.943,270,2.266,271,2.266,272,2.04,273,2.346,275,1.944,276,2.147,277,1.347,278,1.072,279,1.17,281,1.496,282,1.496,283,1.803,284,1.803,285,1.803,286,2.121,287,2.896,289,1.132,292,2.358,293,2.358,294,1.496,297,1.496,298,1.496,299,3.231,300,3.231,301,2.891,302,1.943,303,1.854,304,3.231,329,1.854,330,2.266,355,2.121,379,2.266,382,1.696,388,2.945,390,2.731,391,1.417,400,2.358,407,1.379,409,1.944,491,1.944,492,2.945,527,2.147,530,4.157,538,1.696,647,1.854,770,4.969,779,4.969,873,2.552,965,1.943,1278,2.945,1398,2.945,1405,5.157,1614,5.846,1640,2.358,1647,3.879,1648,4.312,1649,4.97,1650,4.81,1651,4.327,1652,4.81,1653,4.81,1654,2.718,1655,4.892,1656,3.213,1657,5.463,1658,3.213,1659,3.213,1660,2.358,1661,2.358,1662,2.718,1663,3.213,1664,2.718,1665,3.213,1666,4.327,1667,2.718,1668,2.718,1669,3.213,1670,3.213,1671,2.718,1672,3.572,1673,2.358,1674,4.118,1675,4.118,1676,2.358,1677,2.358,1678,2.358,1679,2.718,1680,2.718,1681,2.718,1682,2.718,1683,2.358,1684,2.718,1685,2.358,1686,2.718,1687,2.718,1688,2.718,1689,2.718]],["title/components/UpdateAuthorHaikuComponent.html",[21,0.326,216,0.891]],["body/components/UpdateAuthorHaikuComponent.html",[3,0.105,4,0.094,5,0.082,9,0.13,10,0.42,13,0.327,14,0.34,15,0.015,16,0.583,18,0.105,19,0.008,20,0.008,21,0.424,22,0.645,23,1.044,24,0.752,25,0.912,26,0.781,27,0.781,31,0.559,33,1.576,34,1.172,35,1.641,36,1.928,37,0.597,38,2.054,39,2.128,40,1.271,41,1.265,43,1.172,45,2.295,46,2.295,47,1.204,48,2.193,49,0.514,51,2.549,52,2.332,53,2.332,54,1.897,55,0.565,57,1.559,58,2.605,59,0.829,61,0.719,62,0.618,63,0.719,68,1.913,69,1.676,70,1.423,73,1.085,74,1.676,75,1.353,76,1.481,77,2.215,79,0.857,80,1.855,81,1.67,82,0.823,83,1.059,85,1.423,86,1.517,87,1.913,88,1.423,89,3.058,90,1.828,92,1.828,93,1.828,94,1.34,95,1.913,96,1.676,97,1.913,98,1.562,99,1.828,100,1.481,101,2.332,102,1.828,103,1.913,106,1.337,107,1.059,108,1.562,110,1.55,112,0.763,113,2.099,115,0.28,116,0.988,117,2.295,118,1.276,119,0.597,120,1.879,122,0.222,123,1.276,124,1.276,125,1.276,126,1.276,127,0.937,128,1.276,129,1.276,130,1.219,131,1.219,132,1.219,133,1.219,134,1.118,135,1.219,136,1.072,137,1.368,138,1.913,139,1.913,141,1.116,143,1.913,144,1.749,145,1.828,146,1.651,148,1.913,150,2.337,151,2.923,152,1.913,153,2.952,154,2.337,155,1.913,158,1.828,159,1.913,160,1.828,161,2.005,162,2.337,163,1.542,164,0.724,165,1.172,166,1.085,167,0.645,168,1.562,169,0.781,170,1.406,171,0.67,172,1.873,173,0.645,174,1.562,175,0.67,176,1.664,177,0.645,178,0.77,179,0.67,180,0.645,181,1.172,182,0.645,183,0.781,184,0.67,185,0.67,186,0.781,187,0.67,188,0.781,189,0.67,190,0.781,191,0.67,192,0.781,193,0.645,194,0.781,195,0.645,196,0.781,197,0.67,198,0.67,199,0.645,200,0.781,201,0.67,202,1.172,203,0.645,204,0.781,205,0.67,206,0.724,207,0.67,208,1.562,209,0.67,210,0.67,211,0.781,212,0.67,213,0.645,214,1.546,215,0.67,216,1.289,217,0.781,218,0.697,219,0.645,220,0.67,221,0.645,222,0.645,223,0.781,224,0.67,225,0.724,226,0.67,227,0.645,228,0.781,229,0.645,230,0.752,231,0.781,247,1.404,273,1.337,277,1.404,278,1.118,289,0.645,305,4.825,308,1.879,309,3.645,310,3.038,312,2.211,313,3.947,316,3.794,325,2.211,326,1.879,327,1.879,329,2.549,330,2.337,331,3.321,332,2.337,333,3.711,334,3.299,335,3.504,336,2.337,337,2.475,338,2.475,360,2.475,390,3.754,391,1.627,396,1.392,407,1.897,416,2.475,418,2.475,420,2.475,421,2.337,466,2.211,472,2.458,473,2.458,474,2.211,475,2.458,476,2.458,520,3.038,540,2.633,549,3.038,785,4.51,786,4.51,832,3.159,970,2.215,973,2.215,974,4.912,1617,4.049,1624,3.038,1625,3.038,1634,4.338,1636,2.211,1645,3.038,1690,4.248,1691,2.833,1692,2.833,1693,4.248,1694,2.833,1695,4.248,1696,2.833,1697,4.248,1698,2.833,1699,4.248,1700,2.833,1701,2.833,1702,2.833,1703,2.833,1704,2.833,1705,2.833]],["title/components/UpdateProfileComponent.html",[21,0.326,219,0.891]],["body/components/UpdateProfileComponent.html",[3,0.083,4,0.074,5,0.065,8,3.022,9,0.103,10,0.35,11,1.758,13,0.259,14,0.343,15,0.015,16,0.598,18,0.083,19,0.006,20,0.006,21,0.454,22,0.511,23,0.872,24,0.595,25,0.722,26,0.619,27,0.619,31,0.636,33,1.182,34,0.978,35,1.417,36,1.665,37,0.472,38,2.013,39,2.082,40,1.178,41,1.057,43,0.978,45,1.982,46,1.982,47,1.171,48,1.894,49,0.43,51,2.253,52,1.461,53,2.06,54,1.676,55,0.472,58,0.885,59,0.864,61,0.736,62,0.606,63,0.736,68,1.597,69,1.399,73,1.278,74,1.974,75,1.539,76,1.744,77,2.609,79,0.902,80,1.915,81,1.87,82,0.89,83,1.12,85,1.188,86,1.499,87,1.597,88,1.188,89,2.835,90,1.527,92,1.527,93,1.527,94,1.372,95,1.597,96,1.399,97,1.597,98,1.599,99,1.527,100,1.237,101,1.461,102,1.527,103,1.597,106,1.058,107,1.213,108,1.9,110,1.608,112,0.637,113,1.812,115,0.222,116,0.782,117,2.61,118,1.01,119,0.472,122,0.175,123,1.01,124,1.01,125,1.982,126,1.01,127,0.959,128,1.01,129,1.01,130,0.965,131,0.965,132,0.965,133,0.965,134,0.885,135,0.965,136,0.848,141,1.194,143,2.454,144,2.245,145,2.346,148,2.454,164,0.573,165,0.978,166,0.906,167,0.511,168,1.38,169,0.619,170,1.214,171,0.531,172,1.736,173,0.511,174,1.38,175,0.531,176,1.096,177,0.511,178,0.989,179,0.531,180,0.511,181,0.978,182,0.511,183,0.619,184,0.531,185,0.531,186,0.619,187,0.531,188,0.619,189,0.531,190,0.619,191,0.531,192,0.619,193,0.511,194,0.619,195,0.511,196,0.619,197,0.531,198,1.041,199,0.511,200,0.619,201,0.531,202,0.978,203,0.511,204,0.619,205,0.531,206,0.573,207,0.531,208,1.38,209,0.531,210,0.531,211,0.619,212,0.531,213,0.511,214,1.524,215,0.531,216,0.511,217,0.619,218,0.551,219,1.139,220,0.531,221,1.696,222,0.511,223,0.619,224,0.531,225,0.573,226,0.531,227,0.511,228,0.619,229,0.511,230,0.595,231,0.619,302,1.674,303,1.597,360,2.915,364,1.597,391,1.878,396,1.694,407,2.308,482,3.166,483,2.565,484,2.361,488,2.918,493,1.75,494,1.487,497,1.75,507,1.758,513,2.918,522,3.341,526,2.067,527,1.85,538,1.461,540,3.101,543,2.768,544,2.768,545,2.915,546,2.768,547,2.768,548,3.282,579,1.604,582,1.487,583,1.945,591,2.537,622,2.537,623,2.537,624,2.537,625,2.768,769,4.995,970,2.609,973,3.022,1205,4.026,1211,4.729,1212,1.945,1213,4.145,1214,3.077,1251,2.537,1325,2.06,1326,2.361,1370,1.604,1422,2.768,1427,4.34,1461,4.014,1463,4.145,1470,3.077,1488,1.75,1515,2.768,1526,2.352,1617,1.604,1624,3.578,1625,3.578,1634,4.747,1645,2.537,1706,5.878,1707,1.945,1708,4.401,1709,3.547,1710,5.45,1711,4.568,1712,4.34,1713,5.003,1714,5.796,1715,5.003,1716,2.242,1717,2.242,1718,2.242,1719,2.242,1720,2.242,1721,3.547,1722,2.242,1723,3.547,1724,2.242,1725,5.796,1726,2.242,1727,2.242,1728,2.242,1729,3.547,1730,2.242,1731,5.003,1732,3.547,1733,3.547,1734,2.242,1735,3.547,1736,2.242,1737,2.242,1738,2.242,1739,2.242,1740,2.242,1741,2.242,1742,2.242,1743,2.242,1744,2.242,1745,2.242,1746,2.242,1747,1.945,1748,2.242,1749,4.401,1750,2.242,1751,1.945,1752,2.242,1753,2.242,1754,2.242,1755,2.242,1756,2.242,1757,2.242,1758,2.242,1759,2.242,1760,2.242,1761,1.945,1762,2.242,1763,2.242,1764,2.242,1765,2.242,1766,2.242,1767,2.242,1768,3.547,1769,1.945,1770,2.242,1771,2.242,1772,2.242,1773,3.547,1774,2.242,1775,2.242,1776,2.242,1777,3.547,1778,3.547]],["title/components/UpdateProfileFormComponent.html",[21,0.326,220,0.926]],["body/components/UpdateProfileFormComponent.html",[3,0.068,4,0.061,5,0.053,9,0.084,10,0.298,11,3.69,13,0.807,14,0.329,15,0.015,16,0.494,18,0.068,19,0.006,20,0.006,21,0.409,22,0.418,23,0.742,24,0.487,25,0.591,26,0.506,27,0.506,31,0.422,33,1.089,34,0.832,35,1.237,37,0.386,38,1.97,39,2.036,40,0.99,41,0.899,43,0.832,47,1.179,49,0.365,54,1.491,55,0.244,59,0.867,61,0.488,62,0.582,63,0.488,73,1.137,75,1.182,79,0.934,80,1.868,81,1.874,82,0.893,83,1.093,85,1.011,86,1.402,94,1.542,98,1.228,107,1.093,108,1.228,110,1.746,112,0.542,115,0.181,119,0.386,122,0.144,127,0.737,136,1.684,141,1.453,144,0.755,150,2.911,151,3.04,153,3.746,154,2.911,156,3.403,157,2.952,158,1.915,159,2.004,160,1.915,161,2.756,163,1.095,164,0.469,165,0.832,166,0.771,167,0.418,168,1.228,169,0.506,170,1.06,171,0.434,172,1.611,173,0.418,174,1.228,175,0.434,176,0.975,177,0.418,178,0.868,179,0.434,180,0.418,181,0.832,182,0.418,183,0.506,184,0.434,185,0.434,186,0.506,187,0.434,188,0.506,189,0.434,190,0.506,191,0.434,192,0.506,193,0.418,194,0.506,195,0.418,196,0.506,197,0.434,198,0.434,199,0.418,200,0.506,201,0.434,202,0.832,203,0.418,204,0.506,205,0.434,206,0.469,207,0.434,208,1.228,209,0.434,210,0.434,211,0.506,212,0.434,213,0.418,214,1.388,215,0.434,216,0.418,217,0.506,218,0.451,219,0.418,220,1.053,221,1.844,222,0.418,223,0.506,224,0.434,225,2.013,226,0.434,227,0.418,228,0.506,229,0.418,230,0.487,231,0.506,233,0.956,234,1.758,235,2.114,236,1.66,243,2.449,244,1.66,246,1.009,247,2.205,248,1.069,249,1.66,250,2.565,253,3.427,255,2.261,256,2.1,257,3.265,258,3.213,259,2.321,260,1.66,261,2.087,262,2.366,263,2.321,264,2.178,266,2.449,267,2.1,268,2.1,270,1.66,271,1.66,272,1.495,273,2.321,276,2.003,277,1.495,278,0.724,279,0.789,281,1.66,282,1.009,285,2,286,1.431,289,1.377,294,1.66,297,1.66,298,1.66,299,3.082,300,3.082,301,2.758,302,2.496,303,2.004,304,3.082,355,1.431,374,1.591,379,2.707,382,2.178,383,2.354,388,3.183,391,1.351,399,1.591,401,1.591,403,1.591,404,4.176,406,1.312,407,1.956,410,1.591,414,1.66,488,1.73,491,1.312,492,1.312,527,2.321,530,4.322,538,1.242,647,2.004,769,5.002,770,5.002,838,1.758,873,2.759,965,1.424,1245,1.591,1251,2.157,1278,2.157,1325,3.118,1326,3.363,1349,1.591,1352,2.998,1353,2.354,1361,3.473,1393,1.216,1398,3.183,1405,5.272,1407,2.354,1461,3.719,1487,2.617,1488,1.431,1526,2.952,1529,3.707,1531,1.591,1532,1.591,1533,1.591,1535,1.591,1536,1.591,1543,2.617,1544,2.617,1587,3.861,1647,2.998,1651,3.473,1655,5.085,1656,3.473,1657,5.685,1658,3.473,1659,3.473,1660,1.591,1661,2.617,1663,3.473,1665,2.354,1666,4.556,1669,3.473,1670,3.473,1706,5.886,1711,4.232,1747,1.591,1751,2.617,1761,1.591,1769,1.591,1779,3.842,1780,3.842,1781,3.842,1782,3.842,1783,4.919,1784,3.842,1785,3.842,1786,3.842,1787,3.016,1788,3.016,1789,4.451,1790,4.451,1791,4.451,1792,4.451,1793,4.451,1794,4.451,1795,4.451,1796,4.451,1797,4.451,1798,4.451,1799,3.842,1800,3.842,1801,3.016,1802,1.834,1803,3.016,1804,1.834,1805,1.834,1806,1.834,1807,1.834,1808,1.834,1809,1.834,1810,1.834,1811,4.451,1812,3.016,1813,3.016,1814,3.016,1815,3.016,1816,3.016,1817,3.016,1818,1.834,1819,3.016,1820,3.016,1821,3.016,1822,3.016,1823,1.834,1824,1.591,1825,1.834,1826,1.834,1827,1.834,1828,1.834,1829,1.834,1830,3.016,1831,3.016,1832,3.016,1833,1.834,1834,1.834,1835,1.834,1836,3.842,1837,3.016,1838,1.834,1839,3.016,1840,1.834,1841,1.834,1842,1.834,1843,1.834,1844,1.834,1845,1.834,1846,1.834,1847,1.834,1848,3.842,1849,1.834,1850,3.842,1851,1.834,1852,3.842,1853,1.834,1854,3.016,1855,1.834,1856,1.834,1857,1.834,1858,1.834,1859,1.834,1860,3.842,1861,1.834,1862,1.834,1863,1.834,1864,3.016,1865,1.834,1866,3.842,1867,1.834,1868,1.834,1869,1.834,1870,1.834,1871,1.834,1872,1.834,1873,1.834,1874,1.834,1875,1.834]],["title/components/UpdateUserHaikuComponent.html",[21,0.326,222,0.891]],["body/components/UpdateUserHaikuComponent.html",[3,0.105,4,0.093,5,0.081,9,0.129,10,0.417,14,0.337,15,0.015,16,0.582,18,0.105,19,0.008,20,0.008,21,0.503,22,0.641,23,1.039,24,0.747,25,0.906,26,0.776,27,0.776,31,0.619,33,1.283,34,1.166,35,1.634,36,1.92,37,0.593,38,2.053,39,2.127,40,1.268,41,1.259,43,1.166,45,2.285,46,2.285,47,1.202,48,2.184,49,0.512,51,2.54,52,2.323,53,2.323,54,1.89,55,0.562,58,2.599,59,0.827,61,0.717,62,0.616,63,0.717,68,1.903,69,1.667,70,1.416,73,1.08,74,1.667,75,1.498,76,1.473,77,2.203,79,0.855,80,1.853,81,1.667,82,0.821,83,1.057,85,1.416,86,1.515,87,1.903,88,1.416,89,3.052,90,1.818,92,1.818,93,1.818,94,1.335,95,1.903,96,1.667,97,1.903,98,1.556,99,1.818,100,1.473,101,2.323,102,1.818,103,1.903,107,1.056,108,1.4,110,1.545,112,0.759,113,2.09,115,0.278,116,0.981,117,2.285,118,1.267,119,0.593,122,0.22,123,1.267,124,1.267,125,1.267,126,1.267,127,0.934,128,1.267,129,1.267,130,1.211,131,1.211,132,1.211,133,1.211,134,1.11,135,1.211,136,1.064,137,1.361,138,1.903,139,1.903,141,1.112,143,1.903,144,1.74,145,1.818,146,1.639,148,1.903,150,2.325,151,2.917,152,1.903,153,2.942,154,2.325,155,1.903,158,1.818,159,1.903,160,1.818,161,1.994,162,2.325,163,1.534,164,0.719,165,1.166,166,1.08,167,0.641,168,1.556,169,0.776,170,1.4,171,0.666,172,1.87,173,0.641,174,1.556,175,0.666,176,1.681,177,0.641,178,1.037,179,0.666,180,0.641,181,1.166,182,0.641,183,0.776,184,0.666,185,0.666,186,0.776,187,0.666,188,0.776,189,0.666,190,0.776,191,0.666,192,0.776,193,0.641,194,0.776,195,0.641,196,0.776,197,0.666,198,0.666,199,0.641,200,0.776,201,0.666,202,1.166,203,0.641,204,0.776,205,0.666,206,0.719,207,0.666,208,1.556,209,0.666,210,0.666,211,0.776,212,0.666,213,0.641,214,1.541,215,0.666,216,0.641,217,0.776,218,0.692,219,0.641,220,0.666,221,0.641,222,1.285,223,0.776,224,0.666,225,0.719,226,0.666,227,0.641,228,0.776,229,0.641,230,0.747,231,0.776,247,1.394,250,1.467,273,1.328,276,1.467,277,1.394,278,1.11,289,0.641,308,1.865,309,3.629,310,3.022,326,1.865,329,2.54,330,2.325,331,3.312,332,2.325,333,3.701,334,3.288,335,3.495,336,2.325,337,2.462,338,2.462,360,2.462,391,1.623,396,1.387,407,1.89,416,2.462,418,2.462,420,2.462,462,4.818,464,2.44,465,4.212,466,2.195,468,3.788,474,2.195,477,2.44,478,1.865,482,1.467,488,1.903,494,1.865,538,1.74,540,2.619,785,4.503,786,4.503,832,3.145,970,2.203,973,2.203,1423,3.297,1439,3.297,1617,4.035,1624,3.022,1625,3.022,1634,4.325,1636,2.195,1645,3.022,1876,4.894,1877,4.225,1878,2.813,1879,2.813,1880,2.813,1881,4.225,1882,2.813,1883,2.813,1884,2.813,1885,4.225,1886,2.813,1887,4.225,1888,2.813,1889,2.813,1890,2.813,1891,2.813,1892,2.813,1893,2.44,1894,2.813,1895,2.813,1896,2.813]],["title/components/UpdateUserHaikuFormComponent.html",[21,0.326,224,0.926]],["body/components/UpdateUserHaikuFormComponent.html",[3,0.094,4,0.083,5,0.073,9,0.115,10,0.383,13,0.774,14,0.32,15,0.015,16,0.537,18,0.094,19,0.007,20,0.007,21,0.479,22,0.572,23,0.953,24,0.667,25,0.809,26,0.693,27,0.693,31,0.425,33,1.233,34,1.069,35,1.525,36,0.95,37,0.529,38,2.034,39,2.106,40,1.137,41,1.155,43,1.069,47,1.135,49,0.47,54,1.783,55,0.334,59,0.845,61,0.492,62,0.592,63,0.492,73,0.991,75,1.029,79,0.908,80,1.817,81,1.784,82,0.845,83,1.031,85,1.299,86,1.325,94,1.438,98,1.069,107,0.996,108,1.069,110,1.553,112,0.451,113,1.035,115,0.248,119,0.529,122,0.197,127,0.642,136,1.467,141,1.331,151,2.29,152,1.746,155,1.746,158,1.668,159,1.746,160,1.668,161,2.512,163,2.207,164,0.642,165,1.069,166,0.991,167,0.572,168,1.468,169,0.693,170,1.306,171,0.594,172,1.804,173,0.572,174,1.468,175,0.594,176,1.773,177,0.572,178,1.04,179,0.594,180,0.572,181,1.069,182,0.572,183,0.693,184,0.594,185,0.594,186,0.693,187,0.594,188,0.693,189,0.594,190,0.693,191,0.594,192,0.693,193,0.572,194,0.693,195,0.572,196,0.693,197,0.594,198,0.594,199,0.572,200,0.693,201,0.594,202,1.069,203,0.572,204,0.693,205,0.594,206,0.642,207,0.594,208,1.468,209,0.594,210,0.594,211,0.693,212,0.594,213,0.572,214,1.45,215,0.594,216,0.572,217,0.693,218,0.618,219,0.572,220,0.594,221,0.572,222,0.572,223,0.693,224,1.259,225,1.993,226,0.594,227,0.572,228,0.693,229,0.572,230,0.667,231,0.693,233,1.31,234,2.259,235,2.605,236,2.133,238,2.605,240,2.759,241,2.259,242,3.101,243,2.929,244,2.133,245,2.759,246,1.382,247,2.637,248,1.464,249,2.133,250,2.468,251,1.797,252,2.259,253,3.165,255,1.932,256,1.83,257,3.087,258,2.929,259,2.022,260,1.382,261,1.53,262,2.207,263,2.022,264,2.192,266,2.133,267,1.83,268,1.83,269,2.18,270,2.133,271,2.133,272,1.921,273,2.234,276,2.022,277,1.245,278,0.991,279,1.081,281,1.382,282,2.929,283,1.666,284,1.666,287,2.759,289,1.078,294,1.382,297,1.382,298,1.382,299,2.259,300,2.259,301,2.022,302,1.83,303,1.746,304,2.259,329,3.375,330,2.929,331,3.909,332,3.344,334,3.101,335,3.344,336,3.344,337,2.259,338,3.542,342,3.694,379,2.133,381,1.557,382,1.597,388,2.773,390,2.571,391,1.21,402,1.96,405,2.18,406,2.773,407,1.783,412,1.557,413,1.96,414,1.382,416,3.351,417,3.025,418,3.351,419,1.96,420,3.351,455,1.96,462,4.899,468,3.639,478,1.666,482,3.303,488,2.132,491,1.797,492,1.797,494,1.666,527,2.022,530,3.529,538,1.597,610,4.153,647,1.746,770,4.899,785,4.579,786,4.579,873,2.403,965,1.83,1278,2.773,1325,1.035,1398,2.773,1405,5.065,1647,3.694,1648,4.107,1650,4.617,1651,4.153,1652,4.617,1653,4.617,1655,4.153,1656,3.025,1657,5.35,1658,3.025,1659,3.025,1665,3.025,1666,4.153,1669,3.025,1670,3.025,1672,3.363,1673,2.18,1676,2.18,1677,2.18,1678,2.18,1683,2.18,1685,2.18,1824,2.18,1893,3.363,1897,4.734,1898,2.512,1899,2.512,1900,2.512,1901,2.512,1902,2.512,1903,2.512,1904,3.877,1905,3.877,1906,3.877,1907,3.877,1908,2.512,1909,2.512,1910,2.18,1911,2.512,1912,2.512,1913,2.512,1914,2.512,1915,2.512]],["title/interfaces/UserDto.html",[0,1.039,8,2.04]],["body/interfaces/UserDto.html",[0,1.611,2,2.612,3,0.226,4,0.201,5,0.176,8,3.69,9,0.278,10,0.699,13,0.918,14,0.354,15,0.015,18,0.226,19,0.013,20,0.013,391,1.972,396,1.957,1325,3.178,1326,3.642,1515,6.022,1916,5.265]],["title/interfaces/UserHaikuDto.html",[0,1.039,468,2.04]],["body/interfaces/UserHaikuDto.html",[0,1.578,2,2.557,3,0.221,4,0.196,5,0.172,9,0.272,10,0.691,13,0.945,14,0.363,15,0.015,18,0.221,19,0.013,20,0.013,329,3.452,391,1.959,396,1.922,416,4.467,418,4.467,420,4.467,468,3.645,488,3.344,1917,5.155,1918,5.942]],["title/injectables/UserHaikuService.html",[465,2.595,841,0.703]],["body/injectables/UserHaikuService.html",[3,0.098,4,0.087,5,0.076,9,0.12,10,0.397,13,0.859,14,0.335,15,0.015,16,0.601,18,0.098,19,0.007,20,0.007,31,0.706,32,1.302,33,1.394,37,1.148,40,0.751,47,1.211,49,0.66,55,0.534,59,0.801,61,0.843,62,0.621,63,0.909,67,2.093,70,2.224,73,1.773,74,2.15,75,1.447,76,2.314,78,2.209,79,0.902,82,0.867,83,0.709,86,1.254,88,1.345,94,0.95,98,1.107,100,1.399,107,0.911,112,1.055,115,0.26,119,0.554,122,0.206,127,1.199,137,2.305,176,1.695,178,1.018,214,1.205,289,1.58,341,3.356,345,3.461,348,2.093,349,2.093,361,3.176,362,2.999,365,3.176,366,3.176,382,2.244,391,1.851,396,1.977,397,2.92,407,1.345,430,2.339,463,3.482,465,2.661,468,3.777,478,1.743,488,2.192,489,2.093,499,3.482,507,3.742,526,2.339,537,4.171,538,1.082,545,2.339,548,2.842,568,3.176,630,1.989,677,5.368,700,0.881,734,1.24,750,1.457,841,0.721,843,0.916,846,0.994,848,3.742,869,3.066,871,2.999,887,3.123,914,2.051,915,2.339,916,3.99,922,2.999,923,1.446,924,2.999,925,2.679,926,2.572,927,2.679,928,2.454,931,2.7,934,2.488,938,2.209,939,4.171,940,3.606,941,2.339,942,3.176,943,2.339,944,2.339,945,2.339,948,3.378,949,2.999,951,4.747,953,3.897,954,3.897,959,2.488,961,2.093,962,3.619,963,2.093,964,3.23,965,2.298,966,2.679,967,2.093,970,2.093,971,3.482,972,2.661,973,2.093,975,3.777,976,1.532,977,1.37,978,1.37,979,1.532,980,1.24,981,1.446,982,1.446,983,1.37,984,1.446,985,1.446,986,1.446,987,1.743,990,2.209,994,2.87,995,2.87,996,3.066,998,3.018,999,3.405,1000,3.23,1001,3.061,1002,3.23,1003,2.661,1004,3.405,1005,2.661,1006,2.661,1007,3.897,1008,2.87,1009,2.87,1010,3.405,1011,3.405,1012,2.837,1015,2.209,1016,2.209,1018,1.629,1020,1.743,1022,1.88,1023,1.743,1423,3.132,1437,3.482,1439,4.58,1876,5.368,1910,4.728,1919,6.122,1920,4.869,1921,4.013,1922,4.869,1923,4.869,1924,4.013,1925,4.013,1926,4.013,1927,4.013,1928,2.628,1929,4.013,1930,2.628,1931,2.628,1932,2.628,1933,2.628,1934,2.628,1935,2.628,1936,4.013,1937,2.628,1938,2.628,1939,4.013,1940,2.628,1941,2.628,1942,2.628,1943,2.628,1944,2.628,1945,4.869,1946,2.628,1947,2.628,1948,2.628]],["title/injectables/UserService.html",[482,2.04,841,0.703]],["body/injectables/UserService.html",[3,0.107,4,0.095,5,0.083,8,3.804,9,0.131,10,0.423,13,0.872,14,0.341,15,0.015,16,0.615,18,0.107,19,0.008,20,0.008,31,0.748,32,1.42,37,0.903,40,0.802,47,1.232,49,0.69,55,0.57,59,0.818,61,0.866,62,0.637,63,0.901,67,2.235,70,1.908,73,1.813,74,2.247,75,1.512,76,2.23,78,2.358,79,0.916,82,0.883,83,0.624,86,1.296,88,1.436,94,1.014,98,1.182,100,0.999,107,0.802,110,1.095,112,1.095,115,0.283,119,0.604,122,0.224,127,1.174,137,2.349,141,0.939,178,1.016,214,1.246,267,2.022,289,1.552,341,2.676,345,2.97,348,1.495,349,1.495,361,2.497,362,2.358,365,2.497,366,2.497,382,1.765,391,1.813,396,1.929,397,2.422,407,0.96,430,1.67,461,4.444,482,2.235,488,2.88,489,2.235,526,2.497,537,3.727,538,2.114,545,2.497,548,2.97,568,2.497,630,2.123,647,1.93,700,0.96,734,1.353,750,1.556,759,3.344,820,4.297,838,2.497,841,0.77,843,0.999,846,1.084,848,3.792,869,3.169,871,2.358,887,3.149,915,2.497,916,3.965,922,3.134,923,1.577,924,3.134,925,2.824,926,2.688,927,2.824,928,2.564,931,2.822,934,2.656,938,2.358,939,4.251,940,3.727,941,2.497,942,3.319,943,2.497,944,2.497,945,2.497,948,3.53,949,3.134,951,4.073,953,3.065,954,3.065,959,2.656,961,2.235,962,3.7,963,2.235,964,3.354,965,2.422,966,2.824,967,2.235,970,2.235,972,2.842,973,2.235,975,3.845,976,1.67,977,1.495,978,1.495,979,1.67,980,1.353,981,1.577,982,1.577,983,1.495,984,1.577,985,1.577,986,1.577,987,1.901,990,2.358,994,2.05,995,2.05,996,3.169,998,3.181,999,3.52,1000,3.354,1001,3.179,1002,3.354,1003,1.901,1004,3.52,1005,1.901,1006,1.901,1007,3.065,1008,2.05,1009,2.05,1010,3.52,1011,3.52,1012,2.497,1015,2.824,1016,2.358,1018,1.777,1020,1.901,1022,2.05,1023,1.901,1325,2.87,1370,2.05,1422,3.344,1435,3.718,1548,4.452,1551,3.718,1558,3.718,1563,2.487,1663,3.344,1712,3.718,1949,2.487,1950,4.285,1951,5.132,1952,4.285,1953,4.285,1954,4.285,1955,4.285,1956,2.866,1957,4.285,1958,4.285,1959,2.866,1960,2.866,1961,2.866,1962,2.866,1963,4.285,1964,2.866,1965,5.695,1966,2.866,1967,2.866,1968,4.285,1969,2.866,1970,4.285,1971,2.866,1972,5.132,1973,2.866,1974,2.866,1975,2.866,1976,2.866,1977,2.866,1978,2.866,1979,2.866]],["title/interfaces/UserUpdateDto.html",[0,1.039,1711,2.595]],["body/interfaces/UserUpdateDto.html",[0,1.611,2,2.612,3,0.226,4,0.201,5,0.176,9,0.278,10,0.699,13,0.937,14,0.354,15,0.015,18,0.226,19,0.013,20,0.013,391,1.972,396,1.842,1325,3.178,1326,3.642,1526,5.118,1711,4.693,1980,5.265]],["title/injectables/UsernameValidator.html",[841,0.703,1529,2.595]],["body/injectables/UsernameValidator.html",[3,0.201,4,0.179,5,0.156,9,0.248,14,0.248,15,0.015,16,0.673,18,0.201,19,0.012,20,0.012,31,0.593,49,0.8,55,0.719,59,0.762,61,0.686,62,0.505,63,0.686,79,0.8,82,0.8,108,1.491,115,0.534,119,1.139,122,0.423,141,1.184,255,2.697,257,2.551,278,2.132,279,2.326,414,4.265,482,4.041,700,1.811,750,2.398,841,1.187,843,1.885,846,2.045,873,4.42,887,2.605,977,3.444,978,2.818,979,3.15,1325,2.72,1396,3.865,1403,5.153,1404,5.796,1409,5.153,1410,4.218,1529,4.379,1981,6.187,1982,6.604,1983,7.427,1984,6.604,1985,7.427,1986,5.405,1987,5.405,1988,5.405,1989,7.427,1990,7.427,1991,6.604,1992,5.405,1993,5.405,1994,5.405,1995,5.405,1996,5.405]],["title/injectables/XmlSerializerService.html",[841,0.703,926,1.846]],["body/injectables/XmlSerializerService.html",[3,0.128,4,0.113,5,0.099,8,3.232,9,0.157,13,0.946,14,0.361,15,0.015,16,0.547,18,0.128,19,0.009,20,0.009,24,1.296,31,0.747,37,1.435,49,0.591,55,0.456,59,0.786,61,0.926,62,0.637,63,0.865,65,2.791,73,1.247,75,1.986,76,2.161,79,0.896,82,0.883,83,0.902,86,0.694,110,0.875,112,1.114,115,0.339,122,0.268,127,1.16,141,0.751,166,1.247,262,2.544,279,1.475,289,1.793,316,3.232,341,1.787,345,1.787,348,1.787,349,1.787,397,2.304,407,2.282,468,3.232,537,3.968,700,1.905,750,1.772,841,0.877,843,1.195,846,1.296,887,1.352,926,2.304,928,3.067,967,4.264,983,1.787,986,3.942,987,2.272,1102,6.08,1287,3.809,1461,3.612,1997,6.08,1998,2.973,1999,4.882,2000,4.882,2001,7.164,2002,4.882,2003,4.882,2004,4.882,2005,6.198,2006,3.426,2007,3.426,2008,4.882,2009,3.426,2010,7.808,2011,7.164,2012,5.908,2013,7.164,2014,4.882,2015,6.198,2016,3.426,2017,6.198,2018,6.198,2019,4.882,2020,3.426,2021,4.882,2022,3.426,2023,4.882,2024,6.198,2025,3.426,2026,4.882,2027,7.29,2028,4.882,2029,4.882,2030,3.426,2031,3.426,2032,3.426,2033,3.426,2034,6.198,2035,6.198,2036,6.198,2037,6.198,2038,6.198,2039,5.687,2040,5.687,2041,5.687,2042,5.687,2043,5.687,2044,5.687,2045,5.687,2046,4.882,2047,4.882,2048,4.882,2049,3.426,2050,3.426,2051,4.882,2052,3.426,2053,3.426,2054,3.426,2055,5.687,2056,3.426,2057,3.426,2058,3.426,2059,3.426,2060,4.882,2061,3.426,2062,3.426,2063,3.426,2064,3.426,2065,3.426,2066,3.426]],["title/changelog.html",[2067,2.828,2068,2.828,2069,3.259]],["body/changelog.html",[5,0.214,15,0.014,19,0.013,20,0.013,40,1.382,72,3.888,112,1.054,160,2.523,214,1.438,331,3.057,531,4.193,704,3.888,739,5.281,934,3.634,1140,5.763,1235,6.622,2012,5.087,2070,5.863,2071,5.863,2072,5.863,2073,6.92,2074,6.935,2075,5.863,2076,6.016,2077,6.016,2078,5.087,2079,5.863,2080,6.935,2081,5.863,2082,5.863,2083,5.863,2084,6.935,2085,5.863,2086,5.863,2087,5.863,2088,5.863,2089,6.935,2090,5.863,2091,5.863,2092,6.935,2093,5.087,2094,5.087,2095,4.575,2096,5.863,2097,5.863,2098,5.863,2099,6.935,2100,5.087,2101,5.087,2102,5.863,2103,5.863,2104,5.863,2105,5.863]],["title/coverage.html",[2106,4.646]],["body/coverage.html",[0,2.038,1,2.924,5,0.108,6,3.251,8,1.954,14,0.172,15,0.015,19,0.01,20,0.01,21,0.68,22,0.853,28,4.057,29,3.448,30,4.658,33,1.544,57,2.062,65,1.688,112,0.673,122,0.407,155,3.05,167,1.184,171,0.887,173,0.853,175,0.887,176,1.605,177,0.853,178,0.989,179,0.887,180,0.853,182,0.853,184,0.887,185,0.887,187,0.887,189,0.887,191,0.887,193,0.853,195,0.853,197,0.887,199,0.853,201,0.887,203,0.853,205,0.887,207,0.887,209,0.887,210,0.887,212,0.887,213,0.853,215,0.887,216,0.853,218,0.922,219,0.853,220,0.887,221,1.184,222,0.853,224,0.887,227,0.853,229,0.853,232,3.959,233,3.88,305,4.648,306,3.757,307,3.757,308,4.648,313,2.323,316,1.954,407,2.607,412,2.323,462,4.648,465,2.485,468,1.954,482,1.954,484,1.769,505,4.611,506,4.511,522,2.062,626,3.251,627,2.68,628,3.251,697,3.251,720,2.485,757,2.68,761,2.924,765,2.924,769,3.448,770,4.276,777,2.924,779,3.448,783,4.057,784,4.057,785,3.997,786,3.997,788,2.924,791,2.924,806,2.68,808,2.68,810,2.68,828,3.479,829,3.251,841,1.406,847,3.251,909,3.251,911,3.251,913,3.251,914,4.057,926,1.769,928,1.688,929,1.954,980,2.454,986,2.062,1024,3.251,1050,3.251,1065,3.251,1066,3.251,1090,3.251,1121,3.251,1122,3.251,1179,3.251,1199,3.251,1205,2.485,1215,3.251,1237,2.68,1238,3.251,1239,2.924,1240,3.251,1273,4.057,1274,3.251,1300,3.251,1311,2.68,1312,3.251,1313,3.251,1316,2.323,1318,2.68,1346,3.251,1347,3.251,1362,3.251,1363,3.251,1386,3.251,1393,2.485,1395,3.251,1396,4.269,1420,3.251,1454,3.251,1455,3.251,1460,3.251,1461,2.184,1462,3.251,1463,2.68,1464,3.251,1497,3.251,1501,2.68,1508,2.323,1525,3.251,1527,3.251,1529,2.485,1545,3.251,1566,3.251,1604,3.251,1605,3.251,1614,4.057,1706,4.057,1707,3.251,1711,2.485,1916,3.251,1917,3.251,1919,3.251,1949,3.251,1980,3.251,1981,3.251,1997,3.251,1998,3.251,2106,3.251,2107,3.748,2108,3.748,2109,3.748,2110,7.188,2111,5.199,2112,3.748,2113,6.773,2114,6.773,2115,6.448,2116,3.748,2117,5.199,2118,5.199,2119,5.97,2120,5.97,2121,3.748,2122,3.748,2123,3.748,2124,3.748,2125,3.748,2126,3.748,2127,3.748,2128,3.748,2129,3.748,2130,3.748,2131,3.748,2132,6.773,2133,3.748,2134,3.748,2135,3.748,2136,3.748,2137,3.748,2138,3.748,2139,3.748,2140,3.748,2141,3.748,2142,3.748,2143,5.199,2144,3.748,2145,3.748,2146,3.748,2147,6.448,2148,3.748,2149,3.748,2150,5.199,2151,5.97,2152,3.748,2153,3.748,2154,3.748,2155,3.748,2156,5.97,2157,5.199,2158,3.748,2159,5.199,2160,5.199,2161,3.748,2162,3.748,2163,3.748,2164,3.748,2165,3.748,2166,3.748,2167,3.748,2168,3.748,2169,3.748,2170,3.748,2171,3.748,2172,3.748,2173,3.748,2174,3.748,2175,3.748,2176,3.748,2177,3.748,2178,3.748,2179,3.748,2180,5.97,2181,5.199,2182,5.199,2183,3.748,2184,6.448,2185,3.251,2186,5.199,2187,5.199,2188,3.251,2189,3.748,2190,3.748]],["title/dependencies.html",[708,3.368,2191,2.543]],["body/dependencies.html",[15,0.015,19,0.013,20,0.013,115,0.591,116,2.085,119,1.26,278,2.359,459,5.187,708,4.276,710,4.666,728,6.086,729,5.474,739,4.276,748,3.484,749,3.484,750,2.171,862,3.965,866,4.666,2093,5.187,2094,5.187,2095,4.666,2192,5.979,2193,8.063,2194,5.979,2195,5.979,2196,5.979,2197,5.979,2198,5.979,2199,5.979,2200,5.979,2201,5.979,2202,5.979,2203,5.979,2204,5.979,2205,5.979,2206,5.979,2207,5.979,2208,5.979]],["title/index.html",[9,0.149,2067,2.828,2068,2.828]],["body/index.html",[4,0.188,15,0.012,19,0.012,20,0.012,21,0.607,34,1.572,40,1.066,62,0.533,70,1.909,112,1.024,261,2.248,301,2.971,527,2.971,531,4.075,624,4.075,699,3.32,704,3.778,723,3.778,739,5.672,1135,4.943,1155,5.32,1218,4.943,2073,5.915,2076,6.33,2077,6.33,2078,6.33,2100,5.915,2101,6.56,2191,4.446,2209,5.698,2210,4.943,2211,5.698,2212,5.698,2213,7.729,2214,5.698,2215,5.698,2216,5.698,2217,5.698,2218,5.698,2219,5.698,2220,5.698,2221,5.698,2222,7.296,2223,5.698,2224,7.561,2225,5.698,2226,5.698,2227,5.698,2228,6.818,2229,5.698,2230,6.818,2231,6.818,2232,5.698,2233,7.846,2234,5.698,2235,5.698,2236,6.818,2237,5.698,2238,5.698,2239,5.698,2240,5.698,2241,7.296,2242,5.698,2243,4.446,2244,5.698]],["title/modules.html",[707,3.552]],["body/modules.html",[15,0.013,19,0.013,20,0.013,461,4.986,706,4.57,707,4.237,719,4.237,729,4.986,2095,4.986,2245,6.39,2246,7.29,2247,6.39]],["title/overview.html",[2243,4.179]],["body/overview.html",[2,2.047,15,0.015,19,0.011,20,0.011,22,1.532,23,1.17,152,3.03,164,1.215,171,1.592,173,1.532,175,1.592,177,1.532,179,1.592,180,1.532,182,1.532,184,1.592,185,1.592,187,1.806,189,1.592,191,1.592,193,1.532,195,1.532,197,1.592,199,1.532,201,1.592,203,1.532,205,1.592,207,1.592,209,1.592,210,1.592,212,1.592,213,1.532,215,1.592,216,1.532,218,1.654,219,1.532,220,1.592,222,1.532,224,1.592,226,1.126,227,1.738,229,1.738,705,3.402,706,6.008,707,3.154,708,3.402,709,4.127,710,3.712,711,4.127,712,3.712,713,4.127,714,4.127,715,4.127,716,4.127,717,4.127,718,4.127,719,4.462,720,4.462,721,5.289,722,4.127,723,3.154,804,3.154,805,3.154,846,1.8,1394,3.712,1646,4.127,2243,3.712,2248,4.757,2249,4.757,2250,4.757,2251,4.757]],["title/properties.html",[10,0.465,2191,2.543]],["body/properties.html",[10,0.636,15,0.014,19,0.013,20,0.013,2210,5.588,2252,6.441]],["title/routes.html",[804,3.552]],["body/routes.html",[15,0.013,19,0.013,20,0.013,804,4.288]],["title/miscellaneous/variables.html",[2253,2.828,2254,4.086]],["body/miscellaneous/variables.html",[9,0.285,14,0.329,15,0.015,19,0.013,20,0.013,75,1.905,83,1.044,107,1.343,980,3.67,2185,5.394,2188,5.394,2253,5.394,2254,5.394,2255,6.217,2256,6.217,2257,7.177,2258,7.177]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/AccountDto.html":{},"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthorDto.html":{},"interfaces/AuthorHaikuDto.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/ImageDto.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"interfaces/JWTokenDto.html":{},"components/LoginComponent.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"interfaces/PaginationMetaDataDto.html":{},"interfaces/ProfileDto.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserDto.html":{},"interfaces/UserHaikuDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"interfaces/UserUpdateDto.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":407,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"components/FooterComponent.html":{},"components/RegisterComponent.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2252,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":2208,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2187,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2183,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2180,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2181,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2184,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2182,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":397,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/LoginService.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{}}}],["1/1",{"_index":2159,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2111,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2178,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":568,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["10/22",{"_index":2166,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":2132,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":903,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["11/29",{"_index":2142,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2250,"title":{},"body":{"overview.html":{}}}],["12/31",{"_index":2173,"title":{},"body":{"coverage.html":{}}}],["13.9.0",{"_index":2200,"title":{},"body":{"dependencies.html":{}}}],["13/27",{"_index":2144,"title":{},"body":{"coverage.html":{}}}],["13/31",{"_index":2152,"title":{},"body":{"coverage.html":{}}}],["13/37",{"_index":2146,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2177,"title":{},"body":{"coverage.html":{}}}],["14/29",{"_index":2164,"title":{},"body":{"coverage.html":{}}}],["14/34",{"_index":2167,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2249,"title":{},"body":{"overview.html":{}}}],["15/16",{"_index":2127,"title":{},"body":{"coverage.html":{}}}],["15/30",{"_index":2168,"title":{},"body":{"coverage.html":{}}}],["18.0.0",{"_index":2203,"title":{},"body":{"dependencies.html":{}}}],["18.2.0",{"_index":2193,"title":{},"body":{"dependencies.html":{}}}],["18.2.5",{"_index":2211,"title":{},"body":{"index.html":{}}}],["18.2.8",{"_index":2197,"title":{},"body":{"dependencies.html":{}}}],["18/38",{"_index":2155,"title":{},"body":{"coverage.html":{}}}],["18/41",{"_index":2176,"title":{},"body":{"coverage.html":{}}}],["19/41",{"_index":2163,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":152,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":2206,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2134,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2114,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":2112,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":2116,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2179,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":404,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["22",{"_index":2251,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1646,"title":{},"body":{"components/UpdateAuthorComponent.html":{},"overview.html":{}}}],["3.1.2",{"_index":2202,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":2140,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2125,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1362,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["300",{"_index":157,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["31",{"_index":2138,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":2248,"title":{},"body":{"overview.html":{}}}],["33",{"_index":2110,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":2145,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":2141,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":2172,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":156,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["4/10",{"_index":2150,"title":{},"body":{"coverage.html":{}}}],["4/12",{"_index":2147,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":2135,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":2160,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":2149,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2115,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1159,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["401",{"_index":1161,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["403",{"_index":1165,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["404",{"_index":1169,"title":{},"body":{"injectables/ErrorHandlingService.html":{},"components/NotFoundComponent.html":{}}}],["409",{"_index":1172,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["41",{"_index":2151,"title":{},"body":{"coverage.html":{}}}],["43",{"_index":2156,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":2148,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":2165,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":2162,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":2154,"title":{},"body":{"coverage.html":{}}}],["48",{"_index":2143,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":334,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["5.3.3",{"_index":2201,"title":{},"body":{"dependencies.html":{}}}],["5/12",{"_index":2169,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":2133,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":2124,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":2131,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":155,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{}}}],["500",{"_index":1174,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["6/15",{"_index":2158,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2137,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":2130,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":2113,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":337,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["7.8.0",{"_index":2204,"title":{},"body":{"dependencies.html":{}}}],["7/16",{"_index":2157,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":2129,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":2123,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":2117,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":2128,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1361,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["8/10",{"_index":2122,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":2118,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2121,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":2119,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2136,"title":{},"body":{"coverage.html":{}}}],["9/11",{"_index":2120,"title":{},"body":{"coverage.html":{}}}],["9/29",{"_index":2139,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":2126,"title":{},"body":{"coverage.html":{}}}],["a.name.tolowercase",{"_index":686,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["a.title.tolowercase",{"_index":600,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["abstractcontrol",{"_index":1409,"title":{},"body":{"classes/MatchingValidator.html":{},"classes/SyllableValidator.html":{},"injectables/UsernameValidator.html":{}}}],["accept",{"_index":966,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["access",{"_index":831,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/AuthorizationGuard.html":{},"injectables/ErrorHandlingService.html":{},"guards/UnAuthenticatedGuard.html":{}}}],["accessing",{"_index":1607,"title":{},"body":{"guards/UnAuthenticatedGuard.html":{}}}],["accordingly",{"_index":1822,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["account",{"_index":1213,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["accountdto",{"_index":1,"title":{"interfaces/AccountDto.html":{}},"body":{"interfaces/AccountDto.html":{},"coverage.html":{}}}],["actions",{"_index":611,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["activated",{"_index":837,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/AuthorizationGuard.html":{},"guards/UnAuthenticatedGuard.html":{}}}],["activatedroute",{"_index":1617,"title":{},"body":{"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["activatedroutesnapshot",{"_index":1056,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["actual",{"_index":1603,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["actual_component",{"_index":231,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["add",{"_index":40,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"changelog.html":{},"index.html":{}}}],["addauthor",{"_index":50,"title":{},"body":{"components/AddAuthorComponent.html":{},"injectables/AuthorService.html":{}}}],["addauthor(authordto",{"_index":64,"title":{},"body":{"components/AddAuthorComponent.html":{}}}],["addauthor(newauthordto",{"_index":1030,"title":{},"body":{"injectables/AuthorService.html":{}}}],["addauthorcomponent",{"_index":22,"title":{"components/AddAuthorComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addauthorform",{"_index":237,"title":{},"body":{"components/AddAuthorFormComponent.html":{}}}],["addauthorformcomponent",{"_index":171,"title":{"components/AddAuthorFormComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addauthorhaiku",{"_index":311,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"injectables/AuthorHaikuService.html":{}}}],["addauthorhaiku(authorhaikudto",{"_index":315,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{}}}],["addauthorhaiku(newauthorhaikudto",{"_index":932,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["addauthorhaikucomponent",{"_index":173,"title":{"components/AddAuthorHaikuComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addauthorhaikuform",{"_index":339,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["addauthorhaikuformcomponent",{"_index":175,"title":{"components/AddAuthorHaikuFormComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["added",{"_index":78,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["adding",{"_index":32,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["addregister",{"_index":1549,"title":{},"body":{"injectables/RegisterService.html":{}}}],["addregister(newregisterdto",{"_index":1553,"title":{},"body":{"injectables/RegisterService.html":{}}}],["adds",{"_index":67,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["adduser",{"_index":1950,"title":{},"body":{"injectables/UserService.html":{}}}],["adduser(newuserdto",{"_index":1955,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserhaiku",{"_index":463,"title":{},"body":{"components/AddUserHaikuComponent.html":{},"injectables/UserHaikuService.html":{}}}],["adduserhaiku(newuserhaikudto",{"_index":1927,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["adduserhaiku(userhaikudto",{"_index":467,"title":{},"body":{"components/AddUserHaikuComponent.html":{}}}],["adduserhaikucomponent",{"_index":177,"title":{"components/AddUserHaikuComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adduserhaikuform",{"_index":480,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{}}}],["adduserhaikuformcomponent",{"_index":179,"title":{"components/AddUserHaikuFormComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["admin",{"_index":817,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"injectables/LoginService.html":{}}}],["aeiou]le$/.test(word",{"_index":1601,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["again",{"_index":135,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["against",{"_index":1103,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/MatchingValidator.html":{}}}],["allauthorhaikuscomponent",{"_index":180,"title":{"components/AllAuthorHaikusComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["allauthorscomponent",{"_index":182,"title":{"components/AllAuthorsComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["allows",{"_index":1219,"title":{},"body":{"components/HomeComponent.html":{}}}],["alluserhaikuscomponent",{"_index":184,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alluserscomponent",{"_index":185,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["angular",{"_index":2077,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular.json",{"_index":2102,"title":{},"body":{"changelog.html":{}}}],["angular/animations",{"_index":2192,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2194,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":734,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":2195,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":115,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":278,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"modules/AppModule.html":{},"components/LoginFormComponent.html":{},"classes/MatchingValidator.html":{},"components/RegisterFormComponent.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UsernameValidator.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2196,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":746,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":742,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":744,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":728,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":116,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"guards/AuthorizationGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{},"components/RegisterComponent.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"dependencies.html":{}}}],["api",{"_index":940,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["apibaseurl",{"_index":2257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":39,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["app.component",{"_index":752,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":701,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":702,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":187,"title":{"components/AppComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["append",{"_index":943,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["appisauthorized",{"_index":1275,"title":{},"body":{"directives/IsAuthorizedDirective.html":{}}}],["appisauthorized]'},{'name",{"_index":228,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["appisunauthenticated",{"_index":230,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["application",{"_index":699,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"index.html":{}}}],["application/xml",{"_index":990,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["appmodule",{"_index":706,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appreciate",{"_index":1230,"title":{},"body":{"components/HomeComponent.html":{}}}],["approutingmodule",{"_index":719,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aria",{"_index":617,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["array",{"_index":1102,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/XmlSerializerService.html":{}}}],["artifacts",{"_index":2225,"title":{},"body":{"index.html":{}}}],["asc",{"_index":572,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["assigns",{"_index":1624,"title":{},"body":{"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["associated",{"_index":695,"title":{},"body":{"components/AllAuthorsComponent.html":{},"injectables/ImageService.html":{}}}],["associates",{"_index":1258,"title":{},"body":{"injectables/ImageService.html":{}}}],["asynchronous",{"_index":1989,"title":{},"body":{"injectables/UsernameValidator.html":{}}}],["asyncvalidatorfn",{"_index":1990,"title":{},"body":{"injectables/UsernameValidator.html":{}}}],["authenticated",{"_index":830,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"directives/IsUnAuthenticatedDirective.html":{},"guards/UnAuthenticatedGuard.html":{}}}],["authenticated.guard",{"_index":812,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authenticated.guard.ts",{"_index":1605,"title":{},"body":{"guards/UnAuthenticatedGuard.html":{},"coverage.html":{}}}],["authenticated.guard.ts:11",{"_index":1609,"title":{},"body":{"guards/UnAuthenticatedGuard.html":{}}}],["authenticated.guard.ts:23",{"_index":1610,"title":{},"body":{"guards/UnAuthenticatedGuard.html":{}}}],["authenticates",{"_index":1324,"title":{},"body":{"components/LoginComponent.html":{}}}],["authentication",{"_index":839,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"injectables/LogoutService.html":{},"guards/UnAuthenticatedGuard.html":{}}}],["authentication.service",{"_index":1372,"title":{},"body":{"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["authenticationguard",{"_index":806,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["authenticationservice",{"_index":484,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AddUserHaikuFormComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"components/HeaderComponent.html":{},"directives/IsUnAuthenticatedDirective.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["author",{"_index":33,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"coverage.html":{}}}],["author's",{"_index":390,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"injectables/AuthorService.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["author'},{'name",{"_index":170,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["author.component",{"_index":773,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["author.component.css",{"_index":42,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/UpdateAuthorComponent.html":{}}}],["author.component.html",{"_index":44,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/UpdateAuthorComponent.html":{}}}],["author.component.ts",{"_index":30,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/UpdateAuthorComponent.html":{},"coverage.html":{}}}],["author.component.ts:107",{"_index":1628,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["author.component.ts:132",{"_index":1621,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["author.component.ts:17",{"_index":114,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/UpdateAuthorComponent.html":{}}}],["author.component.ts:18",{"_index":1632,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["author.component.ts:19",{"_index":109,"title":{},"body":{"components/AddAuthorComponent.html":{}}}],["author.component.ts:20",{"_index":1630,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["author.component.ts:21",{"_index":1631,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["author.component.ts:23",{"_index":111,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/UpdateAuthorComponent.html":{}}}],["author.component.ts:25",{"_index":60,"title":{},"body":{"components/AddAuthorComponent.html":{}}}],["author.component.ts:27",{"_index":1633,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["author.component.ts:29",{"_index":1618,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["author.component.ts:32",{"_index":104,"title":{},"body":{"components/AddAuthorComponent.html":{}}}],["author.component.ts:37",{"_index":105,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/UpdateAuthorComponent.html":{}}}],["author.component.ts:42",{"_index":1626,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["author.component.ts:45",{"_index":84,"title":{},"body":{"components/AddAuthorComponent.html":{}}}],["author.component.ts:56",{"_index":1619,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["author.component.ts:58",{"_index":91,"title":{},"body":{"components/AddAuthorComponent.html":{}}}],["author.component.ts:69",{"_index":1620,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["author.component.ts:70",{"_index":66,"title":{},"body":{"components/AddAuthorComponent.html":{}}}],["author.component.ts:81",{"_index":1623,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["author.name",{"_index":460,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["author.name.tolowercase().includes(this.searchterm.tolowercase",{"_index":447,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["author/:id",{"_index":818,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["author/add",{"_index":29,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["author/single",{"_index":777,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["author/update",{"_index":779,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"coverage.html":{}}}],["authorapi",{"_index":1025,"title":{},"body":{"injectables/AuthorService.html":{}}}],["authorauthorhaikuapi",{"_index":917,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["authorauthorhaikudto",{"_index":452,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["authordto",{"_index":65,"title":{"interfaces/AuthorDto.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{},"interfaces/AuthorDto.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"injectables/XmlSerializerService.html":{},"coverage.html":{}}}],["authordto.bio",{"_index":694,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authordto.id",{"_index":450,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["authordto.name",{"_index":449,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["authorhaiku",{"_index":974,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"components/UpdateAuthorHaikuComponent.html":{}}}],["authorhaiku'},{'name",{"_index":217,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["authorhaikudto",{"_index":316,"title":{"interfaces/AuthorHaikuDto.html":{}},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"interfaces/AuthorHaikuDto.html":{},"injectables/AuthorHaikuService.html":{},"components/UpdateAuthorHaikuComponent.html":{},"injectables/XmlSerializerService.html":{},"coverage.html":{}}}],["authorhaikudto.lineone",{"_index":613,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["authorhaikudto.linethree",{"_index":615,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["authorhaikudto.linetwo",{"_index":614,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["authorhaikudto.title",{"_index":612,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["authorhaikuid",{"_index":549,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/NavigationService.html":{},"components/UpdateAuthorHaikuComponent.html":{}}}],["authorhaikuidtodelete",{"_index":509,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["authorhaikuidtoupdate",{"_index":1699,"title":{},"body":{"components/UpdateAuthorHaikuComponent.html":{}}}],["authorhaikus",{"_index":564,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"injectables/AuthorHaikuService.html":{}}}],["authorhaikusdto",{"_index":510,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["authorhaikuservice",{"_index":313,"title":{"injectables/AuthorHaikuService.html":{}},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"injectables/AuthorHaikuService.html":{},"components/UpdateAuthorHaikuComponent.html":{},"coverage.html":{}}}],["authorhaikuurl",{"_index":918,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["authorhaikuurl(endpoint",{"_index":936,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["authorid",{"_index":421,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{},"interfaces/AuthorHaikuDto.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/NavigationService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{}}}],["authorid:number",{"_index":912,"title":{},"body":{"interfaces/AuthorHaikuDto.html":{}}}],["authoridtodelete",{"_index":632,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authoridtoupdate",{"_index":1615,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["authorization",{"_index":1058,"title":{},"body":{"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/LogoutService.html":{}}}],["authorization.service",{"_index":988,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["authorizationguard",{"_index":808,"title":{"guards/AuthorizationGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthorizationGuard.html":{},"coverage.html":{}}}],["authorizationinterceptor",{"_index":720,"title":{"interceptors/AuthorizationInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthorizationInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authorizationservice",{"_index":929,"title":{"injectables/AuthorizationService.html":{}},"body":{"injectables/AuthorHaikuService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"directives/IsAuthorizedDirective.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"coverage.html":{}}}],["authorized",{"_index":1051,"title":{},"body":{"guards/AuthorizationGuard.html":{},"injectables/AuthorizationService.html":{},"directives/IsAuthorizedDirective.html":{}}}],["authorized.directive",{"_index":796,"title":{},"body":{"modules/AppModule.html":{}}}],["authorized.directive.ts",{"_index":1274,"title":{},"body":{"directives/IsAuthorizedDirective.html":{},"coverage.html":{}}}],["authorized.directive.ts:10",{"_index":1289,"title":{},"body":{"directives/IsAuthorizedDirective.html":{}}}],["authorized.directive.ts:11",{"_index":1283,"title":{},"body":{"directives/IsAuthorizedDirective.html":{}}}],["authorized.directive.ts:19",{"_index":1285,"title":{},"body":{"directives/IsAuthorizedDirective.html":{}}}],["authorized.directive.ts:24",{"_index":1284,"title":{},"body":{"directives/IsAuthorizedDirective.html":{}}}],["authorized.directive.ts:33",{"_index":1286,"title":{},"body":{"directives/IsAuthorizedDirective.html":{}}}],["authors",{"_index":363,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/NavigationService.html":{}}}],["authors'},{'name",{"_index":183,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["authors.component",{"_index":775,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["authors.component.html",{"_index":631,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts",{"_index":628,"title":{},"body":{"components/AllAuthorsComponent.html":{},"coverage.html":{}}}],["authors.component.ts:119",{"_index":642,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:145",{"_index":655,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:155",{"_index":660,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:16",{"_index":676,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:165",{"_index":658,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:17",{"_index":671,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:175",{"_index":654,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:18",{"_index":665,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:184",{"_index":656,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:198",{"_index":648,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:20",{"_index":663,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:21",{"_index":667,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:210",{"_index":652,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:221",{"_index":645,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:23",{"_index":672,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:24",{"_index":670,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:25",{"_index":662,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:27",{"_index":664,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:28",{"_index":669,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:29",{"_index":674,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:30",{"_index":675,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:32",{"_index":673,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:36",{"_index":666,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:40",{"_index":668,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:42",{"_index":640,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:49",{"_index":650,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:54",{"_index":651,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:65",{"_index":641,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:81",{"_index":643,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors.component.ts:91",{"_index":649,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authors/all",{"_index":627,"title":{},"body":{"components/AllAuthorsComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["authorsdto",{"_index":340,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["authorservice",{"_index":57,"title":{"injectables/AuthorService.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"coverage.html":{}}}],["authorurl",{"_index":1026,"title":{},"body":{"injectables/AuthorService.html":{}}}],["authorurl(endpoint",{"_index":1033,"title":{},"body":{"injectables/AuthorService.html":{}}}],["authoruserhaikuidhaikuid",{"_index":1944,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["authorview",{"_index":661,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["authservice",{"_index":483,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthorHaikuService.html":{},"interceptors/AuthorizationInterceptor.html":{},"components/HeaderComponent.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateProfileComponent.html":{}}}],["authsubscription",{"_index":1276,"title":{},"body":{"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{}}}],["authzservice",{"_index":1054,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["automatically",{"_index":2218,"title":{},"body":{"index.html":{}}}],["available",{"_index":461,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"injectables/UserService.html":{},"modules.html":{}}}],["b",{"_index":598,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["b.name.tolowercase",{"_index":688,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["b.title.tolowercase",{"_index":602,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["back",{"_index":1195,"title":{},"body":{"components/FooterComponent.html":{}}}],["bad",{"_index":1160,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["base",{"_index":944,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["based",{"_index":364,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateProfileComponent.html":{}}}],["bearer",{"_index":992,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"interceptors/AuthorizationInterceptor.html":{}}}],["beauty",{"_index":1231,"title":{},"body":{"components/HomeComponent.html":{}}}],["behavior",{"_index":1193,"title":{},"body":{"components/FooterComponent.html":{}}}],["behaviorsubject",{"_index":381,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["behaviorsubject(this.isauthenticated",{"_index":892,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["behaviorsubject(this.isauthorizedforroles(['admin",{"_index":1113,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["bio",{"_index":11,"title":{},"body":{"interfaces/AccountDto.html":{},"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AllAuthorsComponent.html":{},"interfaces/AuthorDto.html":{},"interfaces/ProfileDto.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["bios",{"_index":693,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["blocked",{"_index":1612,"title":{},"body":{"guards/UnAuthenticatedGuard.html":{}}}],["boolean",{"_index":262,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationService.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/XmlSerializerService.html":{}}}],["booleanelement",{"_index":2051,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["booleanelement.textcontent",{"_index":2053,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["bootstrap",{"_index":710,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":740,"title":{},"body":{"modules/AppModule.html":{}}}],["browse",{"_index":2246,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":729,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":731,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":730,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":727,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":2224,"title":{},"body":{"index.html":{}}}],["call",{"_index":138,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["calls",{"_index":1817,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["can't",{"_index":299,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["can\\'t",{"_index":304,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["canactivate",{"_index":814,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"guards/AuthorizationGuard.html":{},"guards/UnAuthenticatedGuard.html":{}}}],["canactivate(route",{"_index":1055,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["cancel",{"_index":303,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["capabilities",{"_index":2239,"title":{},"body":{"index.html":{}}}],["captures",{"_index":1669,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["case",{"_index":1158,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["catch",{"_index":907,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["catcherror",{"_index":977,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{}}}],["catcherror((error",{"_index":1010,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["certain",{"_index":1608,"title":{},"body":{"guards/UnAuthenticatedGuard.html":{}}}],["chain",{"_index":1080,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["change",{"_index":624,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/UpdateProfileComponent.html":{},"index.html":{}}}],["changed",{"_index":1813,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["changelog",{"_index":2069,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":530,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["changesmade",{"_index":1650,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["characters",{"_index":153,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["check",{"_index":261,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"index.html":{}}}],["checking",{"_index":1982,"title":{},"body":{"injectables/UsernameValidator.html":{}}}],["checks",{"_index":255,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationService.html":{},"components/LoginFormComponent.html":{},"classes/MatchingValidator.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UsernameValidator.html":{}}}],["childnode.nodename",{"_index":2063,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["childnode.nodetype",{"_index":2062,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["childnode.textcontent",{"_index":2065,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["choice",{"_index":2235,"title":{},"body":{"index.html":{}}}],["class",{"_index":122,"title":{"classes/MatchingValidator.html":{},"classes/SyllableValidator.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{},"coverage.html":{}}}],["classes",{"_index":1394,"title":{},"body":{"classes/MatchingValidator.html":{},"classes/SyllableValidator.html":{},"overview.html":{}}}],["clear",{"_index":1298,"title":{},"body":{"directives/IsAuthorizedDirective.html":{}}}],["clearmessages",{"_index":51,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["clears",{"_index":85,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["cli",{"_index":2078,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["client",{"_index":1152,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["clonedrequest",{"_index":1085,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["cluster_appmodule",{"_index":713,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":714,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":718,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":716,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":717,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":715,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1135,"title":{},"body":{"injectables/ErrorHandlingService.html":{},"index.html":{}}}],["collection",{"_index":1222,"title":{},"body":{"components/HomeComponent.html":{}}}],["command",{"_index":2236,"title":{},"body":{"index.html":{}}}],["compared",{"_index":1656,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["compares",{"_index":1658,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["comparison",{"_index":1670,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["complete",{"_index":945,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["completes",{"_index":948,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/ProfileService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["component",{"_index":21,"title":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":1625,"title":{},"body":{"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["component_template",{"_index":169,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["components",{"_index":23,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"overview.html":{}}}],["comprehensive",{"_index":607,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["conditionally",{"_index":1301,"title":{},"body":{"directives/IsUnAuthenticatedDirective.html":{}}}],["confirm",{"_index":302,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/HeaderComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["confirmation",{"_index":546,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["confirmpassword",{"_index":1526,"title":{},"body":{"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"interfaces/UserUpdateDto.html":{}}}],["conflict",{"_index":1173,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["console",{"_index":1138,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["console.error(`error",{"_index":1147,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["console.error(`serialization",{"_index":1175,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["const",{"_index":289,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"classes/MatchingValidator.html":{},"injectables/ProfileService.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{}}}],["constructerrormessage",{"_index":1126,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["constructerrormessage(error",{"_index":1129,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["constructor",{"_index":55,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{}}}],["constructor(authorhaikuservice",{"_index":312,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{}}}],["constructor(authorservice",{"_index":56,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AllAuthorsComponent.html":{},"components/UpdateAuthorComponent.html":{}}}],["constructor(authservice",{"_index":833,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"guards/UnAuthenticatedGuard.html":{}}}],["constructor(authzservice",{"_index":1052,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["constructor(cookieservice",{"_index":857,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["constructor(errorhandlingservice",{"_index":2006,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["constructor(fb",{"_index":246,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["constructor(http",{"_index":923,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["constructor(loginservice",{"_index":1317,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(logoutservice",{"_index":1204,"title":{},"body":{"components/HeaderComponent.html":{}}}],["constructor(private",{"_index":279,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{}}}],["constructor(profileservice",{"_index":1716,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["constructor(registerservice",{"_index":1500,"title":{},"body":{"components/RegisterComponent.html":{}}}],["constructor(router",{"_index":1387,"title":{},"body":{"injectables/LogoutService.html":{},"injectables/NavigationService.html":{}}}],["constructor(templateref",{"_index":1279,"title":{},"body":{"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{}}}],["constructor(userhaikuservice",{"_index":464,"title":{},"body":{"components/AddUserHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["constructor(userservice",{"_index":1986,"title":{},"body":{"injectables/UsernameValidator.html":{}}}],["constructs",{"_index":938,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["containing",{"_index":76,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"injectables/RegisterService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{}}}],["content",{"_index":965,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["control",{"_index":257,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"classes/MatchingValidator.html":{},"components/RegisterFormComponent.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UsernameValidator.html":{}}}],["control's",{"_index":1584,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["control.haserror(errortype",{"_index":298,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["control.invalid",{"_index":297,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["control.value",{"_index":1416,"title":{},"body":{"classes/MatchingValidator.html":{},"classes/SyllableValidator.html":{}}}],["controlname",{"_index":259,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"classes/MatchingValidator.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["controls",{"_index":1398,"title":{},"body":{"classes/MatchingValidator.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["cookie",{"_index":749,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"dependencies.html":{}}}],["cookies",{"_index":872,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/LogoutService.html":{}}}],["cookieservice",{"_index":747,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{}}}],["copy",{"_index":1196,"title":{},"body":{"components/FooterComponent.html":{}}}],["core/footer/footer.component",{"_index":753,"title":{},"body":{"modules/AppModule.html":{}}}],["core/guards/authentication.guard",{"_index":807,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/authorization.guard",{"_index":809,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/un",{"_index":811,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/header/header.component",{"_index":754,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/authentication.service",{"_index":493,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/UpdateProfileComponent.html":{}}}],["core/services/author",{"_index":325,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{}}}],["core/services/author.service",{"_index":120,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{}}}],["core/services/authorization.service",{"_index":1290,"title":{},"body":{"directives/IsAuthorizedDirective.html":{}}}],["core/services/login.service",{"_index":1334,"title":{},"body":{"components/LoginComponent.html":{}}}],["core/services/logout.service",{"_index":1748,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["core/services/navigation.service",{"_index":579,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["core/services/profile.service",{"_index":1746,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["core/services/register.service",{"_index":1518,"title":{},"body":{"components/RegisterComponent.html":{}}}],["core/services/user",{"_index":477,"title":{},"body":{"components/AddUserHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["core/services/user.service",{"_index":494,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["core/utilities/authorizationinterceptor",{"_index":798,"title":{},"body":{"modules/AppModule.html":{}}}],["core/utilities/matching",{"_index":1532,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["core/utilities/syllable",{"_index":413,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["core/utilities/username",{"_index":1533,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["count",{"_index":1578,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["counts",{"_index":1570,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["countsyllables",{"_index":1572,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["countsyllables(line",{"_index":1575,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["countsyllablesinword",{"_index":1573,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["countsyllablesinword(word",{"_index":1579,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["coverage",{"_index":2106,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1235,"title":{},"body":{"components/HomeComponent.html":{},"changelog.html":{}}}],["created",{"_index":72,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/HomeComponent.html":{},"changelog.html":{}}}],["creates",{"_index":1403,"title":{},"body":{"classes/MatchingValidator.html":{},"classes/SyllableValidator.html":{},"injectables/UsernameValidator.html":{}}}],["credentials",{"_index":1164,"title":{},"body":{"injectables/ErrorHandlingService.html":{},"injectables/LoginService.html":{}}}],["current",{"_index":382,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"components/HeaderComponent.html":{},"injectables/ImageService.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["currentformvalues",{"_index":1676,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["currentimageid",{"_index":1255,"title":{},"body":{"injectables/ImageService.html":{}}}],["currentpage",{"_index":341,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"interfaces/PaginationMetaDataDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{}}}],["currentpage=1",{"_index":994,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["currentprofileformvalues",{"_index":1843,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["currentuserformvalues",{"_index":1840,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["currentuserid",{"_index":481,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{},"injectables/ImageService.html":{}}}],["currentusername",{"_index":1779,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["currentusernamelower",{"_index":1848,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["currentyear",{"_index":1184,"title":{},"body":{"components/FooterComponent.html":{}}}],["custom",{"_index":1397,"title":{},"body":{"classes/MatchingValidator.html":{}}}],["data",{"_index":73,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{}}}],["database",{"_index":608,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["date().getfullyear",{"_index":1191,"title":{},"body":{"components/FooterComponent.html":{}}}],["date.now",{"_index":904,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["debounce",{"_index":370,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["debounces",{"_index":1815,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["debouncetime",{"_index":410,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["debouncetime(500",{"_index":425,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["debugging",{"_index":2087,"title":{},"body":{"changelog.html":{}}}],["declarations",{"_index":709,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decode",{"_index":866,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"dependencies.html":{}}}],["decoded",{"_index":867,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["decodedtoken",{"_index":905,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["decodes",{"_index":861,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["decodetoken",{"_index":851,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["decodetoken(token",{"_index":859,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["decoding",{"_index":868,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["default",{"_index":107,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultauthorid",{"_index":633,"title":{},"body":{"components/AllAuthorsComponent.html":{},"components/UpdateAuthorComponent.html":{}}}],["defaultbio",{"_index":239,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{}}}],["defaultroles",{"_index":1364,"title":{},"body":{"injectables/LoginService.html":{}}}],["defaults",{"_index":160,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"changelog.html":{}}}],["defaulttitle",{"_index":342,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["defined",{"_index":59,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{}}}],["delete",{"_index":548,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"interceptors/AuthorizationInterceptor.html":{},"components/HomeComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["deleteauthor",{"_index":634,"title":{},"body":{"components/AllAuthorsComponent.html":{},"injectables/AuthorService.html":{}}}],["deleteauthor(authorid",{"_index":1035,"title":{},"body":{"injectables/AuthorService.html":{}}}],["deleteauthorhaiku",{"_index":514,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"injectables/AuthorHaikuService.html":{}}}],["deleteauthorhaiku(authorhaikuid",{"_index":946,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["deleted",{"_index":550,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["deletes",{"_index":526,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["deleteuser",{"_index":1712,"title":{},"body":{"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["deleteuser(userid",{"_index":1958,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuserhaiku",{"_index":1921,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["deleteuserhaiku(userhaikuid",{"_index":1929,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["deleting",{"_index":1023,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/LogoutService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["deletion",{"_index":545,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":708,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":573,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["description",{"_index":31,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageService.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{}}}],["deserialize",{"_index":2001,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["deserialize(xml",{"_index":2008,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["deserializearray",{"_index":2002,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["deserializearray(xml",{"_index":2014,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["deserializeboolean",{"_index":2003,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["deserializeboolean(xml",{"_index":2019,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["deserialized",{"_index":2013,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["deserializepaginationmetadata",{"_index":2004,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["deserializepaginationmetadata(xml",{"_index":2021,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["deserializes",{"_index":2011,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["deserializing",{"_index":2000,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["detailed",{"_index":1131,"title":{},"body":{"injectables/ErrorHandlingService.html":{},"injectables/NavigationService.html":{}}}],["details",{"_index":77,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/RegisterComponent.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["determines",{"_index":836,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationService.html":{},"guards/UnAuthenticatedGuard.html":{}}}],["dev",{"_index":2215,"title":{},"body":{"index.html":{}}}],["development",{"_index":2212,"title":{},"body":{"index.html":{}}}],["direction",{"_index":555,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["directive",{"_index":167,"title":{"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{}}}],["directives",{"_index":226,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2223,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2227,"title":{},"body":{"index.html":{}}}],["directs",{"_index":1725,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["display",{"_index":1296,"title":{},"body":{"directives/IsAuthorizedDirective.html":{}}}],["displaying",{"_index":629,"title":{},"body":{"components/AllAuthorsComponent.html":{},"injectables/NavigationService.html":{}}}],["displays",{"_index":1302,"title":{},"body":{"directives/IsUnAuthenticatedDirective.html":{}}}],["dist",{"_index":2226,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":411,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["diverse",{"_index":1221,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":2107,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":26,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["domparser",{"_index":2035,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["don't",{"_index":1344,"title":{},"body":{"components/LoginComponent.html":{}}}],["don\\'t",{"_index":1345,"title":{},"body":{"components/LoginComponent.html":{}}}],["dto",{"_index":392,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["during",{"_index":1177,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["dynamic",{"_index":2198,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":97,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["e2e",{"_index":2234,"title":{},"body":{"index.html":{}}}],["easy",{"_index":1229,"title":{},"body":{"components/HomeComponent.html":{}}}],["editor",{"_index":2094,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["effortlessly",{"_index":1224,"title":{},"body":{"components/HomeComponent.html":{}}}],["element",{"_index":166,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/XmlSerializerService.html":{}}}],["emits",{"_index":267,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserService.html":{}}}],["emitting",{"_index":885,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["empty",{"_index":159,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["enable",{"_index":2086,"title":{},"body":{"changelog.html":{}}}],["encountering",{"_index":103,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["end",{"_index":2233,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":942,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["endpoints",{"_index":941,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["environment",{"_index":980,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"components/HomeComponent.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apibaseurl}/${this.authorapi}/${endpoint",{"_index":1044,"title":{},"body":{"injectables/AuthorService.html":{}}}],["environment.apibaseurl}/${this.authorauthorhaikuapi}/${endpoint",{"_index":993,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["environment.apibaseurl}/${this.imageapi}/${endpoint",{"_index":1265,"title":{},"body":{"injectables/ImageService.html":{}}}],["environment.apibaseurl}/${this.profileapi}/${endpoint",{"_index":1489,"title":{},"body":{"injectables/ProfileService.html":{}}}],["environment.apibaseurl}/${this.registerapi}/${endpoint",{"_index":1562,"title":{},"body":{"injectables/RegisterService.html":{}}}],["environment.apibaseurl}/${this.userapi}/${endpoint",{"_index":1563,"title":{},"body":{"injectables/RegisterService.html":{},"injectables/UserService.html":{}}}],["environment.apibaseurl}/${this.useruserhaikuapi}/${endpoint",{"_index":1941,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["environments/environment.development",{"_index":981,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["equal",{"_index":646,"title":{},"body":{"components/AllAuthorsComponent.html":{},"components/UpdateAuthorComponent.html":{}}}],["error",{"_index":86,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{}}}],["error('error",{"_index":2043,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["error(this.getuserfriendlyerrormessage(error",{"_index":1148,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["error(userfriendlymessage",{"_index":1178,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["error.error",{"_index":1149,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["error.error.message",{"_index":1154,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["error.message",{"_index":130,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["error.status",{"_index":1156,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["errorevent",{"_index":1151,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["errorhandler",{"_index":927,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["errorhandlingservice",{"_index":928,"title":{"injectables/ErrorHandlingService.html":{}},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{},"coverage.html":{}}}],["errormessage",{"_index":1145,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["errormessages",{"_index":45,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["errormessages.add",{"_index":149,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{}}}],["errormessages.authorhaikus",{"_index":606,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["errormessages.authors",{"_index":692,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["errormessages.login",{"_index":1343,"title":{},"body":{"components/LoginComponent.html":{}}}],["errormessages.register",{"_index":1524,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errormessages.update",{"_index":1645,"title":{},"body":{"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["errornode",{"_index":2039,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["errornode.length",{"_index":2041,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["errornode[0].textcontent",{"_index":2045,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["errors",{"_index":93,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["errortype",{"_index":253,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["event",{"_index":377,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"interceptors/AuthorizationInterceptor.html":{}}}],["event.target",{"_index":440,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["eventemitter",{"_index":250,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["execute",{"_index":2230,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1459,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["existence",{"_index":1983,"title":{},"body":{"injectables/UsernameValidator.html":{}}}],["existing",{"_index":970,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ProfileService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["exists",{"_index":873,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UsernameValidator.html":{}}}],["expected",{"_index":1585,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["expectedcount",{"_index":1586,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["expiration",{"_index":881,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["expirationtime",{"_index":902,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["expired",{"_index":880,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["expires",{"_index":1379,"title":{},"body":{"injectables/LoginService.html":{}}}],["explains",{"_index":2070,"title":{},"body":{"changelog.html":{}}}],["explore",{"_index":1220,"title":{},"body":{"components/HomeComponent.html":{}}}],["export",{"_index":18,"title":{},"body":{"interfaces/AccountDto.html":{},"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthorDto.html":{},"interfaces/AuthorHaikuDto.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/ImageDto.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"interfaces/JWTokenDto.html":{},"components/LoginComponent.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"interfaces/PaginationMetaDataDto.html":{},"interfaces/ProfileDto.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserDto.html":{},"interfaces/UserHaikuDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"interfaces/UserUpdateDto.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{}}}],["exports",{"_index":712,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":7,"title":{},"body":{"interfaces/AccountDto.html":{}}}],["extract",{"_index":864,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["failed",{"_index":1139,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["fails",{"_index":869,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/AuthorizationService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["failure",{"_index":139,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["false",{"_index":110,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{}}}],["fb",{"_index":249,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["features/author",{"_index":780,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/authors/add",{"_index":772,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/authors/all",{"_index":774,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/authors/single",{"_index":776,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/authors/update",{"_index":778,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/home/home.component",{"_index":755,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/login/login",{"_index":760,"title":{},"body":{"modules/AppModule.html":{}}}],["features/login/login.component",{"_index":763,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/not",{"_index":756,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/profile/profile.component",{"_index":767,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/profile/update",{"_index":768,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/register/register",{"_index":764,"title":{},"body":{"modules/AppModule.html":{}}}],["features/register/register.component",{"_index":766,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/user",{"_index":793,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/users/all",{"_index":787,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/users/single",{"_index":790,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["featuring",{"_index":609,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["fetches",{"_index":959,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/ProfileService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["fetching",{"_index":1012,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["field",{"_index":383,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"modules/AppModule.html":{},"components/UpdateProfileFormComponent.html":{}}}],["fields",{"_index":161,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/LoginComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AccountDto.html":{},"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthorDto.html":{},"interfaces/AuthorHaikuDto.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/ImageDto.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"interfaces/JWTokenDto.html":{},"components/LoginComponent.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"interfaces/PaginationMetaDataDto.html":{},"interfaces/ProfileDto.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserDto.html":{},"interfaces/UserHaikuDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"interfaces/UserUpdateDto.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{},"changelog.html":{},"coverage.html":{}}}],["filepath",{"_index":12,"title":{},"body":{"interfaces/AccountDto.html":{},"interfaces/ImageDto.html":{}}}],["files",{"_index":2220,"title":{},"body":{"index.html":{}}}],["filter",{"_index":954,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["filtered",{"_index":387,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["filteredauthorhaikusdto",{"_index":511,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["filteredauthorsdto",{"_index":343,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["filters",{"_index":394,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["finalize",{"_index":117,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["first",{"_index":531,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"changelog.html":{},"index.html":{}}}],["firstvaluefrom",{"_index":1561,"title":{},"body":{"injectables/RegisterService.html":{}}}],["flag",{"_index":1821,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["following",{"_index":2074,"title":{},"body":{"changelog.html":{}}}],["footer",{"_index":1181,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":190,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["footer.component.css",{"_index":1182,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":1183,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":189,"title":{"components/FooterComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forbidden",{"_index":1166,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["form",{"_index":225,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/MatchingValidator.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["form'},{'name",{"_index":172,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["form.component",{"_index":762,"title":{},"body":{"modules/AppModule.html":{}}}],["form.component.css",{"_index":235,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["form.component.html",{"_index":236,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["form.component.ts",{"_index":233,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:105",{"_index":1809,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:106",{"_index":1667,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["form.component.ts:111",{"_index":1902,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["form.component.ts:118",{"_index":1660,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:121",{"_index":378,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["form.component.ts:123",{"_index":1898,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["form.component.ts:131",{"_index":393,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["form.component.ts:138",{"_index":1818,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:14",{"_index":274,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/LoginFormComponent.html":{}}}],["form.component.ts:143",{"_index":385,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["form.component.ts:15",{"_index":275,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{}}}],["form.component.ts:152",{"_index":374,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:16",{"_index":409,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{}}}],["form.component.ts:166",{"_index":1808,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:169",{"_index":375,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["form.component.ts:17",{"_index":251,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["form.component.ts:18",{"_index":248,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["form.component.ts:180",{"_index":1807,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:181",{"_index":358,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["form.component.ts:19",{"_index":491,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["form.component.ts:197",{"_index":1806,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:20",{"_index":355,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:21",{"_index":492,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["form.component.ts:215",{"_index":1810,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:22",{"_index":402,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["form.component.ts:229",{"_index":1804,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:23",{"_index":401,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:24",{"_index":406,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["form.component.ts:244",{"_index":1802,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:25",{"_index":485,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{}}}],["form.component.ts:26",{"_index":399,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:27",{"_index":1827,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:28",{"_index":1826,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:29",{"_index":1349,"title":{},"body":{"components/LoginFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:30",{"_index":403,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:31",{"_index":1661,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:32",{"_index":265,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts:34",{"_index":395,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["form.component.ts:35",{"_index":400,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{}}}],["form.component.ts:37",{"_index":398,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{}}}],["form.component.ts:38",{"_index":405,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["form.component.ts:39",{"_index":408,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["form.component.ts:40",{"_index":354,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["form.component.ts:42",{"_index":1899,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["form.component.ts:44",{"_index":1668,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["form.component.ts:46",{"_index":1350,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:47",{"_index":487,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{}}}],["form.component.ts:48",{"_index":1531,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:51",{"_index":269,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["form.component.ts:53",{"_index":372,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["form.component.ts:55",{"_index":1805,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:57",{"_index":1654,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["form.component.ts:58",{"_index":373,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/LoginFormComponent.html":{}}}],["form.component.ts:60",{"_index":1530,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:63",{"_index":254,"title":{},"body":{"components/AddAuthorFormComponent.html":{}}}],["form.component.ts:65",{"_index":490,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{}}}],["form.component.ts:66",{"_index":1824,"title":{},"body":{"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["form.component.ts:67",{"_index":356,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["form.component.ts:71",{"_index":1664,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["form.component.ts:77",{"_index":486,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{}}}],["form.component.ts:78",{"_index":1823,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:80",{"_index":357,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["form.component.ts:82",{"_index":1901,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["form.component.ts:88",{"_index":1662,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["form.component.ts:90",{"_index":1825,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["form.component.ts:91",{"_index":359,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["form.component.ts:94",{"_index":1900,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["form/add",{"_index":232,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["form/login",{"_index":761,"title":{},"body":{"modules/AppModule.html":{},"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form/register",{"_index":765,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["form/update",{"_index":770,"title":{},"body":{"modules/AppModule.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{}}}],["formbuilder",{"_index":247,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["formdata",{"_index":1269,"title":{},"body":{"injectables/ImageService.html":{}}}],["formdata.append('file",{"_index":1270,"title":{},"body":{"injectables/ImageService.html":{}}}],["formgroup",{"_index":273,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"classes/MatchingValidator.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["formgroup.get(controlname",{"_index":1411,"title":{},"body":{"classes/MatchingValidator.html":{}}}],["formgroup.get(matchingcontrolname",{"_index":1413,"title":{},"body":{"classes/MatchingValidator.html":{}}}],["formprofilesubmit",{"_index":1799,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["formsmodule",{"_index":735,"title":{},"body":{"modules/AppModule.html":{}}}],["formsubmit",{"_index":245,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["formusersubmit",{"_index":1800,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["found",{"_index":616,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/ErrorHandlingService.html":{},"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":200,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["found.component",{"_index":758,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":1456,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1455,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found/not",{"_index":757,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["friendly",{"_index":1134,"title":{},"body":{"injectables/ErrorHandlingService.html":{},"components/HomeComponent.html":{}}}],["full",{"_index":826,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":1404,"title":{},"body":{"classes/MatchingValidator.html":{},"classes/SyllableValidator.html":{},"injectables/UsernameValidator.html":{}}}],["further",{"_index":2240,"title":{},"body":{"index.html":{}}}],["generate",{"_index":2076,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["generated",{"_index":2209,"title":{},"body":{"index.html":{}}}],["generates",{"_index":961,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["getallauthorhaikus",{"_index":919,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["getallauthorhaikus(currentpage",{"_index":950,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["getallauthorhaikusbyauthorid",{"_index":920,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["getallauthorhaikusbyauthorid(authorid",{"_index":955,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["getallauthors",{"_index":1027,"title":{},"body":{"injectables/AuthorService.html":{}}}],["getallauthors(currentpage",{"_index":1037,"title":{},"body":{"injectables/AuthorService.html":{}}}],["getallprofilesbyuserids",{"_index":1466,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getallprofilesbyuserids(userids",{"_index":1472,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getalluserhaikus",{"_index":1922,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["getalluserhaikus(currentpage",{"_index":1931,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["getalluserhaikusbyuserid",{"_index":1923,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["getalluserhaikusbyuserid(userid",{"_index":1933,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["getallusers",{"_index":1951,"title":{},"body":{"injectables/UserService.html":{}}}],["getallusers(currentpage",{"_index":1960,"title":{},"body":{"injectables/UserService.html":{}}}],["getauthorbyid",{"_index":1028,"title":{},"body":{"injectables/AuthorService.html":{}}}],["getauthorbyid(authorid",{"_index":1039,"title":{},"body":{"injectables/AuthorService.html":{}}}],["getauthorhaikubyid",{"_index":921,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["getauthorhaikubyid(authorhaikuid",{"_index":957,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["getheaders",{"_index":922,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["getimagebyid",{"_index":1244,"title":{},"body":{"injectables/ImageService.html":{}}}],["getimagebyid(imageid",{"_index":1249,"title":{},"body":{"injectables/ImageService.html":{}}}],["getprofilebyid",{"_index":1467,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilebyid(profileid",{"_index":1477,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilebyuserid",{"_index":1468,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilebyuserid(userid",{"_index":1480,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getting",{"_index":2067,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["gettoken",{"_index":852,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["getuserbyid",{"_index":1952,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid(userid",{"_index":1963,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserfriendlyerrormessage",{"_index":1127,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["getuserfriendlyerrormessage(error",{"_index":1132,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["getuserhaikubyid",{"_index":1924,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["getuserhaikubyid(userhaikuid",{"_index":1936,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["getuserid",{"_index":853,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["git",{"_index":2082,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":1577,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["go",{"_index":2242,"title":{},"body":{"index.html":{}}}],["graph",{"_index":2247,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":828,"title":{"guards/AuthenticationGuard.html":{},"guards/AuthorizationGuard.html":{},"guards/UnAuthenticatedGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"guards/AuthorizationGuard.html":{},"guards/UnAuthenticatedGuard.html":{},"coverage.html":{}}}],["guards",{"_index":805,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"guards/AuthorizationGuard.html":{},"guards/UnAuthenticatedGuard.html":{},"overview.html":{}}}],["haiku",{"_index":176,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorHaikuService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"coverage.html":{}}}],["haiku's",{"_index":971,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/UserHaikuService.html":{}}}],["haiku'},{'name",{"_index":174,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["haiku.component",{"_index":781,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["haiku.component.css",{"_index":309,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["haiku.component.html",{"_index":310,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["haiku.component.ts",{"_index":308,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"coverage.html":{}}}],["haiku.component.ts:100",{"_index":1886,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["haiku.component.ts:14",{"_index":324,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{}}}],["haiku.component.ts:15",{"_index":1698,"title":{},"body":{"components/UpdateAuthorHaikuComponent.html":{}}}],["haiku.component.ts:16",{"_index":322,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{}}}],["haiku.component.ts:17",{"_index":476,"title":{},"body":{"components/AddUserHaikuComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{}}}],["haiku.component.ts:18",{"_index":1889,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["haiku.component.ts:19",{"_index":474,"title":{},"body":{"components/AddUserHaikuComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["haiku.component.ts:20",{"_index":323,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{}}}],["haiku.component.ts:21",{"_index":1888,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["haiku.component.ts:22",{"_index":314,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{}}}],["haiku.component.ts:23",{"_index":475,"title":{},"body":{"components/AddUserHaikuComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{}}}],["haiku.component.ts:25",{"_index":466,"title":{},"body":{"components/AddUserHaikuComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["haiku.component.ts:27",{"_index":1878,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["haiku.component.ts:29",{"_index":320,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{}}}],["haiku.component.ts:33",{"_index":472,"title":{},"body":{"components/AddUserHaikuComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{}}}],["haiku.component.ts:34",{"_index":321,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{}}}],["haiku.component.ts:35",{"_index":1883,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["haiku.component.ts:38",{"_index":473,"title":{},"body":{"components/AddUserHaikuComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{}}}],["haiku.component.ts:40",{"_index":1884,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["haiku.component.ts:42",{"_index":318,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{}}}],["haiku.component.ts:46",{"_index":470,"title":{},"body":{"components/AddUserHaikuComponent.html":{}}}],["haiku.component.ts:51",{"_index":1691,"title":{},"body":{"components/UpdateAuthorHaikuComponent.html":{}}}],["haiku.component.ts:52",{"_index":1879,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["haiku.component.ts:55",{"_index":319,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{}}}],["haiku.component.ts:59",{"_index":471,"title":{},"body":{"components/AddUserHaikuComponent.html":{}}}],["haiku.component.ts:64",{"_index":1692,"title":{},"body":{"components/UpdateAuthorHaikuComponent.html":{}}}],["haiku.component.ts:65",{"_index":1880,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["haiku.component.ts:67",{"_index":317,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{}}}],["haiku.component.ts:71",{"_index":469,"title":{},"body":{"components/AddUserHaikuComponent.html":{}}}],["haiku.component.ts:76",{"_index":1694,"title":{},"body":{"components/UpdateAuthorHaikuComponent.html":{}}}],["haiku.component.ts:77",{"_index":1882,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["haiku.component.ts:99",{"_index":1696,"title":{},"body":{"components/UpdateAuthorHaikuComponent.html":{}}}],["haiku.service",{"_index":326,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["haiku.service.ts",{"_index":914,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/UserHaikuService.html":{},"coverage.html":{}}}],["haiku.service.ts:116",{"_index":1937,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["haiku.service.ts:126",{"_index":958,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["haiku.service.ts:134",{"_index":1928,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["haiku.service.ts:144",{"_index":933,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["haiku.service.ts:153",{"_index":1938,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["haiku.service.ts:163",{"_index":969,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["haiku.service.ts:170",{"_index":1930,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["haiku.service.ts:18",{"_index":1926,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["haiku.service.ts:180",{"_index":947,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["haiku.service.ts:19",{"_index":930,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["haiku.service.ts:32",{"_index":1935,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["haiku.service.ts:34",{"_index":960,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["haiku.service.ts:46",{"_index":1940,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["haiku.service.ts:56",{"_index":937,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["haiku.service.ts:60",{"_index":1932,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["haiku.service.ts:70",{"_index":952,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["haiku.service.ts:89",{"_index":1934,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["haiku.service.ts:99",{"_index":956,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["haiku/:id",{"_index":819,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["haiku/add",{"_index":307,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["haiku/single",{"_index":784,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["haiku/update",{"_index":786,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{}}}],["haikus",{"_index":507,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorHaikuService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/NavigationService.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserHaikuService.html":{}}}],["haikus'},{'name",{"_index":181,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["haikus.component",{"_index":782,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["haikus.component.html",{"_index":508,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts",{"_index":506,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"coverage.html":{}}}],["haikus.component.ts:115",{"_index":525,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:13",{"_index":578,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:14",{"_index":571,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:141",{"_index":551,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:151",{"_index":560,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:16",{"_index":562,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:161",{"_index":558,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:17",{"_index":566,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:171",{"_index":542,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:180",{"_index":552,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:19",{"_index":574,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:194",{"_index":529,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:20",{"_index":570,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:206",{"_index":536,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:21",{"_index":561,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:23",{"_index":563,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:24",{"_index":569,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:25",{"_index":576,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:26",{"_index":577,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:28",{"_index":575,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:32",{"_index":565,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:36",{"_index":567,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:38",{"_index":523,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:44",{"_index":533,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:49",{"_index":534,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:60",{"_index":524,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:76",{"_index":528,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus.component.ts:87",{"_index":532,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["haikus/add",{"_index":306,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["haikus/all",{"_index":505,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["haikus/single",{"_index":783,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["haikus/update",{"_index":785,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{}}}],["handle",{"_index":369,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"injectables/ErrorHandlingService.html":{}}}],["handleerror",{"_index":52,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["handleerror(error",{"_index":90,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["handler",{"_index":1079,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["handles",{"_index":92,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["handleserializationerror",{"_index":1128,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["handleserializationerror(error",{"_index":1142,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["handling",{"_index":1123,"title":{},"body":{"injectables/ErrorHandlingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{}}}],["handling.service",{"_index":983,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{}}}],["handling.service.ts",{"_index":1122,"title":{},"body":{"injectables/ErrorHandlingService.html":{},"coverage.html":{}}}],["handling.service.ts:20",{"_index":1136,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["handling.service.ts:33",{"_index":1130,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["handling.service.ts:45",{"_index":1133,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["handling.service.ts:70",{"_index":1143,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["haserror",{"_index":241,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["haserror(controlname",{"_index":252,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["hasmoreauthors",{"_index":344,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["hasprofileerror",{"_index":1787,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["hasprofileerror(controlname",{"_index":1801,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["hasrequiredrole",{"_index":1093,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["hasrequiredrole(requiredroles",{"_index":1099,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["hasusererror",{"_index":1788,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["hasusererror(controlname",{"_index":1803,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["header",{"_index":1200,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":192,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["header.component.css",{"_index":1201,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":1202,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":191,"title":{"components/HeaderComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":962,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["headers.set('authorization",{"_index":991,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["help",{"_index":2241,"title":{},"body":{"index.html":{}}}],["home",{"_index":815,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["home'},{'name",{"_index":194,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["home.component.html",{"_index":1216,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":193,"title":{"components/HomeComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":2098,"title":{},"body":{"changelog.html":{}}}],["html",{"_index":165,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["htmlinputelement",{"_index":441,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["http",{"_index":931,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":2217,"title":{},"body":{"index.html":{}}}],["http://localhost:5104/api",{"_index":2258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":732,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":924,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":733,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":975,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["httpevent",{"_index":1082,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["httphandler",{"_index":1071,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["httpheaders",{"_index":964,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["httpinterceptor",{"_index":1081,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["httprequest",{"_index":1070,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["id",{"_index":391,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthorDto.html":{},"interfaces/AuthorHaikuDto.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"interfaces/ImageDto.html":{},"injectables/ImageService.html":{},"injectables/NavigationService.html":{},"interfaces/ProfileDto.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserDto.html":{},"interfaces/UserHaikuDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"interfaces/UserUpdateDto.html":{}}}],["id:number",{"_index":910,"title":{},"body":{"interfaces/AuthorDto.html":{}}}],["identifier",{"_index":2108,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1474,"title":{},"body":{"injectables/ProfileService.html":{}}}],["ids?userids=${useridsquery",{"_index":1494,"title":{},"body":{"injectables/ProfileService.html":{}}}],["image",{"_index":1242,"title":{},"body":{"injectables/ImageService.html":{}}}],["image/${currentimageid}/${currentuserid",{"_index":1268,"title":{},"body":{"injectables/ImageService.html":{}}}],["imageapi",{"_index":1243,"title":{},"body":{"injectables/ImageService.html":{}}}],["imagedto",{"_index":1237,"title":{"interfaces/ImageDto.html":{}},"body":{"interfaces/ImageDto.html":{},"injectables/ImageService.html":{},"coverage.html":{}}}],["imageid",{"_index":1251,"title":{},"body":{"injectables/ImageService.html":{},"interfaces/ProfileDto.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["images",{"_index":1241,"title":{},"body":{"injectables/ImageService.html":{}}}],["imageservice",{"_index":1239,"title":{"injectables/ImageService.html":{}},"body":{"injectables/ImageService.html":{},"coverage.html":{}}}],["imageurl",{"_index":1245,"title":{},"body":{"injectables/ImageService.html":{},"components/UpdateProfileFormComponent.html":{}}}],["imageurl(endpoint",{"_index":1252,"title":{},"body":{"injectables/ImageService.html":{}}}],["implements",{"_index":34,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"guards/AuthenticationGuard.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"components/HeaderComponent.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"index.html":{}}}],["import",{"_index":16,"title":{},"body":{"interfaces/AccountDto.html":{},"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{}}}],["imports",{"_index":725,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AccountDto.html":{},"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthorDto.html":{},"interfaces/AuthorHaikuDto.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ImageDto.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"interfaces/JWTokenDto.html":{},"components/LoginComponent.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"interfaces/PaginationMetaDataDto.html":{},"interfaces/ProfileDto.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserDto.html":{},"interfaces/UserHaikuDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"interfaces/UserUpdateDto.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":886,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"directives/IsUnAuthenticatedDirective.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AccountDto.html":{},"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthorDto.html":{},"interfaces/AuthorHaikuDto.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/ImageDto.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"interfaces/JWTokenDto.html":{},"components/LoginComponent.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"interfaces/PaginationMetaDataDto.html":{},"interfaces/ProfileDto.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserDto.html":{},"interfaces/UserHaikuDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"interfaces/UserUpdateDto.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{}}}],["information",{"_index":972,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ProfileService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["initial",{"_index":1657,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["initialformvalues",{"_index":1648,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["initialization",{"_index":1659,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["initialprofileformvalues",{"_index":1780,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["initialuserformvalues",{"_index":1781,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["injectable",{"_index":841,"title":{"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"guards/UnAuthenticatedGuard.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{},"coverage.html":{}}}],["injectables",{"_index":846,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{},"overview.html":{}}}],["input",{"_index":379,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/ErrorHandlingService.html":{},"directives/IsAuthorizedDirective.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["inputelement",{"_index":439,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["inputelement.value",{"_index":443,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["inputs",{"_index":1278,"title":{},"body":{"directives/IsAuthorizedDirective.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["inputvalue",{"_index":442,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["install",{"_index":2081,"title":{},"body":{"changelog.html":{}}}],["instanceof",{"_index":1150,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["intercept",{"_index":1067,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["intercept(req",{"_index":1069,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["intercepted",{"_index":1078,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["interceptor",{"_index":1065,"title":{"interceptors/AuthorizationInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":797,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthorizationInterceptor.html":{}}}],["intercepts",{"_index":1073,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AccountDto.html":{},"interfaces/AuthorDto.html":{},"interfaces/AuthorHaikuDto.html":{},"interfaces/ImageDto.html":{},"interfaces/JWTokenDto.html":{},"interfaces/LoginDto.html":{},"interfaces/PaginationMetaDataDto.html":{},"interfaces/ProfileDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/UserDto.html":{},"interfaces/UserHaikuDto.html":{},"interfaces/UserUpdateDto.html":{}},"body":{"interfaces/AccountDto.html":{},"interfaces/AuthorDto.html":{},"interfaces/AuthorHaikuDto.html":{},"interfaces/ImageDto.html":{},"interfaces/JWTokenDto.html":{},"interfaces/LoginDto.html":{},"interfaces/PaginationMetaDataDto.html":{},"interfaces/ProfileDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/UserDto.html":{},"interfaces/UserHaikuDto.html":{},"interfaces/UserUpdateDto.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AccountDto.html":{},"interfaces/AuthorDto.html":{},"interfaces/AuthorHaikuDto.html":{},"interfaces/ImageDto.html":{},"interfaces/JWTokenDto.html":{},"interfaces/LoginDto.html":{},"interfaces/PaginationMetaDataDto.html":{},"interfaces/ProfileDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/UserDto.html":{},"interfaces/UserHaikuDto.html":{},"interfaces/UserUpdateDto.html":{},"overview.html":{}}}],["invalid",{"_index":258,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["irreversible",{"_index":625,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["isauthenticated",{"_index":849,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"directives/IsUnAuthenticatedDirective.html":{}}}],["isauthenticatedsubject",{"_index":850,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isauthorized",{"_index":1091,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["isauthorizeddirective",{"_index":227,"title":{"directives/IsAuthorizedDirective.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IsAuthorizedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["isauthorizedforroles",{"_index":1094,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["isauthorizedforroles(requiredroles",{"_index":1104,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["isauthorizedsubject",{"_index":1092,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["isnotauthorone",{"_index":635,"title":{},"body":{"components/AllAuthorsComponent.html":{},"components/UpdateAuthorComponent.html":{}}}],["isnotauthorone(authorid",{"_index":644,"title":{},"body":{"components/AllAuthorsComponent.html":{},"components/UpdateAuthorComponent.html":{}}}],["ispageempty",{"_index":515,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["isprofilesubmitted",{"_index":1782,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["issubmitted",{"_index":240,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["istokenexpired",{"_index":854,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["istokenexpired(token",{"_index":878,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["istokenvalid",{"_index":855,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["isunauthenticateddirective",{"_index":229,"title":{"directives/IsUnAuthenticatedDirective.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["isusernamechanged",{"_index":1783,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["isusersubmitted",{"_index":1784,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["item[propname",{"_index":2064,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["items",{"_index":2018,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["itemtype",{"_index":2015,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["javascript",{"_index":2012,"title":{},"body":{"injectables/XmlSerializerService.html":{},"changelog.html":{}}}],["jest",{"_index":2093,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["join",{"_index":1234,"title":{},"body":{"components/HomeComponent.html":{}}}],["json",{"_index":1002,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["json.stringify(currentformvalues",{"_index":1678,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["json.stringify(currentprofileformvalues",{"_index":1845,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["json.stringify(currentuserformvalues",{"_index":1842,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["json.stringify(this.initialformvalues",{"_index":1677,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["json.stringify(this.initialprofileformvalues",{"_index":1844,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["json.stringify(this.initialuserformvalues",{"_index":1841,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["jwt",{"_index":862,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"dependencies.html":{}}}],["jwt_decode",{"_index":889,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["jwt_decode(token",{"_index":906,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["jwtdto",{"_index":1376,"title":{},"body":{"injectables/LoginService.html":{}}}],["jwtdto.token",{"_index":1378,"title":{},"body":{"injectables/LoginService.html":{}}}],["jwtokendto",{"_index":1311,"title":{"interfaces/JWTokenDto.html":{}},"body":{"interfaces/JWTokenDto.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["jwtpayload",{"_index":890,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["karma",{"_index":2232,"title":{},"body":{"index.html":{}}}],["karma.conf.js",{"_index":2099,"title":{},"body":{"changelog.html":{}}}],["keyof",{"_index":2057,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["known",{"_index":1223,"title":{},"body":{"components/HomeComponent.html":{}}}],["label=\"page",{"_index":618,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["laquo",{"_index":620,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["later",{"_index":136,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["launch.json",{"_index":2085,"title":{},"body":{"changelog.html":{}}}],["le$/.test(word",{"_index":1595,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["left",{"_index":158,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/FooterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["legend",{"_index":164,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"overview.html":{}}}],["length",{"_index":151,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["less",{"_index":300,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["line",{"_index":331,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"changelog.html":{}}}],["line.split(/\\s",{"_index":1589,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["line.tolowercase().replace(/[.,!?]/g",{"_index":1588,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["lineone",{"_index":416,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"interfaces/AuthorHaikuDto.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserHaikuDto.html":{}}}],["lines",{"_index":610,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"classes/SyllableValidator.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["linethree",{"_index":420,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"interfaces/AuthorHaikuDto.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserHaikuDto.html":{}}}],["linetwo",{"_index":418,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"interfaces/AuthorHaikuDto.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserHaikuDto.html":{}}}],["list",{"_index":362,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ProfileService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["literal",{"_index":106,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["load",{"_index":540,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["loadauthorbyid",{"_index":1616,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["loadauthorbyid(authorid",{"_index":1622,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["loadauthorhaikubyid",{"_index":1690,"title":{},"body":{"components/UpdateAuthorHaikuComponent.html":{}}}],["loadauthorhaikubyid(authorhaikuid",{"_index":1693,"title":{},"body":{"components/UpdateAuthorHaikuComponent.html":{}}}],["loadauthorhaikus",{"_index":516,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["loadauthors",{"_index":350,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["loading",{"_index":89,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["loadingstates",{"_index":46,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["loadprofilebyuserid",{"_index":1713,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["loadprofilebyuserid(userid",{"_index":1721,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["loads",{"_index":360,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["loaduserandprofile",{"_index":1714,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["loaduserandprofile(userid",{"_index":1723,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["loaduserhaikubyid",{"_index":1877,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["loaduserhaikubyid(userhaikuid",{"_index":1881,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["location",{"_index":2090,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":1163,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["logging",{"_index":1141,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["login",{"_index":198,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["login'},{'name",{"_index":196,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["login(logindto",{"_index":1322,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["login.component.css",{"_index":1314,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1315,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginapi",{"_index":1365,"title":{},"body":{"injectables/LoginService.html":{}}}],["logincomponent",{"_index":195,"title":{"components/LoginComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logindto",{"_index":1316,"title":{"interfaces/LoginDto.html":{}},"body":{"components/LoginComponent.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["logindto.password",{"_index":1340,"title":{},"body":{"components/LoginComponent.html":{}}}],["logindto.username",{"_index":1338,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform",{"_index":1348,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginformcomponent",{"_index":197,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginservice",{"_index":1318,"title":{"injectables/LoginService.html":{}},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["logout",{"_index":1203,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/LogoutService.html":{}}}],["logoutservice",{"_index":1205,"title":{"injectables/LogoutService.html":{}},"body":{"components/HeaderComponent.html":{},"injectables/LogoutService.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["logs",{"_index":1137,"title":{},"body":{"injectables/ErrorHandlingService.html":{},"components/HeaderComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["long",{"_index":1360,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["looking",{"_index":1458,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["lost",{"_index":1778,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["lowercase",{"_index":1814,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["made",{"_index":1655,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["main",{"_index":698,"title":{},"body":{"components/AppComponent.html":{}}}],["making",{"_index":1228,"title":{},"body":{"components/HomeComponent.html":{}}}],["manage",{"_index":1225,"title":{},"body":{"components/HomeComponent.html":{}}}],["managing",{"_index":630,"title":{},"body":{"components/AllAuthorsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/AuthorizationService.html":{},"injectables/ImageService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["manuel",{"_index":1197,"title":{},"body":{"components/FooterComponent.html":{}}}],["map",{"_index":978,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{}}}],["map(exists",{"_index":1994,"title":{},"body":{"injectables/UsernameValidator.html":{}}}],["map(response",{"_index":1005,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ProfileService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["map(responsexml",{"_index":1015,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["marked",{"_index":162,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/LoginComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["matautocompletemodule",{"_index":745,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1407,"title":{},"body":{"classes/MatchingValidator.html":{},"components/RegisterFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["matches",{"_index":263,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["matches.length",{"_index":1598,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["matching",{"_index":20,"title":{},"body":{"interfaces/AccountDto.html":{},"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthorDto.html":{},"interfaces/AuthorHaikuDto.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/ImageDto.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"interfaces/JWTokenDto.html":{},"components/LoginComponent.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"interfaces/PaginationMetaDataDto.html":{},"interfaces/ProfileDto.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserDto.html":{},"interfaces/UserHaikuDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"interfaces/UserUpdateDto.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrol",{"_index":1412,"title":{},"body":{"classes/MatchingValidator.html":{}}}],["matchingcontrol.errors",{"_index":1414,"title":{},"body":{"classes/MatchingValidator.html":{}}}],["matchingcontrol.errors['match",{"_index":1415,"title":{},"body":{"classes/MatchingValidator.html":{}}}],["matchingcontrol.seterrors",{"_index":1418,"title":{},"body":{"classes/MatchingValidator.html":{}}}],["matchingcontrol.seterrors(null",{"_index":1419,"title":{},"body":{"classes/MatchingValidator.html":{}}}],["matchingcontrol.value",{"_index":1417,"title":{},"body":{"classes/MatchingValidator.html":{}}}],["matchingcontrolname",{"_index":1401,"title":{},"body":{"classes/MatchingValidator.html":{}}}],["matchingvalidator",{"_index":1393,"title":{"classes/MatchingValidator.html":{}},"body":{"classes/MatchingValidator.html":{},"components/RegisterFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"coverage.html":{}}}],["matchingvalidator(controlname",{"_index":1400,"title":{},"body":{"classes/MatchingValidator.html":{}}}],["matchingvalidator.matchingvalidator('password",{"_index":1536,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["matformfieldmodule",{"_index":741,"title":{},"body":{"modules/AppModule.html":{}}}],["math.ceil(this.totalcount",{"_index":435,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["math.max(1",{"_index":586,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"classes/SyllableValidator.html":{}}}],["math.min(this.currentpage",{"_index":587,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["matinputmodule",{"_index":743,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":154,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["message",{"_index":101,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["messages",{"_index":87,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["metadata",{"_index":37,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{}}}],["method",{"_index":81,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["methods",{"_index":49,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{}}}],["methodstointercept",{"_index":1083,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["methodstointercept.includes(req.method",{"_index":1084,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["minimum",{"_index":150,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["miscellaneous",{"_index":2253,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":544,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["module",{"_index":705,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":707,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":301,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"index.html":{}}}],["multi",{"_index":801,"title":{},"body":{"modules/AppModule.html":{}}}],["myhaikus",{"_index":704,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"changelog.html":{},"index.html":{}}}],["myhaikus.esproj",{"_index":2084,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":62,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthorDto.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{},"index.html":{}}}],["namea",{"_index":685,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["nameb",{"_index":687,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["navigate",{"_index":2216,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":68,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/NavigationService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["navigation",{"_index":619,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/NavigationService.html":{}}}],["navigationservice",{"_index":522,"title":{"injectables/NavigationService.html":{}},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/HeaderComponent.html":{},"injectables/NavigationService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["necessary",{"_index":1167,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["need",{"_index":2237,"title":{},"body":{"index.html":{}}}],["new",{"_index":112,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"injectables/ImageService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["newauthordto",{"_index":1032,"title":{},"body":{"injectables/AuthorService.html":{}}}],["newauthorhaikudto",{"_index":935,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["newly",{"_index":71,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{}}}],["newpage",{"_index":539,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["newregisterdto",{"_index":1538,"title":{},"body":{"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{}}}],["newuserdto",{"_index":1957,"title":{},"body":{"injectables/UserService.html":{}}}],["newuserhaikudto",{"_index":499,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{}}}],["next",{"_index":145,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"interceptors/AuthorizationInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["next.handle(clonedrequest",{"_index":1088,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["next.handle(req",{"_index":1089,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["ng",{"_index":739,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodule",{"_index":738,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":726,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":1651,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["ngondestroy",{"_index":53,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["ngoninit",{"_index":54,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/HeaderComponent.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["ngx",{"_index":748,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/RegisterService.html":{},"dependencies.html":{}}}],["node",{"_index":2047,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["node.element_node",{"_index":2054,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["node.nodename",{"_index":2056,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["node.nodetype",{"_index":2048,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["node.textcontent",{"_index":2050,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["notfoundcomponent",{"_index":199,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nuget.config",{"_index":2088,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":108,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/HeaderComponent.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"classes/MatchingValidator.html":{},"components/RegisterComponent.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UsernameValidator.html":{}}}],["number",{"_index":396,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthorDto.html":{},"interfaces/AuthorHaikuDto.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ImageDto.html":{},"injectables/ImageService.html":{},"injectables/NavigationService.html":{},"interfaces/PaginationMetaDataDto.html":{},"interfaces/ProfileDto.html":{},"injectables/ProfileService.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"interfaces/UserDto.html":{},"interfaces/UserHaikuDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"interfaces/UserUpdateDto.html":{}}}],["number(node.textcontent",{"_index":2059,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["obj",{"_index":2027,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["obj[node.nodename",{"_index":2049,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["obj[prop",{"_index":2032,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["obj[propname",{"_index":2058,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["objarray",{"_index":2060,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["objarray.push(item",{"_index":2066,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["object",{"_index":75,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":2017,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["observable",{"_index":887,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{}}}],["observe",{"_index":1003,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ProfileService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["occurred",{"_index":132,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["of(null",{"_index":1996,"title":{},"body":{"injectables/UsernameValidator.html":{}}}],["onchanges",{"_index":1647,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["ondestroy",{"_index":36,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["one",{"_index":332,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"injectables/AuthorizationService.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["oninit",{"_index":35,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["onpagechange",{"_index":517,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["onpagechange(newpage",{"_index":535,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["onprofilesubmit",{"_index":1789,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["onsubmit",{"_index":242,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["onusersubmit",{"_index":1790,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["openauthorhaikumodal",{"_index":518,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["openauthorhaikumodal(authorhaikuid",{"_index":541,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["openauthormodal",{"_index":636,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["openauthormodal(authorid",{"_index":653,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["opens",{"_index":543,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["openusermodal",{"_index":1715,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["operation",{"_index":102,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["operation='operation",{"_index":1144,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["operations",{"_index":96,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["operators",{"_index":368,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["optional",{"_index":63,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/HeaderComponent.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{}}}],["original",{"_index":1665,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["others",{"_index":1227,"title":{},"body":{"components/HomeComponent.html":{}}}],["otherwise",{"_index":647,"title":{},"body":{"components/AllAuthorsComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserService.html":{}}}],["out",{"_index":723,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"injectables/LogoutService.html":{},"index.html":{},"overview.html":{}}}],["outgoing",{"_index":1077,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["output",{"_index":276,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["outputs",{"_index":244,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["overview",{"_index":2243,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":2191,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":2092,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":70,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["pagesize",{"_index":345,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"interfaces/PaginationMetaDataDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{}}}],["pagesize=10",{"_index":995,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["paginated",{"_index":361,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["pagination",{"_index":537,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{}}}],["paginationdata",{"_index":1007,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["paginationmetadata",{"_index":430,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["paginationmetadata.totalcount",{"_index":433,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["paginationmetadatadto",{"_index":986,"title":{"interfaces/PaginationMetaDataDto.html":{}},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"interfaces/PaginationMetaDataDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{},"coverage.html":{}}}],["param",{"_index":127,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{}}}],["parameters",{"_index":61,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/HeaderComponent.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{}}}],["parseint(payload['nameid",{"_index":908,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["parser",{"_index":2034,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["parser.parsefromstring(xml",{"_index":2037,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["parsing",{"_index":2044,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["password",{"_index":1326,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"interfaces/UserDto.html":{},"interfaces/UserUpdateDto.html":{}}}],["passwords",{"_index":1544,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["patched",{"_index":1819,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["patchedusername",{"_index":1854,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["patches",{"_index":388,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["patchform",{"_index":1652,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["patchprofileform",{"_index":1791,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["patchuserform",{"_index":1792,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["path",{"_index":813,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":825,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":865,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["payload.exp",{"_index":901,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["payload[\"role",{"_index":1119,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["per",{"_index":953,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["permissions",{"_index":1168,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["pipe",{"_index":1004,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["pipe(debouncetime(300",{"_index":1847,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["platform",{"_index":1218,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["please",{"_index":133,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["poetry",{"_index":1233,"title":{},"body":{"components/HomeComponent.html":{}}}],["point",{"_index":2103,"title":{},"body":{"changelog.html":{}}}],["post",{"_index":1074,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["prevents",{"_index":1606,"title":{},"body":{"guards/UnAuthenticatedGuard.html":{}}}],["private",{"_index":47,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/HeaderComponent.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["processes",{"_index":1125,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["profile",{"_index":221,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{}}}],["profile's",{"_index":1487,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdateProfileFormComponent.html":{}}}],["profile'},{'name",{"_index":202,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["profile.component",{"_index":771,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.css",{"_index":1708,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.html",{"_index":1709,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts",{"_index":1707,"title":{},"body":{"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:123",{"_index":1722,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:145",{"_index":1734,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:173",{"_index":1730,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:199",{"_index":1719,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:22",{"_index":1741,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:221",{"_index":1736,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:230",{"_index":1728,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:24",{"_index":1742,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:25",{"_index":1739,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:26",{"_index":1745,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:27",{"_index":1743,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:28",{"_index":1744,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:30",{"_index":1740,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:34",{"_index":1737,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:38",{"_index":1738,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:40",{"_index":1717,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:50",{"_index":1726,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:55",{"_index":1727,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:69",{"_index":1718,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:85",{"_index":1720,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:97",{"_index":1724,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile/update",{"_index":769,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"coverage.html":{}}}],["profileapi",{"_index":1465,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profilechangesmade",{"_index":1793,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["profilecomponent",{"_index":201,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profiledto",{"_index":1461,"title":{"interfaces/ProfileDto.html":{}},"body":{"interfaces/ProfileDto.html":{},"injectables/ProfileService.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"injectables/XmlSerializerService.html":{},"coverage.html":{}}}],["profileid",{"_index":1479,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profiles",{"_index":822,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/ProfileService.html":{}}}],["profileservice",{"_index":1463,"title":{"injectables/ProfileService.html":{}},"body":{"injectables/ProfileService.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["profileupdateddto",{"_index":1869,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["profileurl",{"_index":1469,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profileurl(endpoint",{"_index":1482,"title":{},"body":{"injectables/ProfileService.html":{}}}],["project",{"_index":2073,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["prop",{"_index":2031,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"interfaces/AccountDto.html":{},"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthorDto.html":{},"interfaces/AuthorHaikuDto.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/AuthorizationService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ImageDto.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"interfaces/JWTokenDto.html":{},"components/LoginComponent.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"interfaces/PaginationMetaDataDto.html":{},"interfaces/ProfileDto.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserDto.html":{},"interfaces/UserHaikuDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"interfaces/UserUpdateDto.html":{},"properties.html":{}}}],["propname",{"_index":2055,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["provide",{"_index":799,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorHandlingService.html":{}}}],["provided",{"_index":264,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/ImageService.html":{},"components/LoginFormComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["providedin",{"_index":843,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"guards/UnAuthenticatedGuard.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{}}}],["providers",{"_index":711,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providing",{"_index":915,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["public",{"_index":848,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/AuthorizationService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["put",{"_index":1075,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["raquo",{"_index":621,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["reactiveformsmodule",{"_index":736,"title":{},"body":{"modules/AppModule.html":{}}}],["readonly",{"_index":238,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/LoginService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["redirected",{"_index":1611,"title":{},"body":{"guards/UnAuthenticatedGuard.html":{}}}],["redirects",{"_index":823,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirectto",{"_index":824,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduce",{"_index":1816,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["reference",{"_index":2244,"title":{},"body":{"index.html":{}}}],["register",{"_index":206,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["register'},{'name",{"_index":204,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["register(registerdto",{"_index":1507,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.css",{"_index":1498,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1499,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerapi",{"_index":1547,"title":{},"body":{"injectables/RegisterService.html":{}}}],["registercomponent",{"_index":203,"title":{"components/RegisterComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerdto",{"_index":1508,"title":{"interfaces/RegisterDto.html":{}},"body":{"components/RegisterComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["registered",{"_index":1522,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform",{"_index":1528,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["registerformcomponent",{"_index":205,"title":{"components/RegisterFormComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registers",{"_index":1510,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/RegisterService.html":{}}}],["registerservice",{"_index":1501,"title":{"injectables/RegisterService.html":{}},"body":{"components/RegisterComponent.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["registerurl",{"_index":1550,"title":{},"body":{"injectables/RegisterService.html":{}}}],["registerurl(endpoint",{"_index":1556,"title":{},"body":{"injectables/RegisterService.html":{}}}],["registration",{"_index":759,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["related",{"_index":88,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"components/LoginComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"injectables/RegisterService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["reload",{"_index":2219,"title":{},"body":{"index.html":{}}}],["reloads",{"_index":1731,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["representing",{"_index":1180,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{}}}],["req",{"_index":1076,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["req.clone",{"_index":1086,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["req.headers.set('authorization",{"_index":1087,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["request",{"_index":996,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["requested",{"_index":1170,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["requests",{"_index":963,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["required",{"_index":163,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["requiredrole",{"_index":816,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["requiredroles",{"_index":1061,"title":{},"body":{"guards/AuthorizationGuard.html":{},"injectables/AuthorizationService.html":{}}}],["requiredroles.includes(userrole",{"_index":1120,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["reset",{"_index":722,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetform",{"_index":243,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["resets",{"_index":270,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["resource",{"_index":1171,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["response",{"_index":100,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["response.headers.get('x",{"_index":1008,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["response.id",{"_index":147,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{}}}],["responsetype",{"_index":1000,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["resulting",{"_index":2033,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["results",{"_index":19,"title":{},"body":{"interfaces/AccountDto.html":{},"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthorDto.html":{},"interfaces/AuthorHaikuDto.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/ImageDto.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"interfaces/JWTokenDto.html":{},"components/LoginComponent.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"interfaces/PaginationMetaDataDto.html":{},"interfaces/ProfileDto.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserDto.html":{},"interfaces/UserHaikuDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"interfaces/UserUpdateDto.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":916,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/ProfileService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["retrieves",{"_index":871,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/AuthorizationService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["return",{"_index":82,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{}}}],["returns",{"_index":79,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{}}}],["role",{"_index":1106,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["roleid",{"_index":1515,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserDto.html":{}}}],["roles",{"_index":1101,"title":{},"body":{"injectables/AuthorizationService.html":{},"directives/IsAuthorizedDirective.html":{}}}],["root",{"_index":700,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"guards/UnAuthenticatedGuard.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{}}}],["root'},{'name",{"_index":188,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["rootelement",{"_index":2024,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["route",{"_index":832,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/AuthorizationGuard.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["route.data['requiredrole",{"_index":1062,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["router",{"_index":58,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"guards/AuthenticationGuard.html":{},"guards/AuthorizationGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{},"components/RegisterComponent.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["routermodule",{"_index":737,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":827,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":804,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/UnAuthenticatedGuard.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":751,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":803,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":2213,"title":{},"body":{"index.html":{}}}],["running",{"_index":2228,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":119,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"injectables/RegisterService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":2030,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["rxjs/operators",{"_index":979,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/ProfileService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{}}}],["same",{"_index":1820,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["samesite",{"_index":1381,"title":{},"body":{"injectables/LoginService.html":{}}}],["scaffolding",{"_index":2221,"title":{},"body":{"index.html":{}}}],["script",{"_index":2097,"title":{},"body":{"changelog.html":{}}}],["scrolls",{"_index":1188,"title":{},"body":{"components/FooterComponent.html":{}}}],["scrolltotop",{"_index":1185,"title":{},"body":{"components/FooterComponent.html":{}}}],["sdk",{"_index":2091,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":365,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["searching",{"_index":380,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["searchinput",{"_index":351,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["searchinput(event",{"_index":376,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["searchoption",{"_index":951,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["searchterm",{"_index":346,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["searchterm).pipe",{"_index":429,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["searchtext",{"_index":347,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["secure",{"_index":1380,"title":{},"body":{"injectables/LoginService.html":{}}}],["select",{"_index":459,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"dependencies.html":{}}}],["select/ng",{"_index":2199,"title":{},"body":{"dependencies.html":{}}}],["selectauthor",{"_index":352,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["selectauthor(authordto",{"_index":384,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["selected",{"_index":389,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["selectedfile",{"_index":1259,"title":{},"body":{"injectables/ImageService.html":{}}}],["selectedfile.name",{"_index":1271,"title":{},"body":{"injectables/ImageService.html":{}}}],["selector",{"_index":38,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["selects",{"_index":386,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["serialization",{"_index":1124,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["serialize",{"_index":2005,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["serialize(obj",{"_index":2023,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["serialized",{"_index":2029,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["serializer.service",{"_index":985,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["serializer.service.ts",{"_index":1998,"title":{},"body":{"injectables/XmlSerializerService.html":{},"coverage.html":{}}}],["serializer.service.ts:112",{"_index":2016,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["serializer.service.ts:12",{"_index":2007,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["serializer.service.ts:22",{"_index":2025,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["serializer.service.ts:38",{"_index":2009,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["serializer.service.ts:64",{"_index":2020,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["serializer.service.ts:81",{"_index":2022,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["serializes",{"_index":2026,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["serializing",{"_index":1999,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["serve",{"_index":2214,"title":{},"body":{"index.html":{}}}],["server",{"_index":1155,"title":{},"body":{"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"index.html":{}}}],["service",{"_index":750,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{},"dependencies.html":{}}}],["services/authentication.service",{"_index":842,"title":{},"body":{"guards/AuthenticationGuard.html":{},"components/HeaderComponent.html":{},"guards/UnAuthenticatedGuard.html":{}}}],["services/authorization.service",{"_index":1060,"title":{},"body":{"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{}}}],["services/logout.service",{"_index":1209,"title":{},"body":{"components/HeaderComponent.html":{}}}],["services/navigation.service",{"_index":1210,"title":{},"body":{"components/HeaderComponent.html":{}}}],["services/user.service",{"_index":1992,"title":{},"body":{"injectables/UsernameValidator.html":{}}}],["set",{"_index":489,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["sets",{"_index":1811,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["setting",{"_index":547,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["settings",{"_index":1214,"title":{},"body":{"components/HeaderComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["setupusernamevalidation",{"_index":1794,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["setusernamechange",{"_index":1795,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["share",{"_index":1236,"title":{},"body":{"components/HomeComponent.html":{}}}],["shared/directives/is",{"_index":794,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/models/authordto.model",{"_index":121,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{}}}],["shared/models/authorhaikudto.model",{"_index":327,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"injectables/AuthorHaikuService.html":{},"components/UpdateAuthorHaikuComponent.html":{}}}],["shared/models/imagedto",{"_index":1264,"title":{},"body":{"injectables/ImageService.html":{}}}],["shared/models/jwtokendto.model",{"_index":1371,"title":{},"body":{"injectables/LoginService.html":{}}}],["shared/models/logindto.model",{"_index":1335,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{}}}],["shared/models/paginationmetadatadto.model",{"_index":987,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{}}}],["shared/models/profiledto.model",{"_index":1488,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["shared/models/registerdto.model",{"_index":1517,"title":{},"body":{"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{}}}],["shared/models/userdto.model",{"_index":1370,"title":{},"body":{"injectables/LoginService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["shared/models/userhaikudto.model",{"_index":478,"title":{},"body":{"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{}}}],["shared/models/userupdatedto.model",{"_index":1747,"title":{},"body":{"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["side",{"_index":1153,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["single",{"_index":208,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["singleauthorcomponent",{"_index":207,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["singleauthorhaikucomponent",{"_index":209,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["singleusercomponent",{"_index":210,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["singleuserhaikucomponent",{"_index":212,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["skip",{"_index":2080,"title":{},"body":{"changelog.html":{}}}],["smooth",{"_index":1194,"title":{},"body":{"components/FooterComponent.html":{}}}],["snapshot",{"_index":1059,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["solution",{"_index":2104,"title":{},"body":{"changelog.html":{}}}],["sorry",{"_index":1457,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["sortbyname",{"_index":637,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["sortbytitle",{"_index":519,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["sortdirection",{"_index":512,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["sorting",{"_index":554,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["sorts",{"_index":556,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AccountDto.html":{},"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthorDto.html":{},"interfaces/AuthorHaikuDto.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/ImageDto.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"interfaces/JWTokenDto.html":{},"components/LoginComponent.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"interfaces/PaginationMetaDataDto.html":{},"interfaces/ProfileDto.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserDto.html":{},"interfaces/UserHaikuDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"interfaces/UserUpdateDto.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{},"index.html":{}}}],["specific",{"_index":94,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/ImageService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["specified",{"_index":1287,"title":{},"body":{"directives/IsAuthorizedDirective.html":{},"classes/MatchingValidator.html":{},"injectables/XmlSerializerService.html":{}}}],["specify",{"_index":2089,"title":{},"body":{"changelog.html":{}}}],["src/.../environment.development.ts",{"_index":2255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":802,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":697,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":703,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":724,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/footer/footer.component.ts",{"_index":1179,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/core/footer/footer.component.ts:12",{"_index":1186,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/core/footer/footer.component.ts:21",{"_index":1187,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/core/guards/authentication.guard.ts",{"_index":829,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/authentication.guard.ts:11",{"_index":834,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/guards/authentication.guard.ts:22",{"_index":835,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/guards/authorization.guard.ts",{"_index":1050,"title":{},"body":{"guards/AuthorizationGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/authorization.guard.ts:11",{"_index":1053,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/app/core/guards/authorization.guard.ts:24",{"_index":1057,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/app/core/guards/un",{"_index":1604,"title":{},"body":{"guards/UnAuthenticatedGuard.html":{},"coverage.html":{}}}],["src/app/core/header/header.component.ts",{"_index":1199,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/core/header/header.component.ts:16",{"_index":1206,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/header/header.component.ts:25",{"_index":1208,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/header/header.component.ts:34",{"_index":1207,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/services/authentication.service.ts",{"_index":847,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/core/services/authentication.service.ts:13",{"_index":888,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:14",{"_index":858,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:29",{"_index":884,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:38",{"_index":876,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:47",{"_index":882,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:57",{"_index":870,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:68",{"_index":879,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:84",{"_index":860,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:98",{"_index":874,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/author",{"_index":913,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"coverage.html":{}}}],["src/app/core/services/author.service.ts",{"_index":1024,"title":{},"body":{"injectables/AuthorService.html":{},"coverage.html":{}}}],["src/app/core/services/author.service.ts:104",{"_index":1031,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/app/core/services/author.service.ts:123",{"_index":1043,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/app/core/services/author.service.ts:140",{"_index":1036,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/app/core/services/author.service.ts:18",{"_index":1029,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/app/core/services/author.service.ts:32",{"_index":1041,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/app/core/services/author.service.ts:46",{"_index":1034,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/app/core/services/author.service.ts:60",{"_index":1038,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/app/core/services/author.service.ts:86",{"_index":1040,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/app/core/services/authorization.service.ts",{"_index":1090,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["src/app/core/services/authorization.service.ts:13",{"_index":1111,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/authorization.service.ts:14",{"_index":1096,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/authorization.service.ts:27",{"_index":1110,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/authorization.service.ts:36",{"_index":1105,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/authorization.service.ts:47",{"_index":1100,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/authorization.service.ts:62",{"_index":1108,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/authorization.service.ts:72",{"_index":1098,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/authorization.service.ts:83",{"_index":1107,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/authorization.service.ts:99",{"_index":1097,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/core/services/image.service.ts",{"_index":1240,"title":{},"body":{"injectables/ImageService.html":{},"coverage.html":{}}}],["src/app/core/services/image.service.ts:17",{"_index":1247,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/core/services/image.service.ts:31",{"_index":1248,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/core/services/image.service.ts:45",{"_index":1253,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/core/services/image.service.ts:57",{"_index":1250,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/core/services/image.service.ts:82",{"_index":1256,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/core/services/login.service.ts",{"_index":1363,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/core/services/login.service.ts:21",{"_index":1369,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/services/login.service.ts:22",{"_index":1366,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/services/login.service.ts:38",{"_index":1367,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/services/login.service.ts:53",{"_index":1368,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/core/services/logout.service.ts",{"_index":1386,"title":{},"body":{"injectables/LogoutService.html":{},"coverage.html":{}}}],["src/app/core/services/logout.service.ts:13",{"_index":1388,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/services/logout.service.ts:28",{"_index":1389,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/core/services/navigation.service.ts",{"_index":1420,"title":{},"body":{"injectables/NavigationService.html":{},"coverage.html":{}}}],["src/app/core/services/navigation.service.ts:10",{"_index":1432,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:108",{"_index":1436,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:117",{"_index":1440,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:126",{"_index":1450,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:136",{"_index":1449,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:146",{"_index":1438,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:21",{"_index":1445,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:30",{"_index":1444,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:40",{"_index":1441,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:50",{"_index":1433,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:59",{"_index":1443,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:69",{"_index":1442,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:79",{"_index":1434,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:88",{"_index":1451,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:98",{"_index":1447,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/profile.service.ts",{"_index":1464,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/app/core/services/profile.service.ts:114",{"_index":1486,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/core/services/profile.service.ts:17",{"_index":1471,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/core/services/profile.service.ts:31",{"_index":1476,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/core/services/profile.service.ts:45",{"_index":1483,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/core/services/profile.service.ts:57",{"_index":1478,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/core/services/profile.service.ts:74",{"_index":1473,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/core/services/profile.service.ts:96",{"_index":1481,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/core/services/register.service.ts",{"_index":1545,"title":{},"body":{"injectables/RegisterService.html":{},"coverage.html":{}}}],["src/app/core/services/register.service.ts:18",{"_index":1560,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/core/services/register.service.ts:19",{"_index":1552,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/core/services/register.service.ts:33",{"_index":1555,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/core/services/register.service.ts:47",{"_index":1557,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/core/services/register.service.ts:58",{"_index":1559,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/core/services/register.service.ts:70",{"_index":1554,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/app/core/services/user",{"_index":1919,"title":{},"body":{"injectables/UserHaikuService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1949,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:104",{"_index":1956,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:123",{"_index":1966,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:140",{"_index":1959,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:157",{"_index":1969,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:18",{"_index":1954,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:32",{"_index":1962,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:46",{"_index":1967,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:60",{"_index":1961,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:86",{"_index":1964,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/utilities/authorizationinterceptor.ts",{"_index":1066,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{},"coverage.html":{}}}],["src/app/core/utilities/authorizationinterceptor.ts:19",{"_index":1072,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["src/app/core/utilities/authorizationinterceptor.ts:7",{"_index":1068,"title":{},"body":{"interceptors/AuthorizationInterceptor.html":{}}}],["src/app/core/utilities/error",{"_index":1121,"title":{},"body":{"injectables/ErrorHandlingService.html":{},"coverage.html":{}}}],["src/app/core/utilities/matching",{"_index":1395,"title":{},"body":{"classes/MatchingValidator.html":{},"coverage.html":{}}}],["src/app/core/utilities/syllable",{"_index":1566,"title":{},"body":{"classes/SyllableValidator.html":{},"coverage.html":{}}}],["src/app/core/utilities/username",{"_index":1981,"title":{},"body":{"injectables/UsernameValidator.html":{},"coverage.html":{}}}],["src/app/core/utilities/xml",{"_index":1997,"title":{},"body":{"injectables/XmlSerializerService.html":{},"coverage.html":{}}}],["src/app/features/author",{"_index":305,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"coverage.html":{}}}],["src/app/features/authors/add",{"_index":28,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"coverage.html":{}}}],["src/app/features/authors/all",{"_index":626,"title":{},"body":{"components/AllAuthorsComponent.html":{},"coverage.html":{}}}],["src/app/features/authors/single",{"_index":2153,"title":{},"body":{"coverage.html":{}}}],["src/app/features/authors/update",{"_index":1614,"title":{},"body":{"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts",{"_index":1215,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/login/login",{"_index":1347,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/features/login/login.component.ts",{"_index":1313,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/features/login/login.component.ts:16",{"_index":1333,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:18",{"_index":1331,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:20",{"_index":1332,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:24",{"_index":1329,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:28",{"_index":1330,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:30",{"_index":1319,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:34",{"_index":1327,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:39",{"_index":1328,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:46",{"_index":1320,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:62",{"_index":1321,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:74",{"_index":1323,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/not",{"_index":1454,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/features/profile/profile.component.ts",{"_index":2161,"title":{},"body":{"coverage.html":{}}}],["src/app/features/profile/update",{"_index":1706,"title":{},"body":{"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"coverage.html":{}}}],["src/app/features/register/register",{"_index":1527,"title":{},"body":{"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["src/app/features/register/register.component.ts",{"_index":1497,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/features/register/register.component.ts:20",{"_index":1514,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:22",{"_index":1516,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:24",{"_index":1513,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:28",{"_index":1511,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:32",{"_index":1512,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:34",{"_index":1502,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:39",{"_index":1505,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:44",{"_index":1506,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:52",{"_index":1503,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:68",{"_index":1504,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:80",{"_index":1509,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/user",{"_index":462,"title":{},"body":{"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{}}}],["src/app/features/users/all",{"_index":2170,"title":{},"body":{"coverage.html":{}}}],["src/app/features/users/single",{"_index":2174,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/directives/is",{"_index":1273,"title":{},"body":{"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"coverage.html":{}}}],["src/app/shared/models/accountdto.model.ts",{"_index":6,"title":{},"body":{"interfaces/AccountDto.html":{},"coverage.html":{}}}],["src/app/shared/models/authordto.model.ts",{"_index":909,"title":{},"body":{"interfaces/AuthorDto.html":{},"coverage.html":{}}}],["src/app/shared/models/authorhaikudto.model.ts",{"_index":911,"title":{},"body":{"interfaces/AuthorHaikuDto.html":{},"coverage.html":{}}}],["src/app/shared/models/imagedto.ts",{"_index":1238,"title":{},"body":{"interfaces/ImageDto.html":{},"coverage.html":{}}}],["src/app/shared/models/jwtokendto.model.ts",{"_index":1312,"title":{},"body":{"interfaces/JWTokenDto.html":{},"coverage.html":{}}}],["src/app/shared/models/logindto.model.ts",{"_index":1346,"title":{},"body":{"interfaces/LoginDto.html":{},"coverage.html":{}}}],["src/app/shared/models/paginationmetadatadto.model.ts",{"_index":1460,"title":{},"body":{"interfaces/PaginationMetaDataDto.html":{},"coverage.html":{}}}],["src/app/shared/models/profiledto.model.ts",{"_index":1462,"title":{},"body":{"interfaces/ProfileDto.html":{},"coverage.html":{}}}],["src/app/shared/models/registerdto.model.ts",{"_index":1525,"title":{},"body":{"interfaces/RegisterDto.html":{},"coverage.html":{}}}],["src/app/shared/models/userdto.model.ts",{"_index":1916,"title":{},"body":{"interfaces/UserDto.html":{},"coverage.html":{}}}],["src/app/shared/models/userhaikudto.model.ts",{"_index":1917,"title":{},"body":{"interfaces/UserHaikuDto.html":{},"coverage.html":{}}}],["src/app/shared/models/userupdatedto.model.ts",{"_index":1980,"title":{},"body":{"interfaces/UserUpdateDto.html":{},"coverage.html":{}}}],["src/environments/environment.development.ts",{"_index":2185,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2188,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":2083,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":2096,"title":{},"body":{"changelog.html":{}}}],["started",{"_index":2068,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["state",{"_index":272,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["statements",{"_index":2109,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":99,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["static",{"_index":1399,"title":{},"body":{"classes/MatchingValidator.html":{},"classes/SyllableValidator.html":{}}}],["status",{"_index":840,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"guards/UnAuthenticatedGuard.html":{}}}],["steps",{"_index":2079,"title":{},"body":{"changelog.html":{}}}],["stored",{"_index":527,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"index.html":{}}}],["storeinitialformvalues",{"_index":1653,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["storeinitialprofileformvalues",{"_index":1796,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["storeinitialuserformvalues",{"_index":1797,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["stores",{"_index":1666,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["strict",{"_index":1382,"title":{},"body":{"injectables/LoginService.html":{}}}],["string",{"_index":13,"title":{},"body":{"interfaces/AccountDto.html":{},"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthorDto.html":{},"interfaces/AuthorHaikuDto.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"interfaces/ImageDto.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"interfaces/JWTokenDto.html":{},"components/LoginComponent.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"classes/MatchingValidator.html":{},"interfaces/ProfileDto.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserDto.html":{},"interfaces/UserHaikuDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"interfaces/UserUpdateDto.html":{},"injectables/XmlSerializerService.html":{}}}],["structure",{"_index":2028,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["studio",{"_index":2072,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":25,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["styleurls",{"_index":41,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["suarez",{"_index":1198,"title":{},"body":{"components/FooterComponent.html":{}}}],["subject",{"_index":113,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["submission",{"_index":271,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["submits",{"_index":266,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["subscribe",{"_index":144,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"directives/IsAuthorizedDirective.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["subscribe(isauthenticated",{"_index":1309,"title":{},"body":{"directives/IsUnAuthenticatedDirective.html":{}}}],["subscription",{"_index":1288,"title":{},"body":{"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{}}}],["successful",{"_index":949,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["successfully",{"_index":591,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["successmessages",{"_index":513,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["successmessages.authorhaikus",{"_index":605,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["successmessages.authors",{"_index":691,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["successmessages.login",{"_index":1342,"title":{},"body":{"components/LoginComponent.html":{}}}],["successmessages.register",{"_index":1523,"title":{},"body":{"components/RegisterComponent.html":{}}}],["successmessages.update",{"_index":1777,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["support",{"_index":2095,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["sure",{"_index":622,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/HeaderComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["svg",{"_index":2245,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1157,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["switchmap",{"_index":371,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["switchmap(searchterm",{"_index":426,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["syllable",{"_index":1569,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["syllablecount",{"_index":1590,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["syllablecountvalidator",{"_index":1574,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["syllablecountvalidator(expectedcount",{"_index":1582,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["syllables",{"_index":335,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["syllablevalidator",{"_index":412,"title":{"classes/SyllableValidator.html":{}},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"classes/SyllableValidator.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{}}}],["syllablevalidator.countsyllables(value",{"_index":1602,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["syllablevalidator.countsyllablesinword(word",{"_index":1592,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["syllablevalidator.syllablecountvalidator(5",{"_index":417,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["syllablevalidator.syllablecountvalidator(7",{"_index":419,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["system",{"_index":934,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["t",{"_index":2010,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["table",{"_index":2190,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2189,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":1543,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["takeuntil",{"_index":118,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["takeuntil(this.unsubscribe",{"_index":143,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["template",{"_index":24,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/XmlSerializerService.html":{}}}],["templateref",{"_index":1280,"title":{},"body":{"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{}}}],["templateurl",{"_index":43,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["term",{"_index":366,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["test",{"_index":2229,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2238,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2101,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":1001,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["text/xml",{"_index":2038,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["this.addauthorform",{"_index":280,"title":{},"body":{"components/AddAuthorFormComponent.html":{}}}],["this.addauthorform.get(controlname",{"_index":296,"title":{},"body":{"components/AddAuthorFormComponent.html":{}}}],["this.addauthorform.reset",{"_index":295,"title":{},"body":{"components/AddAuthorFormComponent.html":{}}}],["this.addauthorform.valid",{"_index":288,"title":{},"body":{"components/AddAuthorFormComponent.html":{}}}],["this.addauthorform.value",{"_index":290,"title":{},"body":{"components/AddAuthorFormComponent.html":{}}}],["this.addauthorform.value.bio",{"_index":291,"title":{},"body":{"components/AddAuthorFormComponent.html":{}}}],["this.addauthorhaikuform",{"_index":415,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["this.addauthorhaikuform.get(controlname",{"_index":458,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["this.addauthorhaikuform.patchvalue",{"_index":448,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["this.addauthorhaikuform.reset",{"_index":457,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["this.addauthorhaikuform.valid",{"_index":451,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["this.addauthorhaikuform.value",{"_index":453,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["this.addauthorhaikuform.value.title",{"_index":454,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["this.adduserhaikuform",{"_index":495,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{}}}],["this.adduserhaikuform.get(controlname",{"_index":504,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{}}}],["this.adduserhaikuform.reset",{"_index":503,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{}}}],["this.adduserhaikuform.valid",{"_index":498,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{}}}],["this.adduserhaikuform.value",{"_index":500,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{}}}],["this.adduserhaikuform.value.title",{"_index":501,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{}}}],["this.authenticationservice.isauthenticated",{"_index":1308,"title":{},"body":{"directives/IsUnAuthenticatedDirective.html":{},"injectables/LoginService.html":{}}}],["this.authenticationservice.updateauthenticationstate(false",{"_index":1391,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this.authenticationservice.updateauthenticationstate(true",{"_index":1383,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.authordto",{"_index":1640,"title":{},"body":{"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{}}}],["this.authordto.bio",{"_index":1682,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["this.authordto.id",{"_index":1680,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["this.authordto.name",{"_index":1681,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["this.authorhaikudto",{"_index":1702,"title":{},"body":{"components/UpdateAuthorHaikuComponent.html":{}}}],["this.authorhaikuidtodelete",{"_index":588,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["this.authorhaikuservice.addauthorhaiku(authorhaikudto).pipe",{"_index":328,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{}}}],["this.authorhaikuservice.deleteauthorhaiku(this.authorhaikuidtodelete).pipe",{"_index":589,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["this.authorhaikuservice.getallauthorhaikus(this.currentpage",{"_index":584,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["this.authorhaikuservice.getauthorhaikubyid(authorhaikuid).pipe",{"_index":1701,"title":{},"body":{"components/UpdateAuthorHaikuComponent.html":{}}}],["this.authorhaikuservice.updateauthorhaiku(updatedauthorhaiku.id",{"_index":1703,"title":{},"body":{"components/UpdateAuthorHaikuComponent.html":{}}}],["this.authorhaikuurl",{"_index":1017,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["this.authorhaikuurl(`${authorhaikuid",{"_index":1014,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["this.authorhaikuurl(`?currentpage=${currentpage}&pagesize=${pagesize}&searchoption=${encodeuricomponent(searchoption",{"_index":997,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["this.authorhaikuurl(`author/${authorid}?currentpage=${currentpage}&pagesize=${pagesize}&searchoption=${encodeuricomponent(searchoption",{"_index":1013,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["this.authoridtodelete",{"_index":678,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["this.authoridtoupdate",{"_index":1635,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["this.authorizationservice.isauthorized",{"_index":1292,"title":{},"body":{"directives/IsAuthorizedDirective.html":{}}}],["this.authorizationservice.isauthorizedforroles(this.appisauthorized",{"_index":1295,"title":{},"body":{"directives/IsAuthorizedDirective.html":{}}}],["this.authorizationservice.isauthorizedforroles(this.defaultroles",{"_index":1384,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.authorizationservice.updateauthorizedstate(false",{"_index":1392,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this.authorizationservice.updateauthorizedstate(true",{"_index":1385,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.authorsdto",{"_index":431,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["this.authorsdto.filter(author",{"_index":446,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["this.authorservice.addauthor(authordto).pipe",{"_index":142,"title":{},"body":{"components/AddAuthorComponent.html":{}}}],["this.authorservice.deleteauthor(this.authoridtodelete).pipe",{"_index":680,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["this.authorservice.getallauthors(this.currentpage",{"_index":427,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["this.authorservice.getauthorbyid(authorid).pipe",{"_index":1639,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["this.authorservice.updateauthor(updatedauthor.id",{"_index":1642,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["this.authorurl",{"_index":1047,"title":{},"body":{"injectables/AuthorService.html":{}}}],["this.authorurl(`${authorid",{"_index":1046,"title":{},"body":{"injectables/AuthorService.html":{}}}],["this.authorurl(`?currentpage=${currentpage}&pagesize=${pagesize}&searchoption=${encodeuricomponent(searchoption",{"_index":1045,"title":{},"body":{"injectables/AuthorService.html":{}}}],["this.authservice.gettoken",{"_index":989,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"interceptors/AuthorizationInterceptor.html":{}}}],["this.authservice.getuserid",{"_index":497,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{},"components/HeaderComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.authservice.isauthenticated",{"_index":844,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnAuthenticatedGuard.html":{}}}],["this.authsubscription",{"_index":1291,"title":{},"body":{"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{}}}],["this.authsubscription$.unsubscribe",{"_index":1294,"title":{},"body":{"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{}}}],["this.authzservice.isauthorizedforroles(requiredroles",{"_index":1063,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.changesmade",{"_index":1685,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["this.clearmessages",{"_index":125,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["this.constructerrormessage(error",{"_index":1146,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["this.cookieservice.delete('jwttoken",{"_index":1390,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this.cookieservice.get('jwttoken",{"_index":899,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["this.cookieservice.set('jwttoken",{"_index":1377,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.currentpage",{"_index":437,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["this.currentuserid",{"_index":496,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{}}}],["this.currentusername",{"_index":1830,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.currentusername.tolowercase",{"_index":1849,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.decodetoken(token",{"_index":900,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["this.defaultauthorid",{"_index":690,"title":{},"body":{"components/AllAuthorsComponent.html":{},"components/UpdateAuthorComponent.html":{}}}],["this.defaultbio",{"_index":292,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{}}}],["this.defaulttitle",{"_index":455,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["this.errorhandler.handleerror(error",{"_index":1011,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["this.errorhandlingservice.handleserializationerror(new",{"_index":2042,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["this.errormessages",{"_index":126,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["this.errormessages[type",{"_index":129,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["this.fb.group",{"_index":281,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["this.filteredauthorhaikusdto",{"_index":585,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["this.filteredauthorhaikusdto.length",{"_index":603,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["this.filteredauthorhaikusdto.sort((a",{"_index":597,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["this.filteredauthorsdto",{"_index":445,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["this.filteredauthorsdto.length",{"_index":689,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["this.filteredauthorsdto.sort((a",{"_index":684,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["this.formprofilesubmit.emit(profileupdateddto",{"_index":1871,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.formsubmit.emit(authorauthorhaikudto",{"_index":456,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["this.formsubmit.emit(authordto",{"_index":293,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{}}}],["this.formsubmit.emit(logindto",{"_index":1357,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.formsubmit.emit(newregisterdto",{"_index":1540,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.formsubmit.emit(newuserhaikudto",{"_index":502,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{}}}],["this.formsubmit.emit(updateduserhaikudto",{"_index":1913,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["this.formusersubmit.emit(userupdateddto",{"_index":1865,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.getheaders",{"_index":999,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["this.gettoken",{"_index":897,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["this.handleerror(error",{"_index":148,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["this.hasmoreauthors",{"_index":436,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["this.hasrequiredrole(requiredroles",{"_index":1117,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.http.delete(url",{"_index":1022,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["this.http.get(url",{"_index":998,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/ProfileService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["this.http.post(`${environment.apibaseurl}/${this.loginapi",{"_index":1375,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.post(url",{"_index":1018,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["this.http.put(url",{"_index":1020,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ProfileService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["this.imageurl(`${imageid",{"_index":1266,"title":{},"body":{"injectables/ImageService.html":{}}}],["this.imageurl(`upload",{"_index":1267,"title":{},"body":{"injectables/ImageService.html":{}}}],["this.initialformvalues",{"_index":1673,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["this.initialprofileformvalues",{"_index":1838,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.initialuserformvalues",{"_index":1835,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.isauthenticated",{"_index":893,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.isauthenticatedsubject",{"_index":891,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.isauthenticatedsubject.asobservable",{"_index":894,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.isauthenticatedsubject.next(isauthenticated",{"_index":895,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.isauthorized",{"_index":1114,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.isauthorizedsubject",{"_index":1112,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.isauthorizedsubject.asobservable",{"_index":1115,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.isauthorizedsubject.next(isauthorized",{"_index":1116,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.isnotauthorone(authorid",{"_index":1638,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["this.isnotauthorone(this.authoridtodelete",{"_index":679,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["this.isnotauthorone(updatedauthor.id",{"_index":1641,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["this.ispageempty",{"_index":592,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["this.isprofilesubmitted",{"_index":1866,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.issubmitted",{"_index":287,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["this.istokenexpired(token",{"_index":898,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["this.istokenvalid",{"_index":896,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["this.isusernamechanged",{"_index":1852,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.isusersubmitted",{"_index":1860,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.loadauthorbyid(this.authoridtoupdate",{"_index":1637,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["this.loadauthorhaikubyid(authorhaikuidtoupdate",{"_index":1700,"title":{},"body":{"components/UpdateAuthorHaikuComponent.html":{}}}],["this.loadauthorhaikus",{"_index":581,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["this.loadauthors",{"_index":422,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["this.loadingstates.add",{"_index":140,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{}}}],["this.loadingstates.authorhaikus",{"_index":580,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["this.loadingstates.authors",{"_index":423,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["this.loadingstates.login",{"_index":1336,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loadingstates.register",{"_index":1519,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.loadingstates.update",{"_index":1634,"title":{},"body":{"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["this.loadingstates[type",{"_index":128,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["this.loadprofilebyuserid(user.id",{"_index":1759,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.loaduserandprofile(this.userid",{"_index":1749,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.loaduserhaikubyid(userhaikuidtoupdate",{"_index":1891,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["this.logindto.password",{"_index":1339,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logindto.username",{"_index":1337,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform",{"_index":1351,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.get(controlname",{"_index":1359,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.reset",{"_index":1358,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.valid",{"_index":1355,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.value",{"_index":1356,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginservice.login(this.logindto).pipe",{"_index":1341,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logoutservice.logout",{"_index":1212,"title":{},"body":{"components/HeaderComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.navigationservice.updateauthor(authorid",{"_index":683,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["this.navigationservice.updateauthorhaiku(authorhaikuid",{"_index":595,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["this.navigationservice.viewauthor(authorid",{"_index":682,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["this.navigationservice.viewauthorhaiku(authorhaikuid",{"_index":594,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["this.navigationservice.viewlogin",{"_index":1776,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.onpagechange(1",{"_index":604,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["this.pagesize",{"_index":428,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["this.patchform",{"_index":1672,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["this.patchprofileform",{"_index":1832,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.patchuserform",{"_index":1831,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.profilechangesmade",{"_index":1868,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.profiledto",{"_index":1761,"title":{},"body":{"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["this.profiledto).pipe",{"_index":1772,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.profiledto.bio",{"_index":1769,"title":{},"body":{"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["this.profileservice.getprofilebyuserid(userid).pipe",{"_index":1760,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.profileservice.updateprofile(this.profiledto.id",{"_index":1771,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.profileurl(`${profileid",{"_index":1490,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profileurl(`profiles",{"_index":1493,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.profileurl(`user/${userid",{"_index":1495,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.registerform",{"_index":1534,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.registerform.get(controlname",{"_index":1542,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.registerform.reset",{"_index":1541,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.registerform.valid",{"_index":1537,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.registerform.value",{"_index":1539,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.registerservice.addregister(registerdto).pipe",{"_index":1520,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerurl",{"_index":1564,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.resetform",{"_index":294,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":1636,"title":{},"body":{"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["this.router.navigate",{"_index":1613,"title":{},"body":{"guards/UnAuthenticatedGuard.html":{}}}],["this.router.navigate(['/all",{"_index":1452,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.router.navigate(['/home",{"_index":1064,"title":{},"body":{"guards/AuthorizationGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":845,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{}}}],["this.router.navigate(['/update",{"_index":1453,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.router.navigate(['/view",{"_index":146,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"injectables/NavigationService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["this.searchtext$.next(inputvalue",{"_index":444,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["this.searchtext$.next(this.searchterm",{"_index":593,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["this.searchtext$.pipe",{"_index":424,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["this.setupusernamevalidation",{"_index":1833,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.setusernamechange",{"_index":1834,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.sortdirection",{"_index":596,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["this.storeinitialformvalues",{"_index":1683,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["this.storeinitialprofileformvalues",{"_index":1859,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.storeinitialuserformvalues",{"_index":1857,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.successmessages",{"_index":582,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.successmessages.authorhaikus",{"_index":590,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["this.successmessages.authors",{"_index":681,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["this.successmessages.register",{"_index":1521,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.successmessages.update",{"_index":1768,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.successmessages[type",{"_index":583,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.totalcount",{"_index":432,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["this.totalpages",{"_index":434,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["this.unsubscribe$.complete",{"_index":124,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["this.unsubscribe$.next",{"_index":123,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["this.updateauthorform",{"_index":1671,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["this.updateauthorform.get('bio')?.value",{"_index":1675,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["this.updateauthorform.get('name')?.value",{"_index":1674,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["this.updateauthorform.get(controlname",{"_index":1689,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["this.updateauthorform.patchvalue",{"_index":1679,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["this.updateauthorform.reset",{"_index":1688,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["this.updateauthorform.valid",{"_index":1684,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["this.updateauthorform.value",{"_index":1686,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["this.updateauthorform.value.bio",{"_index":1687,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["this.updatefilteredauthors",{"_index":438,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["this.updateprofileform",{"_index":1829,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateprofileform.get('bio')?.value",{"_index":1839,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateprofileform.get(controlname",{"_index":1875,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateprofileform.patchvalue",{"_index":1858,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateprofileform.reset",{"_index":1873,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateprofileform.valid",{"_index":1867,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateprofileform.value.bio",{"_index":1870,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateuserform",{"_index":1828,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateuserform.get('password')?.value",{"_index":1837,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateuserform.get('username')?.seterrors(null",{"_index":1853,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateuserform.get('username')?.value",{"_index":1836,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateuserform.get('username')?.value.tolowercase",{"_index":1851,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateuserform.get('username')?.valuechanges",{"_index":1846,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateuserform.get(controlname",{"_index":1874,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateuserform.patchvalue",{"_index":1856,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateuserform.reset",{"_index":1872,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateuserform.valid",{"_index":1861,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateuserform.value",{"_index":1864,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.updateuserhaikuform",{"_index":1903,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["this.updateuserhaikuform.get('lineone')?.value",{"_index":1905,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["this.updateuserhaikuform.get('linethree')?.value",{"_index":1907,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["this.updateuserhaikuform.get('linetwo')?.value",{"_index":1906,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["this.updateuserhaikuform.get('title')?.value",{"_index":1904,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["this.updateuserhaikuform.get(controlname",{"_index":1915,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["this.updateuserhaikuform.patchvalue",{"_index":1908,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["this.updateuserhaikuform.reset",{"_index":1914,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["this.updateuserhaikuform.valid",{"_index":1909,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["this.updateuserhaikuform.value",{"_index":1911,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["this.updateuserhaikuform.value.title",{"_index":1912,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["this.updateview",{"_index":1293,"title":{},"body":{"directives/IsAuthorizedDirective.html":{}}}],["this.updateview(isauthenticated",{"_index":1310,"title":{},"body":{"directives/IsUnAuthenticatedDirective.html":{}}}],["this.userchangesmade",{"_index":1862,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.userdto).pipe",{"_index":1767,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.userdto.id",{"_index":1755,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.userdto.password",{"_index":1764,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.userdto.roleid",{"_index":1757,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.userdto.username",{"_index":1762,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.userhaikudto",{"_index":1893,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["this.userhaikuservice.adduserhaiku(userhaikudto).pipe",{"_index":479,"title":{},"body":{"components/AddUserHaikuComponent.html":{}}}],["this.userhaikuservice.getuserhaikubyid(userhaikuid).pipe",{"_index":1892,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["this.userhaikuservice.updateuserhaiku(updateduserhaiku.id",{"_index":1894,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["this.userhaikuurl",{"_index":1946,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["this.userhaikuurl(`${userhaikuid",{"_index":1945,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["this.userhaikuurl(`?currentpage=${currentpage}&pagesize=${pagesize}&searchoption=${encodeuricomponent(searchoption",{"_index":1942,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["this.userhaikuurl(`user/${userid}?currentpage=${currentpage}&pagesize=${pagesize}&searchoption=${encodeuricomponent(searchoption",{"_index":1943,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["this.userid",{"_index":1211,"title":{},"body":{"components/HeaderComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.useridtodelete",{"_index":1773,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.usernamevalidator.usernametaken",{"_index":1535,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["this.userservice.deleteuser(this.useridtodelete).pipe",{"_index":1774,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.userservice.getuserbyid(userid).pipe",{"_index":1750,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.userservice.updateuser(this.userdto.id",{"_index":1766,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.userservice.verifyusername(control.value).pipe",{"_index":1993,"title":{},"body":{"injectables/UsernameValidator.html":{}}}],["this.userupdatedto",{"_index":1855,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["this.userupdatedto.password",{"_index":1753,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.userupdatedto.username",{"_index":1751,"title":{},"body":{"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["this.userurl",{"_index":1973,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userurl(`${userid",{"_index":1972,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userurl(`?currentpage=${currentpage}&pagesize=${pagesize}&searchoption=${encodeuricomponent(searchoption",{"_index":1971,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userurl(`verify",{"_index":1976,"title":{},"body":{"injectables/UserService.html":{}}}],["this.viewcontainer.clear",{"_index":1299,"title":{},"body":{"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{}}}],["this.viewcontainer.createembeddedview(this.templateref",{"_index":1297,"title":{},"body":{"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{}}}],["this.viewlogin",{"_index":1775,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.xmlserializer.deserialize(responsexml",{"_index":1016,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["this.xmlserializer.deserializearray(response.body",{"_index":1006,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ProfileService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["this.xmlserializer.deserializeboolean(responsexml",{"_index":1978,"title":{},"body":{"injectables/UserService.html":{}}}],["this.xmlserializer.deserializepaginationmetadata(response.headers.get('x",{"_index":1009,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["this.xmlserializer.serialize(logindto",{"_index":1374,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.xmlserializer.serialize(newauthordto",{"_index":1048,"title":{},"body":{"injectables/AuthorService.html":{}}}],["this.xmlserializer.serialize(newauthorhaikudto",{"_index":1019,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["this.xmlserializer.serialize(newregisterdto",{"_index":1565,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.xmlserializer.serialize(newuserdto",{"_index":1974,"title":{},"body":{"injectables/UserService.html":{}}}],["this.xmlserializer.serialize(newuserhaikudto",{"_index":1947,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["this.xmlserializer.serialize(updatedauthordto",{"_index":1049,"title":{},"body":{"injectables/AuthorService.html":{}}}],["this.xmlserializer.serialize(updatedauthorhaikudto",{"_index":1021,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["this.xmlserializer.serialize(updatedprofiledto",{"_index":1496,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.xmlserializer.serialize(updateduserdto",{"_index":1975,"title":{},"body":{"injectables/UserService.html":{}}}],["this.xmlserializer.serialize(updateduserhaikudto",{"_index":1948,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["those",{"_index":1226,"title":{},"body":{"components/HomeComponent.html":{}}}],["three",{"_index":338,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["through",{"_index":234,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["throwerror",{"_index":976,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ErrorHandlingService.html":{},"injectables/ImageService.html":{},"injectables/ProfileService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["throwerror('no",{"_index":1272,"title":{},"body":{"injectables/ImageService.html":{}}}],["throws",{"_index":137,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"injectables/RegisterService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["title",{"_index":329,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AppComponent.html":{},"interfaces/AuthorHaikuDto.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserHaikuDto.html":{}}}],["titlea",{"_index":599,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["titleb",{"_index":601,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{}}}],["toggles",{"_index":553,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{}}}],["token",{"_index":863,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"interfaces/JWTokenDto.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{}}}],["token's",{"_index":875,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tools",{"_index":2075,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":1190,"title":{},"body":{"components/FooterComponent.html":{}}}],["total",{"_index":333,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["totalcount",{"_index":348,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"interfaces/PaginationMetaDataDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{}}}],["totalpages",{"_index":349,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"interfaces/PaginationMetaDataDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{}}}],["transfer",{"_index":74,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"injectables/RegisterService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["tree",{"_index":27,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["true",{"_index":141,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"classes/MatchingValidator.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{}}}],["try",{"_index":134,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["tslib",{"_index":2205,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":336,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"classes/MatchingValidator.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/AccountDto.html":{},"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/AuthorDto.html":{},"interfaces/AuthorHaikuDto.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"guards/AuthorizationGuard.html":{},"interceptors/AuthorizationInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ImageDto.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"interfaces/JWTokenDto.html":{},"components/LoginComponent.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"classes/MatchingValidator.html":{},"injectables/NavigationService.html":{},"interfaces/PaginationMetaDataDto.html":{},"interfaces/ProfileDto.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserDto.html":{},"interfaces/UserHaikuDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"interfaces/UserUpdateDto.html":{},"injectables/UsernameValidator.html":{},"injectables/XmlSerializerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":95,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["unauthenticated.directive",{"_index":795,"title":{},"body":{"modules/AppModule.html":{}}}],["unauthenticated.directive.ts",{"_index":1300,"title":{},"body":{"directives/IsUnAuthenticatedDirective.html":{},"coverage.html":{}}}],["unauthenticated.directive.ts:12",{"_index":1303,"title":{},"body":{"directives/IsUnAuthenticatedDirective.html":{}}}],["unauthenticated.directive.ts:20",{"_index":1305,"title":{},"body":{"directives/IsUnAuthenticatedDirective.html":{}}}],["unauthenticated.directive.ts:25",{"_index":1304,"title":{},"body":{"directives/IsUnAuthenticatedDirective.html":{}}}],["unauthenticated.directive.ts:37",{"_index":1307,"title":{},"body":{"directives/IsUnAuthenticatedDirective.html":{}}}],["unauthenticatedguard",{"_index":810,"title":{"guards/UnAuthenticatedGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/UnAuthenticatedGuard.html":{},"coverage.html":{}}}],["unauthorized",{"_index":1162,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["under",{"_index":696,"title":{},"body":{"components/AllAuthorsComponent.html":{}}}],["unique",{"_index":1232,"title":{},"body":{"components/HomeComponent.html":{}}}],["unit",{"_index":2100,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["unknown",{"_index":131,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["unsubscribe",{"_index":48,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["untitled",{"_index":330,"title":{},"body":{"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["up",{"_index":1812,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["update",{"_index":214,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["updateauthenticationstate",{"_index":856,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["updateauthenticationstate(isauthenticated",{"_index":883,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["updateauthor",{"_index":638,"title":{},"body":{"components/AllAuthorsComponent.html":{},"injectables/AuthorService.html":{},"injectables/NavigationService.html":{},"components/UpdateAuthorComponent.html":{}}}],["updateauthor(authorid",{"_index":657,"title":{},"body":{"components/AllAuthorsComponent.html":{},"injectables/AuthorService.html":{},"injectables/NavigationService.html":{}}}],["updateauthor(updatedauthor",{"_index":1627,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["updateauthorcomponent",{"_index":213,"title":{"components/UpdateAuthorComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updateauthorform",{"_index":1649,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{}}}],["updateauthorformcomponent",{"_index":215,"title":{"components/UpdateAuthorFormComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updateauthorhaiku",{"_index":520,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/NavigationService.html":{},"components/UpdateAuthorHaikuComponent.html":{}}}],["updateauthorhaiku(authorhaikuid",{"_index":557,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/NavigationService.html":{}}}],["updateauthorhaiku(updatedauthorhaiku",{"_index":1695,"title":{},"body":{"components/UpdateAuthorHaikuComponent.html":{}}}],["updateauthorhaikucomponent",{"_index":216,"title":{"components/UpdateAuthorHaikuComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updateauthorhaikuformcomponent",{"_index":218,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updateauthorizedstate",{"_index":1095,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["updateauthorizedstate(isauthorized",{"_index":1109,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["updated",{"_index":973,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ProfileService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["updatedauthor",{"_index":1629,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["updatedauthor).pipe",{"_index":1643,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["updatedauthor.id",{"_index":1644,"title":{},"body":{"components/UpdateAuthorComponent.html":{}}}],["updatedauthordto",{"_index":1042,"title":{},"body":{"injectables/AuthorService.html":{}}}],["updatedauthorhaiku",{"_index":1697,"title":{},"body":{"components/UpdateAuthorHaikuComponent.html":{}}}],["updatedauthorhaiku).pipe",{"_index":1704,"title":{},"body":{"components/UpdateAuthorHaikuComponent.html":{}}}],["updatedauthorhaiku.id",{"_index":1705,"title":{},"body":{"components/UpdateAuthorHaikuComponent.html":{}}}],["updatedauthorhaikudto",{"_index":968,"title":{},"body":{"injectables/AuthorHaikuService.html":{}}}],["updatedprofile",{"_index":1732,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updatedprofile.bio",{"_index":1770,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updatedprofiledto",{"_index":1485,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateduser",{"_index":1735,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateduser.password",{"_index":1765,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateduser.username",{"_index":1763,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateduserdto",{"_index":1965,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduserhaiku",{"_index":1887,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["updateduserhaiku).pipe",{"_index":1895,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["updateduserhaiku.id",{"_index":1896,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["updateduserhaikudto",{"_index":1910,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{}}}],["updatedusernamelower",{"_index":1850,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["updatefilteredauthors",{"_index":353,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["updateprofile",{"_index":1470,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdateProfileComponent.html":{}}}],["updateprofile(profileid",{"_index":1484,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofile(updatedprofile",{"_index":1729,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateprofilecomponent",{"_index":219,"title":{"components/UpdateProfileComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updateprofileform",{"_index":1785,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["updateprofileformcomponent",{"_index":220,"title":{"components/UpdateProfileFormComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updates",{"_index":98,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/AuthorizationService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["updateuser",{"_index":1422,"title":{},"body":{"injectables/NavigationService.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["updateuser(updateduser",{"_index":1733,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateuser(userid",{"_index":1435,"title":{},"body":{"injectables/NavigationService.html":{},"injectables/UserService.html":{}}}],["updateuserform",{"_index":1786,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["updateuserhaiku",{"_index":1423,"title":{},"body":{"injectables/NavigationService.html":{},"components/UpdateUserHaikuComponent.html":{},"injectables/UserHaikuService.html":{}}}],["updateuserhaiku(updateduserhaiku",{"_index":1885,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["updateuserhaiku(userhaikuid",{"_index":1437,"title":{},"body":{"injectables/NavigationService.html":{},"injectables/UserHaikuService.html":{}}}],["updateuserhaikucomponent",{"_index":222,"title":{"components/UpdateUserHaikuComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updateuserhaikuform",{"_index":1897,"title":{},"body":{"components/UpdateUserHaikuFormComponent.html":{}}}],["updateuserhaikuformcomponent",{"_index":224,"title":{"components/UpdateUserHaikuFormComponent.html":{}},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updateuserorprofile",{"_index":1424,"title":{},"body":{"injectables/NavigationService.html":{}}}],["updateview",{"_index":1277,"title":{},"body":{"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{}}}],["updateview(isauthenticated",{"_index":1306,"title":{},"body":{"directives/IsUnAuthenticatedDirective.html":{}}}],["updating",{"_index":538,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/LogoutService.html":{},"injectables/ProfileService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["upload",{"_index":1263,"title":{},"body":{"injectables/ImageService.html":{}}}],["uploaded",{"_index":1260,"title":{},"body":{"injectables/ImageService.html":{}}}],["uploadimage",{"_index":1246,"title":{},"body":{"injectables/ImageService.html":{}}}],["uploadimage(selectedfile",{"_index":1254,"title":{},"body":{"injectables/ImageService.html":{}}}],["uploading",{"_index":1261,"title":{},"body":{"injectables/ImageService.html":{}}}],["uploads",{"_index":1257,"title":{},"body":{"injectables/ImageService.html":{}}}],["upon",{"_index":1262,"title":{},"body":{"injectables/ImageService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["url",{"_index":939,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["use",{"_index":2222,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":800,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1140,"title":{},"body":{"injectables/ErrorHandlingService.html":{},"classes/MatchingValidator.html":{},"changelog.html":{}}}],["user",{"_index":178,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{},"components/NotFoundComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user's",{"_index":838,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/AuthorizationGuard.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"guards/UnAuthenticatedGuard.html":{},"components/UpdateProfileFormComponent.html":{},"injectables/UserService.html":{}}}],["user'},{'name",{"_index":211,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["user.component",{"_index":792,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["user.component.ts",{"_index":2175,"title":{},"body":{"coverage.html":{}}}],["user.id",{"_index":1756,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["user.password",{"_index":1754,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["user.roleid",{"_index":1758,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["user.username",{"_index":1752,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["user/:id",{"_index":821,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user/single",{"_index":791,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["userapi",{"_index":1548,"title":{},"body":{"injectables/RegisterService.html":{},"injectables/UserService.html":{}}}],["userchangesmade",{"_index":1798,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["userdto",{"_index":8,"title":{"interfaces/UserDto.html":{}},"body":{"interfaces/AccountDto.html":{},"injectables/LoginService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserDto.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{},"coverage.html":{}}}],["userdto.model",{"_index":17,"title":{},"body":{"interfaces/AccountDto.html":{}}}],["userfriendlymessage",{"_index":1176,"title":{},"body":{"injectables/ErrorHandlingService.html":{}}}],["userhaiku",{"_index":1876,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{},"injectables/UserHaikuService.html":{}}}],["userhaiku'},{'name",{"_index":223,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["userhaikudto",{"_index":468,"title":{"interfaces/UserHaikuDto.html":{}},"body":{"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserHaikuDto.html":{},"injectables/UserHaikuService.html":{},"injectables/XmlSerializerService.html":{},"coverage.html":{}}}],["userhaikuid",{"_index":1439,"title":{},"body":{"injectables/NavigationService.html":{},"components/UpdateUserHaikuComponent.html":{},"injectables/UserHaikuService.html":{}}}],["userhaikuidtoupdate",{"_index":1890,"title":{},"body":{"components/UpdateUserHaikuComponent.html":{}}}],["userhaikus",{"_index":677,"title":{},"body":{"components/AllAuthorsComponent.html":{},"injectables/UserHaikuService.html":{}}}],["userhaikuservice",{"_index":465,"title":{"injectables/UserHaikuService.html":{}},"body":{"components/AddUserHaikuComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"injectables/UserHaikuService.html":{},"coverage.html":{}}}],["userhaikuurl",{"_index":1925,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["userhaikuurl(endpoint",{"_index":1939,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["userid",{"_index":488,"title":{},"body":{"components/AddUserHaikuFormComponent.html":{},"components/HeaderComponent.html":{},"injectables/NavigationService.html":{},"interfaces/ProfileDto.html":{},"injectables/ProfileService.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserHaikuDto.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["userid:number",{"_index":1918,"title":{},"body":{"interfaces/UserHaikuDto.html":{}}}],["userids",{"_index":1475,"title":{},"body":{"injectables/ProfileService.html":{}}}],["userids.join('&userids",{"_index":1492,"title":{},"body":{"injectables/ProfileService.html":{}}}],["useridsquery",{"_index":1491,"title":{},"body":{"injectables/ProfileService.html":{}}}],["useridtodelete",{"_index":1710,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["username",{"_index":1325,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"interfaces/UserDto.html":{},"injectables/UserService.html":{},"interfaces/UserUpdateDto.html":{},"injectables/UsernameValidator.html":{}}}],["username's",{"_index":1991,"title":{},"body":{"injectables/UsernameValidator.html":{}}}],["username/${username",{"_index":1977,"title":{},"body":{"injectables/UserService.html":{}}}],["usernameexists",{"_index":1995,"title":{},"body":{"injectables/UsernameValidator.html":{}}}],["usernames",{"_index":1984,"title":{},"body":{"injectables/UsernameValidator.html":{}}}],["usernametaken",{"_index":1985,"title":{},"body":{"injectables/UsernameValidator.html":{}}}],["usernamevalidator",{"_index":1529,"title":{"injectables/UsernameValidator.html":{}},"body":{"components/RegisterFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"injectables/UsernameValidator.html":{},"coverage.html":{}}}],["userrole",{"_index":1118,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["users",{"_index":820,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"guards/UnAuthenticatedGuard.html":{},"injectables/UserService.html":{}}}],["users'},{'name",{"_index":186,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["users.component",{"_index":789,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["users.component.ts",{"_index":2171,"title":{},"body":{"coverage.html":{}}}],["users/all",{"_index":788,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["userservice",{"_index":482,"title":{"injectables/UserService.html":{}},"body":{"components/AddUserHaikuFormComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserService.html":{},"injectables/UsernameValidator.html":{},"coverage.html":{}}}],["userupdateddto",{"_index":1863,"title":{},"body":{"components/UpdateProfileFormComponent.html":{}}}],["userupdatedto",{"_index":1711,"title":{"interfaces/UserUpdateDto.html":{}},"body":{"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"interfaces/UserUpdateDto.html":{},"coverage.html":{}}}],["userurl",{"_index":1551,"title":{},"body":{"injectables/RegisterService.html":{},"injectables/UserService.html":{}}}],["userurl(endpoint",{"_index":1558,"title":{},"body":{"injectables/RegisterService.html":{},"injectables/UserService.html":{}}}],["useruserhaikuapi",{"_index":1920,"title":{},"body":{"injectables/UserHaikuService.html":{}}}],["uses",{"_index":367,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{}}}],["utilities/error",{"_index":982,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["utilities/xml",{"_index":984,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["utility",{"_index":1567,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["valid",{"_index":268,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["validate",{"_index":1406,"title":{},"body":{"classes/MatchingValidator.html":{}}}],["validating",{"_index":1568,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["validation",{"_index":1587,"title":{},"body":{"classes/SyllableValidator.html":{},"components/UpdateProfileFormComponent.html":{}}}],["validationerrors",{"_index":1410,"title":{},"body":{"classes/MatchingValidator.html":{},"classes/SyllableValidator.html":{},"injectables/UsernameValidator.html":{}}}],["validator",{"_index":414,"title":{},"body":{"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"classes/MatchingValidator.html":{},"components/RegisterFormComponent.html":{},"classes/SyllableValidator.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UsernameValidator.html":{}}}],["validator.ts",{"_index":1396,"title":{},"body":{"classes/MatchingValidator.html":{},"classes/SyllableValidator.html":{},"injectables/UsernameValidator.html":{},"coverage.html":{}}}],["validator.ts:11",{"_index":1987,"title":{},"body":{"injectables/UsernameValidator.html":{}}}],["validator.ts:14",{"_index":1576,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["validator.ts:15",{"_index":1402,"title":{},"body":{"classes/MatchingValidator.html":{}}}],["validator.ts:19",{"_index":1988,"title":{},"body":{"injectables/UsernameValidator.html":{}}}],["validator.ts:35",{"_index":1580,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["validator.ts:60",{"_index":1583,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["validatorfn",{"_index":1408,"title":{},"body":{"classes/MatchingValidator.html":{}}}],["validators",{"_index":277,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["validators.maxlength(20",{"_index":1352,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["validators.maxlength(30",{"_index":1354,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["validators.maxlength(300",{"_index":286,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["validators.maxlength(50",{"_index":284,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["validators.minlength(2",{"_index":283,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["validators.minlength(4",{"_index":285,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["validators.minlength(8",{"_index":1353,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateProfileFormComponent.html":{}}}],["validators.required",{"_index":282,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["validity",{"_index":877,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{}}}],["value",{"_index":83,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/AuthorizationService.html":{},"injectables/ErrorHandlingService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/ImageService.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"injectables/RegisterService.html":{},"classes/SyllableValidator.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1405,"title":{},"body":{"classes/MatchingValidator.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["var",{"_index":168,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["variable",{"_index":2186,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2254,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verified",{"_index":1970,"title":{},"body":{"injectables/UserService.html":{}}}],["verifies",{"_index":1663,"title":{},"body":{"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"injectables/UserService.html":{}}}],["verify",{"_index":1546,"title":{},"body":{"injectables/RegisterService.html":{}}}],["verifying",{"_index":1979,"title":{},"body":{"injectables/UserService.html":{}}}],["verifyusername",{"_index":1953,"title":{},"body":{"injectables/UserService.html":{}}}],["verifyusername(username",{"_index":1968,"title":{},"body":{"injectables/UserService.html":{}}}],["version",{"_index":2210,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":2231,"title":{},"body":{"index.html":{}}}],["view",{"_index":69,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"injectables/NavigationService.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateUserHaikuComponent.html":{}}}],["viewauthor",{"_index":639,"title":{},"body":{"components/AllAuthorsComponent.html":{},"injectables/NavigationService.html":{}}}],["viewauthor(authorid",{"_index":659,"title":{},"body":{"components/AllAuthorsComponent.html":{},"injectables/NavigationService.html":{}}}],["viewauthorhaiku",{"_index":521,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"injectables/NavigationService.html":{}}}],["viewauthorhaiku(authorhaikuid",{"_index":559,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"injectables/NavigationService.html":{}}}],["viewauthorhaikus",{"_index":1425,"title":{},"body":{"injectables/NavigationService.html":{}}}],["viewauthors",{"_index":1426,"title":{},"body":{"injectables/NavigationService.html":{}}}],["viewcontainer",{"_index":1281,"title":{},"body":{"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{}}}],["viewcontainerref",{"_index":1282,"title":{},"body":{"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{}}}],["viewlogin",{"_index":1427,"title":{},"body":{"injectables/NavigationService.html":{},"components/UpdateProfileComponent.html":{}}}],["viewuser",{"_index":1428,"title":{},"body":{"injectables/NavigationService.html":{}}}],["viewuser(userid",{"_index":1446,"title":{},"body":{"injectables/NavigationService.html":{}}}],["viewuserhaiku",{"_index":1429,"title":{},"body":{"injectables/NavigationService.html":{}}}],["viewuserhaiku(userhaikuid",{"_index":1448,"title":{},"body":{"injectables/NavigationService.html":{}}}],["viewuserhaikus",{"_index":1430,"title":{},"body":{"injectables/NavigationService.html":{}}}],["viewusers",{"_index":1431,"title":{},"body":{"injectables/NavigationService.html":{}}}],["visual",{"_index":2071,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":80,"title":{},"body":{"components/AddAuthorComponent.html":{},"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"directives/IsAuthorizedDirective.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LogoutService.html":{},"injectables/NavigationService.html":{},"components/RegisterComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateAuthorHaikuComponent.html":{},"components/UpdateProfileComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["want",{"_index":623,"title":{},"body":{"components/AllAuthorHaikusComponent.html":{},"components/AllAuthorsComponent.html":{},"components/HeaderComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["welcome",{"_index":1217,"title":{},"body":{"components/HomeComponent.html":{}}}],["whether",{"_index":256,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/AuthorizationService.html":{},"directives/IsUnAuthenticatedDirective.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["window",{"_index":1189,"title":{},"body":{"components/FooterComponent.html":{}}}],["window.scrollto",{"_index":1192,"title":{},"body":{"components/FooterComponent.html":{}}}],["within",{"_index":1421,"title":{},"body":{"injectables/NavigationService.html":{}}}],["word",{"_index":1581,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["word.endswith('e",{"_index":1594,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["word.endswith('le",{"_index":1599,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["word.length",{"_index":1600,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["word.match(/[aeiouy]+/g",{"_index":1597,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["word.slice(0",{"_index":1596,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["word.tolowercase",{"_index":1593,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["words",{"_index":1571,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["words.foreach(word",{"_index":1591,"title":{},"body":{"classes/SyllableValidator.html":{}}}],["write",{"_index":2105,"title":{},"body":{"changelog.html":{}}}],["xml",{"_index":967,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{}}}],["xmldoc",{"_index":2036,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["xmldoc.documentelement.childnodes.foreach((node",{"_index":2046,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["xmldoc.getelementsbytagname(\"boolean\")[0",{"_index":2052,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["xmldoc.getelementsbytagname('parsererror",{"_index":2040,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["xmldoc.getelementsbytagname(itemtype",{"_index":2061,"title":{},"body":{"injectables/XmlSerializerService.html":{}}}],["xmlserializer",{"_index":925,"title":{},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{}}}],["xmlserializerservice",{"_index":926,"title":{"injectables/XmlSerializerService.html":{}},"body":{"injectables/AuthorHaikuService.html":{},"injectables/AuthorService.html":{},"injectables/ImageService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegisterService.html":{},"injectables/UserHaikuService.html":{},"injectables/UserService.html":{},"injectables/XmlSerializerService.html":{},"coverage.html":{}}}],["xmluserdto",{"_index":1373,"title":{},"body":{"injectables/LoginService.html":{}}}],["yes",{"_index":260,"title":{},"body":{"components/AddAuthorFormComponent.html":{},"components/AddAuthorHaikuFormComponent.html":{},"components/AddUserHaikuFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateAuthorFormComponent.html":{},"components/UpdateProfileFormComponent.html":{},"components/UpdateUserHaikuFormComponent.html":{}}}],["zone.js",{"_index":2207,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":721,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AccountDto.html":{"url":"interfaces/AccountDto.html","title":"interface - AccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/accountDto.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            UserDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bio\n                                        \n                                \n                                \n                                        \n                                            filePath\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserDto } from \"./userDto.model\";\nexport interface AccountDto extends UserDto {\n  bio: string;\n  filePath: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddAuthorComponent.html":{"url":"components/AddAuthorComponent.html","title":"component - AddAuthorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddAuthorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/authors/add-author/add-author.component.ts\n\n\n\n    \n        Description\n    \n    \n        A component for adding an author.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-author\n            \n\n\n\n            \n                styleUrls\n                ./add-author.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-author.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                loadingStates\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAuthor\n                            \n                            \n                                    Private\n                                clearMessages\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authorService: AuthorService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/authors/add-author/add-author.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorService\n                                                  \n                                                        \n                                                                        AuthorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addAuthor\n                        \n                    \n                \n            \n            \n                \naddAuthor(authorDto: AuthorDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/add-author/add-author.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Adds an author and navigates to the view page for the newly created author.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorDto\n                                            \n                                                            AuthorDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing the author details to be added.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clearMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/add-author/add-author.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Clears any error messages related to add loading.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any, type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/add-author/add-author.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Handles errors for specific types of operations (e.g., add loading) and updates loading states.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response or message.\n\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe type of operation encountering the error.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/add-author/add-author.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/add-author/add-author.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    add: null,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/add-author/add-author.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    add: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/add-author/add-author.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/add-author/add-author.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { finalize, Subject, takeUntil } from \"rxjs\";\nimport { AuthorService } from \"../../../core/services/author.service\";\nimport { AuthorDto } from \"../../../shared/models/authorDto.model\";\nimport { OnInit } from \"@angular/core\";\n\n/**\n * A component for adding an author.\n*/\n@Component({\n  selector: 'app-add-author',\n  templateUrl: './add-author.component.html',\n  styleUrls: ['./add-author.component.css']\n})\nexport class AddAuthorComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  errorMessages: { add: string | null } = {\n    add: null,\n  };\n\n  loadingStates = {\n    add: false,\n  };\n\n  constructor(\n    private authorService: AuthorService,\n    private router: Router\n  ) { }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  ngOnInit(): void {\n    this.clearMessages();\n  }\n\n  /**\n   * Clears any error messages related to add loading.\n   * @returns {void} This method does not return a value.\n  */\n  private clearMessages(): void {\n    this.errorMessages = {\n      add: null,\n    };\n  }\n\n  /**\n   * Handles errors for specific types of operations (e.g., add loading) and updates loading states.\n   * \n   * @param {any} error - The error response or message.\n   * @param {'add'} type - The type of operation encountering the error.\n   * @returns {void} This method does not return a value.\n  */\n  private handleError(error: any, type: 'add'): void {\n    this.loadingStates[type] = false;\n    this.errorMessages[type] = error.message || 'An unknown error occurred, please try again later.';\n  }\n\n  /**\n   * Adds an author and navigates to the view page for the newly created author.\n   * \n   * @param {AuthorDto} authorDto - The data transfer object containing the author details to be added.\n   * @returns {void} This method does not return a value.\n   * @throws Will call `handleError` with an error message on failure.\n  */\n  addAuthor(authorDto: AuthorDto): void {\n    this.loadingStates.add = true;\n\n    this.authorService.addAuthor(authorDto).pipe(\n      takeUntil(this.unsubscribe$),\n      finalize(() => {\n        this.loadingStates.add = false\n      })\n    ).subscribe({\n      next: (response) => {\n        this.router.navigate(['/view-author', response.id]);\n      },\n      error: error => this.handleError(error, 'add')\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n           Add Author\n        \n        \n          {{ errorMessages.add }}\n        \n        \n          \n            \n              \n                 Name\n              : Minimum length of 2 characters, maximum of 50 characters.\n            \n            \n              \n                 Bio\n              : Minimum length of 4 characters, maximum of 300 characters. If left empty, it defaults to \"No Bio\".\n            \n          \n          Fields marked with * are required.\n        \n        \n          \n            \n              Loading...\n            \n          \n        \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./add-author.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Add Author                          {{ errorMessages.add }}                                                                     Name              : Minimum length of 2 characters, maximum of 50 characters.                                                       Bio              : Minimum length of 4 characters, maximum of 300 characters. If left empty, it defaults to \"No Bio\".                                Fields marked with * are required.                                                    Loading...                                                                                          '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddAuthorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddAuthorFormComponent.html":{"url":"components/AddAuthorFormComponent.html","title":"component - AddAuthorFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddAuthorFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/authors/add-author/add-author-form/add-author-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        A component for adding an author through a form.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-author-form\n            \n\n\n\n            \n                styleUrls\n                ./add-author-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-author-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addAuthorForm\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultBio\n                            \n                            \n                                isSubmitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hasError\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                formSubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/authors/add-author/add-author-form/add-author-form.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        formSubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/authors/add-author/add-author-form/add-author-form.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(controlName: string, errorType?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/add-author/add-author-form/add-author-form.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Checks whether a form control has a specific error or is invalid.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the form control.\n\n\n                                            \n                                        \n                                        \n                                                errorType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe specific error type to check for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the control is invalid and the error matches, or if no specific error type is provided.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/add-author/add-author-form/add-author-form.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Submits the form and emits the form data as an AuthorDto if the form is valid.\nIf the bio is not provided, it defaults to 'No Bio'.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/add-author/add-author-form/add-author-form.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Resets the form and clears the submission state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addAuthorForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/add-author/add-author-form/add-author-form.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultBio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"No Bio.\"\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/add-author/add-author-form/add-author-form.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/add-author/add-author-form/add-author-form.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthorDto } from '../../../../shared/models/authorDto.model';\n\n/**\n * A component for adding an author through a form.\n*/\n@Component({\n  selector: 'app-add-author-form',\n  templateUrl: './add-author-form.component.html',\n  styleUrls: ['./add-author-form.component.css']\n})\nexport class AddAuthorFormComponent {\n  addAuthorForm: FormGroup;\n  private readonly defaultBio = \"No Bio.\"\n\n  @Output() formSubmit = new EventEmitter();\n  isSubmitted = false; \n\n  constructor(private fb: FormBuilder) {\n    this.addAuthorForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n      bio: ['', [Validators.minLength(4), Validators.maxLength(300)]]\n    });\n  }\n\n  /**\n   * Submits the form and emits the form data as an `AuthorDto` if the form is valid.\n   * If the bio is not provided, it defaults to 'No Bio'.\n   * @returns {void} This method does not return a value.\n  */\n  onSubmit() {\n    this.isSubmitted = true;\n\n    if (this.addAuthorForm.valid) {\n      const authorDto: AuthorDto = {\n        ...this.addAuthorForm.value,\n        bio: this.addAuthorForm.value.bio || this.defaultBio,\n      };\n\n      this.formSubmit.emit(authorDto);\n      this.resetForm();\n    }\n  }\n\n  /**\n   * Resets the form and clears the submission state.\n   * \n   * @throws Will call `handleError` with an error message on failure.\n  */\n  resetForm(): void {\n    this.isSubmitted = false;\n    this.addAuthorForm.reset();\n  }\n\n  /**\n * Checks whether a form control has a specific error or is invalid.\n * \n * @param {string} controlName - The name of the form control.\n * @param {string} [errorType] - The specific error type to check for.\n * @returns {boolean} - Returns true if the control is invalid and the error matches, or if no specific error type is provided.\n*/\n  hasError(controlName: string, errorType?: string): boolean {\n    const control = this.addAuthorForm.get(controlName);\n    if (!control) {\n      return false;\n    }\n    return this.isSubmitted && control.invalid && (errorType ? control.hasError(errorType) : true);\n  }\n}\n\n    \n\n    \n        \n\n  \n    Name*\n    \n      \n        \n          \n        \n      \n      \n    \n    \n      Name is required!\n    \n    \n      Name length can't be less than 2.\n    \n    \n      Name length can't be more than 50.\n    \n  \n\n  \n    Bio\n    \n      \n        \n          \n        \n      \n      \n    \n\n    \n      Bio length can't be less than 4, if not left empty.\n    \n    \n      Bio length can't be more than 300.\n    \n  \n\n  \n    Confirm\n  \n  Cancel\n\n\n    \n\n    \n                \n                    ./add-author-form.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Name*                                                              Name is required!              Name length can\\'t be less than 2.              Name length can\\'t be more than 50.            Bio                                                              Bio length can\\'t be less than 4, if not left empty.              Bio length can\\'t be more than 300.            Confirm    Cancel'\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddAuthorFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddAuthorHaikuComponent.html":{"url":"components/AddAuthorHaikuComponent.html","title":"component - AddAuthorHaikuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddAuthorHaikuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/author-haikus/add-author-haiku/add-author-haiku.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-author-haiku\n            \n\n\n\n            \n                styleUrls\n                ./add-author-haiku.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-author-haiku.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                loadingStates\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAuthorHaiku\n                            \n                            \n                                    Private\n                                clearMessages\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authorHaikuService: AuthorHaikuService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorHaikuService\n                                                  \n                                                        \n                                                                        AuthorHaikuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addAuthorHaiku\n                        \n                    \n                \n            \n            \n                \naddAuthorHaiku(authorHaikuDto: AuthorHaikuDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Adds a new haiku for an author and navigates to the view page for the newly created haiku.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorHaikuDto\n                                            \n                                                            AuthorHaikuDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing the haiku details to be added.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clearMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Clears any error messages related to add loading.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any, type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Handles errors for specific types of operations (e.g., add loading) and updates loading states.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response or message.\n\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe type of operation encountering the error.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    add: null\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    add: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { finalize, Subject, takeUntil } from \"rxjs\";\nimport { OnInit } from \"@angular/core\";\nimport { AuthorHaikuService } from \"../../../core/services/author-haiku.service\";\nimport { AuthorHaikuDto } from \"../../../shared/models/authorHaikuDto.model\";\n\n@Component({\n  selector: 'app-add-author-haiku',\n  templateUrl: './add-author-haiku.component.html',\n  styleUrls: ['./add-author-haiku.component.css']\n})\nexport class AddAuthorHaikuComponent implements OnInit, OnDestroy { \n  private unsubscribe$ = new Subject();\n\n  errorMessages: { add: string | null } = {\n    add: null\n  };\n\n  loadingStates = {\n    add: false\n  };\n\n  constructor(\n    private authorHaikuService: AuthorHaikuService,\n    private router: Router\n  ) { }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  ngOnInit(): void {\n    this.clearMessages();\n  }\n\n  /**\n   * Clears any error messages related to add loading.\n   * @returns {void} This method does not return a value.\n  */\n  private clearMessages(): void {\n    this.errorMessages = {\n      add: null,\n    };\n  }\n\n  /**\n   * Handles errors for specific types of operations (e.g., add loading) and updates loading states.\n   * \n   * @param {any} error - The error response or message.\n   * @param {'add'} type - The type of operation encountering the error.\n   * @returns {void} This method does not return a value.\n  */\n  private handleError(error: any, type: 'add'): void {\n    this.loadingStates[type] = false;\n    this.errorMessages[type] = error.message || 'An unknown error occurred, please try again later.';\n  }\n\n  /**\n   * Adds a new haiku for an author and navigates to the view page for the newly created haiku.\n   * \n   * @param {AuthorHaikuDto} authorHaikuDto - The data transfer object containing the haiku details to be added.\n   * @returns {void} This method does not return a value.\n   * @throws Will call `handleError` with an error message on failure.\n  */\n  addAuthorHaiku(authorHaikuDto: AuthorHaikuDto): void {\n    this.loadingStates.add = true;\n\n    this.authorHaikuService.addAuthorHaiku(authorHaikuDto).pipe(\n      takeUntil(this.unsubscribe$),\n      finalize(() => {\n        this.loadingStates.add = false\n      })\n    ).subscribe({\n      next: response => {\n        this.router.navigate(['/view-author-haiku', response.id]);\n      },\n      error: error => this.handleError(error, 'add')\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n           Add Author Haiku\n        \n        \n          {{ errorMessages.add }}\n        \n        \n          \n            \n              \n                 Title\n              : Minimum length of 2 characters, maximum of 50 characters. If left empty, it defaults to \"Untitled\".\n            \n            \n              \n                 Line One\n              : Total length of 5 syllables.\n            \n            \n              \n                 Line Two\n              : Total length of 7 syllables.\n            \n            \n              \n                 Line Three\n              : Total length of 5 syllables.\n            \n          \n          Fields marked with * are required.\n        \n        \n          \n            \n              Loading...\n            \n          \n        \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./add-author-haiku.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Add Author Haiku                          {{ errorMessages.add }}                                                                     Title              : Minimum length of 2 characters, maximum of 50 characters. If left empty, it defaults to \"Untitled\".                                                       Line One              : Total length of 5 syllables.                                                       Line Two              : Total length of 7 syllables.                                                       Line Three              : Total length of 5 syllables.                                Fields marked with * are required.                                                    Loading...                                                                                          '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddAuthorHaikuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddAuthorHaikuFormComponent.html":{"url":"components/AddAuthorHaikuFormComponent.html","title":"component - AddAuthorHaikuFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddAuthorHaikuFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-author-haiku-form\n            \n\n\n\n            \n                styleUrls\n                ./add-author-haiku-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-author-haiku-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addAuthorHaikuForm\n                            \n                            \n                                authorsDto\n                            \n                            \n                                currentPage\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultTitle\n                            \n                            \n                                errorMessages\n                            \n                            \n                                filteredAuthorsDto\n                            \n                            \n                                hasMoreAuthors\n                            \n                            \n                                isSubmitted\n                            \n                            \n                                loadingStates\n                            \n                            \n                                pageSize\n                            \n                            \n                                searchTerm\n                            \n                            \n                                    Private\n                                searchText$\n                            \n                            \n                                totalCount\n                            \n                            \n                                totalPages\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearMessages\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                hasError\n                            \n                            \n                                loadAuthors\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                            \n                                searchInput\n                            \n                            \n                                selectAuthor\n                            \n                            \n                                updateFilteredAuthors\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                formSubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authorService: AuthorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorService\n                                                  \n                                                        \n                                                                        AuthorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        formSubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clearMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Clears any error messages related to author loading.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any, type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Handles errors for specific types of operations (e.g., author loading) and updates loading states.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response or message.\n\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe type of operation encountering the error.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(controlName: string, errorType?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Checks whether a form control has a specific error or is invalid.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the form control.\n\n\n                                            \n                                        \n                                        \n                                                errorType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe specific error type to check for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the control is invalid and the error matches, or if no specific error type is provided.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadAuthors\n                        \n                    \n                \n            \n            \n                \nloadAuthors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Loads a paginated list of authors based on the search term.\nThis method uses RxJS operators to handle debounce, switchMap, and loading states.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:152\n                        \n                    \n\n\n            \n                \n                        Submits the form and emits the form data as an AuthorHaikuDto if the form is valid.\nIf the title is not provided, it defaults to 'Untitled'.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:169\n                        \n                    \n\n\n            \n                \n                        Resets the form and clears the submission state.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchInput\n                        \n                    \n                \n            \n            \n                \nsearchInput(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Handles the user input event for searching authors. It updates the searchText$ BehaviorSubject with the current value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe input event from the search field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAuthor\n                        \n                    \n                \n            \n            \n                \nselectAuthor(authorDto: AuthorDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:143\n                        \n                    \n\n\n            \n                \n                        Selects an author from the filtered authors list and patches the form with the selected author's name and ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorDto\n                                            \n                                                            AuthorDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected author DTO object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFilteredAuthors\n                        \n                    \n                \n            \n            \n                \nupdateFilteredAuthors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Filters the list of authors based on the current search term.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addAuthorHaikuForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authorsDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Untitled\"\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    authors: null\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredAuthorsDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasMoreAuthors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    authors: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        searchText$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BehaviorSubject, debounceTime, distinctUntilChanged, finalize, Subject, switchMap, takeUntil } from 'rxjs';\nimport { AuthorService } from '../../../../core/services/author.service';\nimport { SyllableValidator } from '../../../../core/utilities/syllable-validator';\nimport { AuthorDto } from '../../../../shared/models/authorDto.model';\nimport { AuthorHaikuDto } from '../../../../shared/models/authorHaikuDto.model';\n\n@Component({\n  selector: 'app-add-author-haiku-form',\n  templateUrl: './add-author-haiku-form.component.html',\n  styleUrls: ['./add-author-haiku-form.component.css']\n})\nexport class AddAuthorHaikuFormComponent implements OnInit, OnDestroy {\n  addAuthorHaikuForm: FormGroup;\n  private unsubscribe$ = new Subject();\n  private searchText$ = new BehaviorSubject('');\n  private readonly defaultTitle = \"Untitled\";\n\n  @Output() formSubmit = new EventEmitter();\n\n  isSubmitted: boolean = false;\n  hasMoreAuthors = false;\n  searchTerm: string = '';\n\n  errorMessages: { authors: string | null } = {\n    authors: null\n  };\n\n  loadingStates = {\n    authors: false\n  };\n\n  authorsDto: AuthorDto [] = [];\n  filteredAuthorsDto: AuthorDto[] = [];\n\n  currentPage: number = 1;\n  pageSize: number = 20;\n  totalCount: number = 0;\n  totalPages: number = 0;\n\n  constructor(private fb: FormBuilder, private authorService: AuthorService) {\n    this.addAuthorHaikuForm = this.fb.group({\n      name: [''],\n      title: ['', [Validators.minLength(2), Validators.maxLength(50)]],\n      lineOne: ['', [Validators.required, SyllableValidator.syllableCountValidator(5)]],\n      lineTwo: ['', [Validators.required, SyllableValidator.syllableCountValidator(7)]],\n      lineThree: ['', [Validators.required, SyllableValidator.syllableCountValidator(5)]],\n      authorId: [null, [Validators.required]]\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  ngOnInit(): void {\n    this.clearMessages();\n    this.loadAuthors();\n  }\n\n  /**\n   * Clears any error messages related to author loading.\n   * @returns {void} This method does not return a value.\n  */\n  private clearMessages(): void {\n    this.errorMessages = {\n      authors: null,\n    };\n  }\n\n  /**\n   * Handles errors for specific types of operations (e.g., author loading) and updates loading states.\n   * \n   * @param {any} error - The error response or message.\n   * @param {'authors'} type - The type of operation encountering the error.\n   * @returns {void} This method does not return a value.\n  */\n  private handleError(error: any, type: 'authors'): void {\n    this.loadingStates[type] = false;\n    this.errorMessages[type] = error.message || 'An unknown error occurred, please try again later.';\n  }\n\n  /**\n   * Loads a paginated list of authors based on the search term.\n   * This method uses RxJS operators to handle debounce, switchMap, and loading states.\n   * @returns {void} This method does not return a value.\n   * @throws Will call `handleError` with an error message on failure.\n  */\n  loadAuthors(): void {\n    this.loadingStates.authors = true;\n\n    this.searchText$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      switchMap(searchTerm => {\n        return this.authorService.getAllAuthors(this.currentPage, this.pageSize, searchTerm).pipe(\n          takeUntil(this.unsubscribe$),\n          finalize(() => this.loadingStates.authors = false)\n        );\n      })\n    ).subscribe({\n      next: ({ authors, paginationMetadata }) => {\n        this.authorsDto = authors;\n        this.totalCount = paginationMetadata.totalCount;\n        this.totalPages = Math.ceil(this.totalCount / this.pageSize);\n        this.hasMoreAuthors = this.totalPages > this.currentPage;\n        this.updateFilteredAuthors();\n      },\n      error: error => this.handleError(error, 'authors')\n    });\n  }\n\n  /**\n   * Handles the user input event for searching authors. It updates the `searchText$` BehaviorSubject with the current value.\n   * \n   * @param {Event} event - The input event from the search field.\n   * @returns {void} This method does not return a value.\n  */\n  searchInput(event: Event): void {\n    const inputElement = event.target as HTMLInputElement;\n    const inputValue = inputElement.value;\n    this.searchText$.next(inputValue);\n  }\n\n  /**\n   * Filters the list of authors based on the current search term.\n   * @returns {void} This method does not return a value.\n  */\n  updateFilteredAuthors(): void {\n    this.filteredAuthorsDto = this.authorsDto.filter(author =>\n      author.name.toLowerCase().includes(this.searchTerm.toLowerCase())\n    );\n  }\n\n  /**\n   * Selects an author from the filtered authors list and patches the form with the selected author's name and ID.\n   * \n   * @param {AuthorDto} authorDto - The selected author DTO object.\n   * @returns {void} This method does not return a value.\n  */\n  selectAuthor(authorDto: AuthorDto): void {\n    this.addAuthorHaikuForm.patchValue({ name: authorDto.name, authorId: authorDto.id });\n  }\n\n  /**\n   * Submits the form and emits the form data as an `AuthorHaikuDto` if the form is valid.\n   * If the title is not provided, it defaults to 'Untitled'.\n   * @returns {void} This method does not return a value.\n  */\n  onSubmit(): void {\n    this.isSubmitted = true;\n  \n    if (this.addAuthorHaikuForm.valid) {\n      const authorAuthorHaikuDto: AuthorHaikuDto = {\n        ...this.addAuthorHaikuForm.value,\n        title: this.addAuthorHaikuForm.value.title || this.defaultTitle,\n      };\n      this.formSubmit.emit(authorAuthorHaikuDto);\n      this.resetForm();\n    }\n  }\n\n  /**\n   * Resets the form and clears the submission state.\n   * @returns {void} This method does not return a value.\n  */\n  resetForm(): void {\n    this.isSubmitted = false;\n    this.addAuthorHaikuForm.reset();\n  }\n\n  /**\n   * Checks whether a form control has a specific error or is invalid.\n   * \n   * @param {string} controlName - The name of the form control.\n   * @param {string} [errorType] - The specific error type to check for.\n   * @returns {boolean} - Returns true if the control is invalid and the error matches, or if no specific error type is provided.\n  */\n  hasError(controlName: string, errorType?: string): boolean {\n    const control = this.addAuthorHaikuForm.get(controlName);\n    if (!control) {\n      return false;\n    }\n    return this.isSubmitted && control.invalid && (errorType ? control.hasError(errorType) : true);\n  }\n}\n\n    \n\n    \n        \n\n  \n    Author*\n    \n      \n        \n          \n        \n      \n      \n        Select a Author...\n        \n        \n          \n            {{ author.name }}\n          \n          \n            More available...\n          \n        \n      \n    \n    \n      Author is required!\n    \n  \n\n  \n    Title\n    \n      \n        \n      \n      \n    \n    \n      Title length can't be less than 2, if not left empty.\n    \n    \n      Title length can't be more than 50.\n    \n  \n\n  \n    Line One*\n    \n      \n        \n      \n      \n    \n    \n      Line One is required!\n    \n    \n      Line One must have 5 syllables.\n    \n  \n\n  \n    Line Two*\n    \n      \n        \n      \n      \n    \n    \n      Line Two is required!\n    \n    \n      Line Two must have 7 syllables.\n    \n  \n\n  \n    Line Three*\n    \n      \n        \n      \n      \n    \n    \n      Line Three is required!\n    \n    \n      Line Three must have 5 syllables.\n    \n  \n\n  \n    Confirm\n  \n  Cancel\n\n\n    \n\n    \n                \n                    ./add-author-haiku-form.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Author*                                                        Select a Author...                                      {{ author.name }}                                More available...                                      Author is required!            Title                                            Title length can\\'t be less than 2, if not left empty.              Title length can\\'t be more than 50.            Line One*                                            Line One is required!              Line One must have 5 syllables.            Line Two*                                            Line Two is required!              Line Two must have 7 syllables.            Line Three*                                            Line Three is required!              Line Three must have 5 syllables.            Confirm    Cancel'\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddAuthorHaikuFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddUserHaikuComponent.html":{"url":"components/AddUserHaikuComponent.html","title":"component - AddUserHaikuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddUserHaikuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/user-haikus/add-user-haiku/add-user-haiku.component.ts\n\n\n\n    \n        Description\n    \n    \n        A component for adding a user haiku for an user.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user-haiku\n            \n\n\n\n            \n                styleUrls\n                ./add-user-haiku.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-user-haiku.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                loadingStates\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUserHaiku\n                            \n                            \n                                    Private\n                                clearMessages\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userHaikuService: UserHaikuService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userHaikuService\n                                                  \n                                                        \n                                                                        UserHaikuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUserHaiku\n                        \n                    \n                \n            \n            \n                \naddUserHaiku(userHaikuDto: UserHaikuDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Adds an user haiku and navigates to the view page for the newly created user haiku.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userHaikuDto\n                                            \n                                                            UserHaikuDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing the user haiku details to be added.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clearMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Clears any error messages related to add loading.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any, type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Handles errors for specific types of operations (e.g., add loading) and updates loading states.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response or message.\n\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe type of operation encountering the error.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    add: null\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    add: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { finalize, Subject, takeUntil } from \"rxjs\";\nimport { OnInit } from \"@angular/core\";\nimport { UserHaikuService } from \"../../../core/services/user-haiku.service\";\nimport { UserHaikuDto } from \"../../../shared/models/userHaikuDto.model\";\n\n/**\n * A component for adding a user haiku for an user.\n*/\n@Component({\n  selector: 'app-add-user-haiku',\n  templateUrl: './add-user-haiku.component.html',\n  styleUrls: ['./add-user-haiku.component.css']\n})\nexport class AddUserHaikuComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  errorMessages: { add: string | null } = {\n    add: null\n  };\n\n  loadingStates = {\n    add: false\n  };\n\n  constructor(\n    private userHaikuService: UserHaikuService,\n    private router: Router\n  ) {\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  ngOnInit(): void {\n    this.clearMessages();\n  }\n\n  /**\n   * Clears any error messages related to add loading.\n   * @returns {void} This method does not return a value.\n  */\n  private clearMessages(): void {\n    this.errorMessages = {\n      add: null,\n    };\n  }\n\n  /**\n   * Handles errors for specific types of operations (e.g., add loading) and updates loading states.\n   * \n   * @param {any} error - The error response or message.\n   * @param {'add'} type - The type of operation encountering the error.\n   * @returns {void} This method does not return a value.\n  */\n  private handleError(error: any, type: 'add'): void {\n    this.loadingStates[type] = false;\n    this.errorMessages[type] = error.message || 'An unknown error occurred, please try again later.';\n  }\n\n  /**\n   * Adds an user haiku and navigates to the view page for the newly created user haiku.\n   * \n   * @param {UserHaikuDto} userHaikuDto - The data transfer object containing the user haiku details to be added.\n   * @returns {void} This method does not return a value.\n   * @throws Will call `handleError` with an error message on failure.\n  */\n  addUserHaiku(userHaikuDto: UserHaikuDto): void {\n    this.loadingStates.add = true;\n   \n    this.userHaikuService.addUserHaiku(userHaikuDto).pipe(\n      takeUntil(this.unsubscribe$),\n      finalize(() => {\n        this.loadingStates.add = false\n      })\n    ).subscribe({\n      next: response => {\n        this.router.navigate(['/view-user-haiku', response.id]);\n      },\n      error: error => this.handleError(error, 'add')\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n           Add User Haiku\n        \n        \n          {{ errorMessages.add }}\n        \n        \n          \n            \n              \n                 Title\n              : Minimum length of 2 characters, maximum of 50 characters. If left empty, it defaults to \"Untitled\".\n            \n            \n              \n                 Line One\n              : Total length of 5 syllables.\n            \n            \n              \n                 Line Two\n              : Total length of 7 syllables.\n            \n            \n              \n                 Line Three\n              : Total length of 5 syllables.\n            \n          \n          Fields marked with * are required.\n        \n        \n          \n            \n              Loading...\n            \n          \n        \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./add-user-haiku.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Add User Haiku                          {{ errorMessages.add }}                                                                     Title              : Minimum length of 2 characters, maximum of 50 characters. If left empty, it defaults to \"Untitled\".                                                       Line One              : Total length of 5 syllables.                                                       Line Two              : Total length of 7 syllables.                                                       Line Three              : Total length of 5 syllables.                                Fields marked with * are required.                                                    Loading...                                                                                          '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddUserHaikuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddUserHaikuFormComponent.html":{"url":"components/AddUserHaikuFormComponent.html","title":"component - AddUserHaikuFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddUserHaikuFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/user-haikus/add-user-haiku/add-user-haiku-form/add-user-haiku-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        A component for adding a user haiku through a form.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user-haiku-form\n            \n\n\n\n            \n                styleUrls\n                ./add-user-haiku-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-user-haiku-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addUserHaikuForm\n                            \n                            \n                                currentUserId\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultTitle\n                            \n                            \n                                isSubmitted\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hasError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                formSubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, userService: UserService, authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku-form/add-user-haiku-form.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        formSubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku-form/add-user-haiku-form.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(controlName: string, errorType?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku-form/add-user-haiku-form.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Checks whether a form control has a specific error or is invalid.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the form control.\n\n\n                                            \n                                        \n                                        \n                                                errorType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe specific error type to check for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the control is invalid and the error matches, or if no specific error type is provided.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku-form/add-user-haiku-form.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku-form/add-user-haiku-form.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Submits the form and emits the form data as an UserHaikuDto if the form is valid.\nUserId is set by default.\nIf the title is not provided, it defaults to 'Untitled'.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku-form/add-user-haiku-form.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Resets the form and clears the submission state.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addUserHaikuForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku-form/add-user-haiku-form.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku-form/add-user-haiku-form.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Untitled\"\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku-form/add-user-haiku-form.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku-form/add-user-haiku-form.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-haikus/add-user-haiku/add-user-haiku-form/add-user-haiku-form.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { AuthenticationService } from '../../../../core/services/authentication.service';\nimport { UserService } from '../../../../core/services/user.service';\nimport { SyllableValidator } from '../../../../core/utilities/syllable-validator';\nimport { UserHaikuDto } from '../../../../shared/models/userHaikuDto.model';\n\n/**\n * A component for adding a user haiku through a form.\n*/\n@Component({\n  selector: 'app-add-user-haiku-form',\n  templateUrl: './add-user-haiku-form.component.html',\n  styleUrls: ['./add-user-haiku-form.component.css']\n})\nexport class AddUserHaikuFormComponent implements OnInit {\n  addUserHaikuForm: FormGroup;\n  private readonly defaultTitle = \"Untitled\";\n\n  private unsubscribe$ = new Subject();\n  @Output() formSubmit = new EventEmitter();\n\n  isSubmitted: boolean = false;\n  currentUserId: number | null = null;\n\n  constructor(private fb: FormBuilder, private userService: UserService, private authService: AuthenticationService) {\n    this.addUserHaikuForm = this.fb.group({\n      title: ['', [Validators.minLength(2), Validators.maxLength(50)]],\n      lineOne: ['', [Validators.required, SyllableValidator.syllableCountValidator(5)]],\n      lineTwo: ['', [Validators.required, SyllableValidator.syllableCountValidator(7)]],\n      lineThree: ['', [Validators.required, SyllableValidator.syllableCountValidator(5)]],\n      userId: [null]\n    });\n  }\n\n  ngOnInit(): void {\n    this.currentUserId = this.authService.getUserId();\n  }\n\n  /**\n   * Submits the form and emits the form data as an `UserHaikuDto` if the form is valid.\n   * UserId is set by default.\n   * If the title is not provided, it defaults to 'Untitled'.\n   * @returns {void} This method does not return a value.\n  */\n  onSubmit(): void {\n    this.isSubmitted = true;\n\n    if (this.addUserHaikuForm.valid && this.currentUserId != null) {\n      const newUserHaikuDto: UserHaikuDto = {\n        ...this.addUserHaikuForm.value,\n        userId: this.currentUserId,\n        title: this.addUserHaikuForm.value.title || this.defaultTitle\n      };\n      this.formSubmit.emit(newUserHaikuDto);\n      this.resetForm();\n    }\n  }\n\n  /**\n   * Resets the form and clears the submission state.\n   * @returns {void} This method does not return a value.\n  */\n  resetForm(): void {\n    this.isSubmitted = false;\n    this.addUserHaikuForm.reset();\n  }\n\n  /**\n   * Checks whether a form control has a specific error or is invalid.\n   * \n   * @param {string} controlName - The name of the form control.\n   * @param {string} [errorType] - The specific error type to check for.\n   * @returns {boolean} - Returns true if the control is invalid and the error matches, or if no specific error type is provided.\n  */\n  hasError(controlName: string, errorType?: string): boolean {\n    const control = this.addUserHaikuForm.get(controlName);\n    if (!control) {\n      return false;\n    }\n    return this.isSubmitted && control.invalid && (errorType ? control.hasError(errorType) : true);\n  }\n}\n\n    \n\n    \n        \n\n  \n    Title\n    \n      \n        \n      \n      \n    \n    \n      Title length can't be less than 2, if not left empty.\n    \n    \n      Title length can't be more than 50.\n    \n  \n\n  \n    Line One*\n    \n      \n        \n      \n      \n    \n    \n      Line One is required!\n    \n    \n      Line One must have 5 syllables.\n    \n  \n\n  \n    Line Two*\n    \n      \n        \n      \n      \n    \n    \n      Line Two is required!\n    \n    \n      Line Two must have 7 syllables.\n    \n  \n\n  \n    Line Three*\n    \n      \n        \n      \n      \n    \n    \n      Line Three is required!\n    \n    \n      Line Three must have 5 syllables.\n    \n  \n\n  \n    Confirm\n  \n  Cancel\n\n\n    \n\n    \n                \n                    ./add-user-haiku-form.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Title                                            Title length can\\'t be less than 2, if not left empty.              Title length can\\'t be more than 50.            Line One*                                            Line One is required!              Line One must have 5 syllables.            Line Two*                                            Line Two is required!              Line Two must have 7 syllables.            Line Three*                                            Line Three is required!              Line Three must have 5 syllables.            Confirm    Cancel'\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddUserHaikuFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AllAuthorHaikusComponent.html":{"url":"components/AllAuthorHaikusComponent.html","title":"component - AllAuthorHaikusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AllAuthorHaikusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-all-author-haikus\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./all-author-haikus.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authorHaikuIdToDelete\n                            \n                            \n                                authorHaikusDto\n                            \n                            \n                                currentPage\n                            \n                            \n                                errorMessages\n                            \n                            \n                                filteredAuthorHaikusDto\n                            \n                            \n                                loadingStates\n                            \n                            \n                                pageSize\n                            \n                            \n                                searchTerm\n                            \n                            \n                                    Private\n                                searchText$\n                            \n                            \n                                sortDirection\n                            \n                            \n                                successMessages\n                            \n                            \n                                totalCount\n                            \n                            \n                                totalPages\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearMessages\n                            \n                            \n                                deleteAuthorHaiku\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                isPageEmpty\n                            \n                            \n                                loadAuthorHaikus\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPageChange\n                            \n                            \n                                openAuthorHaikuModal\n                            \n                            \n                                search\n                            \n                            \n                                sortByTitle\n                            \n                            \n                                updateAuthorHaiku\n                            \n                            \n                                viewAuthorHaiku\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authorHaikuService: AuthorHaikuService, navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorHaikuService\n                                                  \n                                                        \n                                                                        AuthorHaikuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clearMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Clears any error messages related to author haikus loading.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAuthorHaiku\n                        \n                    \n                \n            \n            \n                \ndeleteAuthorHaiku()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Deletes a author haiku based on the user haiku ID stored in authorHaikuIdToDelete.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any, type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Handles errors for specific types of operations (e.g., author haikus loading) and updates loading states.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response or message.\n\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe type of operation encountering the error.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPageEmpty\n                        \n                    \n                \n            \n            \n                \nisPageEmpty()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:194\n                        \n                    \n\n\n            \n                \n                        Checks if the current page has no author haikus and changes the page to the first page if true.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadAuthorHaikus\n                        \n                    \n                \n            \n            \n                \nloadAuthorHaikus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Loads a paginated list of author haikus based on the search term.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPageChange\n                        \n                    \n                \n            \n            \n                \nonPageChange(newPage: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:206\n                        \n                    \n\n\n            \n                \n                        Handles pagination by updating the current page and loading author haikus for that page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new page number to load author haikus for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAuthorHaikuModal\n                        \n                    \n                \n            \n            \n                \nopenAuthorHaikuModal(authorHaikuId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:171\n                        \n                    \n\n\n            \n                \n                        Opens a modal for author deletion confirmation by setting the user haiku ID to delete.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorHaikuId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the author haiku to be deleted.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Handles the user input event for searching author haikus. It updates the searchText$ BehaviorSubject with the current value.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortByTitle\n                        \n                    \n                \n            \n            \n                \nsortByTitle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:180\n                        \n                    \n\n\n            \n                \n                        Toggles the sorting direction and sorts the filtered author haikus by title.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAuthorHaiku\n                        \n                    \n                \n            \n            \n                \nupdateAuthorHaiku(authorHaikuId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Navigates the author haiku update by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorHaikuId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Author Haiku ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewAuthorHaiku\n                        \n                    \n                \n            \n            \n                \nviewAuthorHaiku(authorHaikuId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Navigates the author haiku view by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorHaikuId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Author Haiku ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authorHaikuIdToDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authorHaikusDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorHaikuDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    authorHaikus: null,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredAuthorHaikusDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorHaikuDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    authorHaikus: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        searchText$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"asc\" | \"desc\"\n\n                    \n                \n                \n                    \n                        Default value : 'asc'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    authorHaikus: \"\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { BehaviorSubject, distinctUntilChanged, finalize, Subject, switchMap, takeUntil } from 'rxjs';\nimport { AuthorHaikuService } from '../../../core/services/author-haiku.service';\nimport { NavigationService } from '../../../core/services/navigation.service';\nimport { AuthorHaikuDto } from '../../../shared/models/authorHaikuDto.model';\n\n@Component({\n  selector: 'app-all-author-haikus',\n  templateUrl: './all-author-haikus.component.html',\n  styleUrls: [],\n})\nexport class AllAuthorHaikusComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n  private searchText$ = new BehaviorSubject('');\n\n  authorHaikusDto: AuthorHaikuDto[] = [];\n  filteredAuthorHaikusDto: AuthorHaikuDto[] = [];\n\n  sortDirection: 'asc' | 'desc' = 'asc';\n  searchTerm: string = '';\n  authorHaikuIdToDelete: number | null = null;\n\n  currentPage: number = 1;\n  pageSize: number = 10;\n  totalCount: number = 0;\n  totalPages: number = 0;\n\n  successMessages = {\n    authorHaikus: \"\"\n  };\n\n  errorMessages: { authorHaikus: string | null } = {\n    authorHaikus: null,\n  };\n\n  loadingStates = {\n    authorHaikus: false\n  };\n  constructor(\n    private authorHaikuService: AuthorHaikuService,\n    private navigationService: NavigationService\n  ) { }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  ngOnInit(): void {\n    this.loadingStates.authorHaikus = true;\n    this.clearMessages();\n\n    this.loadAuthorHaikus();\n  }\n\n  /**\n   * Clears any error messages related to author haikus loading.\n   * @returns {void} This method does not return a value.\n  */\n  private clearMessages(): void {\n    this.errorMessages = {\n      authorHaikus: null,\n    };\n    this.successMessages = {\n      authorHaikus: \"\"\n    };\n  }\n\n  /**\n   * Handles errors for specific types of operations (e.g., author haikus loading) and updates loading states.\n   * \n   * @param {any} error - The error response or message.\n   * @param {'authorHaikus'} type - The type of operation encountering the error.\n   * @returns {void} This method does not return a value.\n  */\n  private handleError(error: any, type: 'authorHaikus'): void {\n    this.loadingStates[type] = false;\n    this.errorMessages[type] = error.message || 'An unknown error occurred, please try again later.';\n    this.successMessages[type] = \"\";\n  }\n\n  /**\n   * Loads a paginated list of author haikus based on the search term.\n   * @returns {void} This method does not return a value.\n   * @throws Will call `handleError` with an error message on failure.\n  */\n  loadAuthorHaikus(): void {\n    this.loadingStates.authorHaikus = true;\n\n    this.searchText$.pipe(\n      distinctUntilChanged(),\n      switchMap(searchTerm => {\n        return this.authorHaikuService.getAllAuthorHaikus(this.currentPage, this.pageSize, searchTerm).pipe(\n          takeUntil(this.unsubscribe$),\n          finalize(() => this.loadingStates.authorHaikus = false)\n        );\n      })\n    ).subscribe({\n      next: ({ authorHaikus, paginationMetadata }) => {\n        this.filteredAuthorHaikusDto = authorHaikus;\n        this.totalCount = paginationMetadata.totalCount;\n        this.totalPages = Math.ceil(this.totalCount / this.pageSize);\n        this.currentPage = Math.max(1, Math.min(this.currentPage, this.totalPages));\n      },\n      error: error => this.handleError(error, 'authorHaikus')\n    });\n  }\n\n  /**\n   * Deletes a author haiku based on the user haiku ID stored in `authorHaikuIdToDelete`.\n   * \n   * @returns {void} This method does not return a value.\n   * @throws Will call `handleError` with an error message on failure.\n  */\n  deleteAuthorHaiku(): void {\n    if (this.authorHaikuIdToDelete) {\n      this.loadingStates.authorHaikus = true;\n\n      this.authorHaikuService.deleteAuthorHaiku(this.authorHaikuIdToDelete).pipe(\n        takeUntil(this.unsubscribe$),\n        finalize(() => {\n          this.loadingStates.authorHaikus = false;\n        })\n      ).subscribe({\n        next: () => {\n          this.clearMessages();\n          this.successMessages.authorHaikus = \"Author Haiku deleted successfully!\";\n          this.authorHaikuIdToDelete = null;\n          this.isPageEmpty();\n          this.loadAuthorHaikus();\n        },\n        error: error => this.handleError(error, 'authorHaikus')\n      });\n    }\n  }\n\n  /**\n   * Handles the user input event for searching author haikus. It updates the `searchText$` BehaviorSubject with the current value.\n   * @returns {void} This method does not return a value.\n  */\n  search(): void {\n    this.searchText$.next(this.searchTerm);\n  }\n\n  /**\n   * Navigates the author haiku view by ID.\n   *\n   * @param {number} authorHaikuId - The Author Haiku ID.\n   * @returns {void} This method does not return a value.\n  */\n  viewAuthorHaiku(authorHaikuId: number): void {\n    this.navigationService.viewAuthorHaiku(authorHaikuId);\n  }\n\n  /**\n   * Navigates the author haiku update by ID.\n   *\n   * @param {number} authorHaikuId - The Author Haiku ID.\n   * @returns {void} This method does not return a value.\n  */\n  updateAuthorHaiku(authorHaikuId: number): void {\n    this.navigationService.updateAuthorHaiku(authorHaikuId);\n  }\n\n  /**\n   * Opens a modal for author deletion confirmation by setting the user haiku ID to delete.\n   *\n   * @param {number} authorHaikuId - The ID of the author haiku to be deleted.\n   * @returns {void} This method does not return a value.\n  */\n  openAuthorHaikuModal(authorHaikuId: number): void {\n    this.authorHaikuIdToDelete = authorHaikuId;\n  }\n\n  /**\n   * Toggles the sorting direction and sorts the filtered author haikus by title.\n   * \n   * @returns {void} This method does not return a value.\n  */\n  sortByTitle(): void {\n    this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n    this.filteredAuthorHaikusDto.sort((a, b) => {\n      const titleA = a.title.toLowerCase();\n      const titleB = b.title.toLowerCase();\n      return this.sortDirection === 'asc' ? (titleA  titleB ? -1 : 1);\n    });\n  }\n\n  /**\n   * Checks if the current page has no author haikus and changes the page to the first page if true.\n   * \n   * @returns {void} This method does not return a value.\n  */\n  isPageEmpty(): void {\n    if (this.filteredAuthorHaikusDto.length === 1) {\n      this.onPageChange(1);\n    }\n  }\n\n  /**\n   * Handles pagination by updating the current page and loading author haikus for that page.\n   * \n   * @param {number} newPage - The new page number to load author haikus for.\n   * @returns {void} This method does not return a value.\n  */\n  onPageChange(newPage: number): void {\n    this.currentPage = newPage;\n    this.loadAuthorHaikus();\n  }\n}\n\n    \n\n    \n        \n  \n    \n       Author Haiku List\n    \n\n    \n      \n        {{ successMessages.authorHaikus }}\n      \n      \n        {{ errorMessages.authorHaikus }}\n      \n\n      Comprehensive list of all Author Haikus in the database, featuring their Title and Lines.\n\n      \n        \n          \n            Loading...\n          \n        \n      \n\n      \n        \n          \n          \n            \n          \n        \n        Total Author Haikus: {{ totalCount }}\n        Add Author Haiku\n        \n          \n            \n              \n                \n                  Title\n                  \n                \n                Lines\n                Actions\n              \n            \n            \n              \n                {{ authorHaikuDto.title }}\n                \n                  {{ authorHaikuDto.lineOne }} {{ authorHaikuDto.lineTwo }} {{ authorHaikuDto.lineThree }}\n                \n                \n                  View\n                  \n                    Update\n                    Delete\n                  \n                \n              \n            \n          \n        \n\n        \n          No Author Haikus found.\n        \n      \n    \n  \n\n   1\" aria-label=\"Page navigation\">\n    \n      \n        \n          &laquo;\n        \n      \n\n      \n        {{ i + 1 }}\n      \n\n      \n        \n          &raquo;\n        \n      \n    \n  \n\n\n\n  \n    \n      \n         Delete Author\n      \n      \n        \n          Are you sure you want to delete this Author Haiku?\n          This change is irreversible.\n        \n      \n      \n        Cancel\n        Confirm\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Author Haiku List                      {{ successMessages.authorHaikus }}                    {{ errorMessages.authorHaikus }}            Comprehensive list of all Author Haikus in the database, featuring their Title and Lines.                                    Loading...                                                                                                Total Author Haikus: {{ totalCount }}        Add Author Haiku                                                                              Title                                                  Lines                Actions                                                                    {{ authorHaikuDto.title }}                                  {{ authorHaikuDto.lineOne }} {{ authorHaikuDto.lineTwo }} {{ authorHaikuDto.lineThree }}                                                  View                                      Update                    Delete                                                                                                No Author Haikus found.                       1\" aria-label=\"Page navigation\">                            «                            {{ i + 1 }}                              »                                         Delete Author                              Are you sure you want to delete this Author Haiku?          This change is irreversible.                            Cancel        Confirm            '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'AllAuthorHaikusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AllAuthorsComponent.html":{"url":"components/AllAuthorsComponent.html","title":"component - AllAuthorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AllAuthorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/authors/all-authors/all-authors.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying and managing all authors.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-all-authors\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./all-authors.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authorIdToDelete\n                            \n                            \n                                authorsDto\n                            \n                            \n                                currentPage\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultAuthorId\n                            \n                            \n                                errorMessages\n                            \n                            \n                                filteredAuthorsDto\n                            \n                            \n                                loadingStates\n                            \n                            \n                                pageSize\n                            \n                            \n                                searchTerm\n                            \n                            \n                                    Private\n                                searchText$\n                            \n                            \n                                sortDirection\n                            \n                            \n                                successMessages\n                            \n                            \n                                totalCount\n                            \n                            \n                                totalPages\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearMessages\n                            \n                            \n                                deleteAuthor\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                isNotAuthorOne\n                            \n                            \n                                isPageEmpty\n                            \n                            \n                                loadAuthors\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPageChange\n                            \n                            \n                                openAuthorModal\n                            \n                            \n                                search\n                            \n                            \n                                sortByName\n                            \n                            \n                                updateAuthor\n                            \n                            \n                                viewAuthor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authorService: AuthorService, navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/authors/all-authors/all-authors.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorService\n                                                  \n                                                        \n                                                                        AuthorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clearMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/all-authors/all-authors.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Clears any error messages related to authors loading.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAuthor\n                        \n                    \n                \n            \n            \n                \ndeleteAuthor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/all-authors/all-authors.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Deletes a Author based on the Author ID stored in authorIdToDelete.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any, type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/all-authors/all-authors.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Handles errors for specific types of operations (e.g., authors loading) and updates loading states.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response or message.\n\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe type of operation encountering the error.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotAuthorOne\n                        \n                    \n                \n            \n            \n                \nisNotAuthorOne(authorId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/all-authors/all-authors.component.ts:221\n                        \n                    \n\n\n            \n                \n                        Checks if the provided author ID is not equal to the default Author ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the author to check.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the author ID is equal to the default Author ID, otherwise returns false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPageEmpty\n                        \n                    \n                \n            \n            \n                \nisPageEmpty()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/all-authors/all-authors.component.ts:198\n                        \n                    \n\n\n            \n                \n                        Checks if the current page has no author and changes the page to the first page if true.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadAuthors\n                        \n                    \n                \n            \n            \n                \nloadAuthors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/all-authors/all-authors.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Loads a paginated list of authors based on the search term.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/all-authors/all-authors.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/all-authors/all-authors.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPageChange\n                        \n                    \n                \n            \n            \n                \nonPageChange(newPage: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/all-authors/all-authors.component.ts:210\n                        \n                    \n\n\n            \n                \n                        Handles pagination by updating the current page and loading authors for that page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new page number to load authors for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAuthorModal\n                        \n                    \n                \n            \n            \n                \nopenAuthorModal(authorId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/all-authors/all-authors.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Opens a modal for author deletion confirmation by setting the author ID to delete.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the author to be deleted.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/all-authors/all-authors.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Handles the user input event for searching authors. It updates the searchText$ BehaviorSubject with the current value.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortByName\n                        \n                    \n                \n            \n            \n                \nsortByName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/all-authors/all-authors.component.ts:184\n                        \n                    \n\n\n            \n                \n                        Toggles the sorting direction and sorts the filtered authors by name.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAuthor\n                        \n                    \n                \n            \n            \n                \nupdateAuthor(authorId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/all-authors/all-authors.component.ts:165\n                        \n                    \n\n\n            \n                \n                        Navigates the author update by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Author ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewAuthor\n                        \n                    \n                \n            \n            \n                \nviewAuthor(authorId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/all-authors/all-authors.component.ts:155\n                        \n                    \n\n\n            \n                \n                        Navigates the authorview by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Author ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authorIdToDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/all-authors/all-authors.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authorsDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/all-authors/all-authors.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/all-authors/all-authors.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultAuthorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/all-authors/all-authors.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    authors: null,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/all-authors/all-authors.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredAuthorsDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/all-authors/all-authors.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    authors: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/all-authors/all-authors.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/all-authors/all-authors.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/all-authors/all-authors.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        searchText$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/all-authors/all-authors.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortDirection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"asc\" | \"desc\"\n\n                    \n                \n                \n                    \n                        Default value : 'asc'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/all-authors/all-authors.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    authors: \"\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/all-authors/all-authors.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/all-authors/all-authors.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/all-authors/all-authors.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/all-authors/all-authors.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { BehaviorSubject, distinctUntilChanged, finalize, Subject, switchMap, takeUntil } from 'rxjs';\nimport { AuthorService } from '../../../core/services/author.service';\nimport { NavigationService } from '../../../core/services/navigation.service';\nimport { AuthorDto } from '../../../shared/models/authorDto.model';\n\n/**\n * Component for displaying and managing all authors.\n*/\n@Component({\n  selector: 'app-all-authors',\n  templateUrl: './all-authors.component.html',\n  styleUrls: [],\n})\nexport class AllAuthorsComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n  private searchText$ = new BehaviorSubject('');\n  private readonly defaultAuthorId = 1;\n\n  authorsDto: AuthorDto[] = [];\n  filteredAuthorsDto: AuthorDto[] = [];\n\n  sortDirection: 'asc' | 'desc' = 'asc';\n  searchTerm: string = '';\n  authorIdToDelete: number | null = null;\n\n  currentPage: number = 1;\n  pageSize: number = 10;\n  totalCount: number = 0;\n  totalPages: number = 0;\n\n  successMessages = {\n    authors: \"\"\n  };\n\n  errorMessages: { authors: string | null } = {\n    authors: null,\n  };\n\n  loadingStates = {\n    authors: false\n  };\n\n  constructor(\n    private authorService: AuthorService,\n    private navigationService: NavigationService\n  ) { }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  ngOnInit(): void {\n    this.loadingStates.authors = true;\n    this.clearMessages();\n\n    this.loadAuthors();\n  }\n\n  /**\n   * Clears any error messages related to authors loading.\n   * @returns {void} This method does not return a value.\n  */\n  private clearMessages(): void {\n    this.errorMessages = {\n      authors: null,\n    };\n    this.successMessages = {\n      authors: \"\"\n    };\n  }\n\n  /**\n   * Handles errors for specific types of operations (e.g., authors loading) and updates loading states.\n   * \n   * @param {any} error - The error response or message.\n   * @param {'userHaikus'} type - The type of operation encountering the error.\n   * @returns {void} This method does not return a value.\n  */\n  private handleError(error: any, type: 'authors'): void {\n    this.loadingStates[type] = false;\n    this.errorMessages[type] = error.message || 'An unknown error occurred, please try again later.';\n  }\n\n  /**\n   * Loads a paginated list of authors based on the search term.\n   * @returns {void} This method does not return a value.\n   * @throws Will call `handleError` with an error message on failure.\n  */\n  loadAuthors(): void {\n    this.loadingStates.authors = true;\n\n    this.searchText$.pipe(\n      distinctUntilChanged(),\n      switchMap(searchTerm => {\n        return this.authorService.getAllAuthors(this.currentPage, this.pageSize, searchTerm).pipe(\n          takeUntil(this.unsubscribe$),\n          finalize(() => this.loadingStates.authors = false)\n        );\n      })\n    ).subscribe({\n      next: ({ authors, paginationMetadata }) => {\n        this.filteredAuthorsDto = authors;\n        this.totalCount = paginationMetadata.totalCount;\n        this.totalPages = Math.ceil(this.totalCount / this.pageSize);\n        this.currentPage = Math.max(1, Math.min(this.currentPage, this.totalPages));\n      },\n      error: error => this.handleError(error, 'authors')\n    });\n  }\n\n  /**\n   * Deletes a Author based on the Author ID stored in `authorIdToDelete`.\n   * \n   * @returns {void} This method does not return a value.\n   * @throws Will call `handleError` with an error message on failure.\n  */\n  deleteAuthor(): void {\n    if (this.authorIdToDelete != null) {\n      if (!this.isNotAuthorOne(this.authorIdToDelete)) {\n        this.loadingStates.authors = true;\n\n        this.authorService.deleteAuthor(this.authorIdToDelete).pipe(\n          takeUntil(this.unsubscribe$),\n          finalize(() => this.loadingStates.authors = false)\n        ).subscribe({\n          next: () => {\n            this.clearMessages();\n            this.successMessages.authors = \"Author deleted successfully!\";\n            this.authorIdToDelete = null;\n            this.isPageEmpty();\n            this.loadAuthors()\n          },\n          error: error => this.handleError(error, 'authors')\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles the user input event for searching authors. It updates the `searchText$` BehaviorSubject with the current value.\n   * @returns {void} This method does not return a value.\n  */\n  search(): void {\n    this.searchText$.next(this.searchTerm);\n  }\n\n  /**\n   * Navigates the authorview by ID.\n   *\n   * @param {number} authorId - The Author ID.\n   * @returns {void} This method does not return a value.\n  */\n  viewAuthor(authorId: number): void {\n    this.navigationService.viewAuthor(authorId);\n  }\n\n  /**\n   * Navigates the author update by ID.\n   *\n   * @param {number} authorId - The Author ID.\n   * @returns {void} This method does not return a value.\n  */\n  updateAuthor(authorId: number): void {\n    this.navigationService.updateAuthor(authorId);\n  }\n\n  /**\n   * Opens a modal for author deletion confirmation by setting the author ID to delete.\n   *\n   * @param {number} authorId - The ID of the author to be deleted.\n   * @returns {void} This method does not return a value.\n  */\n  openAuthorModal(authorId: number): void {\n    this.authorIdToDelete = authorId;\n  }\n\n  /**\n   * Toggles the sorting direction and sorts the filtered authors by name.\n   * \n   * @returns {void} This method does not return a value.\n  */\n  sortByName(): void {\n    this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n    this.filteredAuthorsDto.sort((a, b) => {\n      const nameA = a.name.toLowerCase();\n      const nameB = b.name.toLowerCase();\n      return this.sortDirection === 'asc' ? (nameA  nameB ? -1 : 1);\n    });\n  }\n\n  /**\n   * Checks if the current page has no author and changes the page to the first page if true.\n   * \n   * @returns {void} This method does not return a value.\n  */\n  isPageEmpty(): void {\n    if (this.filteredAuthorsDto.length === 1) {\n      this.onPageChange(1);\n    }\n  }\n\n  /**\n   * Handles pagination by updating the current page and loading authors for that page.\n   * \n   * @param {number} newPage - The new page number to load authors for.\n   * @returns {void} This method does not return a value.\n  */\n  onPageChange(newPage: number): void {\n    this.currentPage = newPage;\n    this.loadAuthors();\n  }\n\n  /**\n   * Checks if the provided author ID is not equal to the default Author ID.\n   * \n   * @param {number} authorId - The ID of the author to check.\n   * @returns {boolean} - Returns `true` if the author ID is equal to the default Author ID, otherwise returns `false`.\n  */\n  isNotAuthorOne(authorId: number): boolean {\n    if (authorId == this.defaultAuthorId)\n      return true\n\n    return false;\n  }\n}\n\n\n    \n\n    \n        \n  \n    \n       Authors List\n    \n\n    \n      \n        {{ successMessages.authors }}\n      \n      \n        {{ errorMessages.authors }}\n      \n\n      Comprehensive list of all Authors in the database, featuring their name and bios.\n\n      \n        \n          \n            Loading...\n          \n        \n      \n\n      \n        \n          \n          \n            \n          \n        \n        Total Authors: {{ totalCount }}\n        Add Author\n\n        \n          \n            \n              \n                \n                  Name\n                  \n                \n                Bio\n                Actions\n              \n            \n            \n              \n                {{ authorDto.name }}\n                {{ authorDto.bio }}\n                \n                  View\n                  \n                    Update\n                    Delete\n                  \n                \n              \n            \n          \n        \n\n        \n          No Authors found.\n        \n      \n    \n  \n\n   1\" aria-label=\"Page navigation\">\n    \n      \n        \n          &laquo;\n        \n      \n\n      \n        {{ i + 1 }}\n      \n\n      \n        \n          &raquo;\n        \n      \n    \n  \n\n\n\n  \n    \n      \n         Delete Author\n      \n      \n        \n          Are you sure you want to delete this Author?\n          This change is irreversible.\n          All Haikus associated with this author will be stored under: Unknown.\n        \n      \n      \n        Cancel\n        Confirm\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Authors List                      {{ successMessages.authors }}                    {{ errorMessages.authors }}            Comprehensive list of all Authors in the database, featuring their name and bios.                                    Loading...                                                                                                Total Authors: {{ totalCount }}        Add Author                                                                              Name                                                  Bio                Actions                                                                    {{ authorDto.name }}                {{ authorDto.bio }}                                  View                                      Update                    Delete                                                                                                No Authors found.                       1\" aria-label=\"Page navigation\">                            «                            {{ i + 1 }}                              »                                         Delete Author                              Are you sure you want to delete this Author?          This change is irreversible.          All Haikus associated with this author will be stored under: Unknown.                            Cancel        Confirm            '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'AllAuthorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main component of the application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'MyHaikus'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Main component of the application.\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'MyHaikus';\n\n  constructor() {\n  }\n}\n\n    \n\n    \n        \n\n\n  \n\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAddAuthorComponent\n\nAddAuthorComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddAuthorComponent->AppModule\n\n\n\n\n\nAddAuthorFormComponent\n\nAddAuthorFormComponent\n\nAppModule -->\n\nAddAuthorFormComponent->AppModule\n\n\n\n\n\nAddAuthorHaikuComponent\n\nAddAuthorHaikuComponent\n\nAppModule -->\n\nAddAuthorHaikuComponent->AppModule\n\n\n\n\n\nAddAuthorHaikuFormComponent\n\nAddAuthorHaikuFormComponent\n\nAppModule -->\n\nAddAuthorHaikuFormComponent->AppModule\n\n\n\n\n\nAddUserHaikuComponent\n\nAddUserHaikuComponent\n\nAppModule -->\n\nAddUserHaikuComponent->AppModule\n\n\n\n\n\nAddUserHaikuFormComponent\n\nAddUserHaikuFormComponent\n\nAppModule -->\n\nAddUserHaikuFormComponent->AppModule\n\n\n\n\n\nAllAuthorHaikusComponent\n\nAllAuthorHaikusComponent\n\nAppModule -->\n\nAllAuthorHaikusComponent->AppModule\n\n\n\n\n\nAllAuthorsComponent\n\nAllAuthorsComponent\n\nAppModule -->\n\nAllAuthorsComponent->AppModule\n\n\n\n\n\nAllUserHaikusComponent\n\nAllUserHaikusComponent\n\nAppModule -->\n\nAllUserHaikusComponent->AppModule\n\n\n\n\n\nAllUsersComponent\n\nAllUsersComponent\n\nAppModule -->\n\nAllUsersComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nIsAuthorizedDirective\n\nIsAuthorizedDirective\n\nAppModule -->\n\nIsAuthorizedDirective->AppModule\n\n\n\n\n\nIsUnAuthenticatedDirective\n\nIsUnAuthenticatedDirective\n\nAppModule -->\n\nIsUnAuthenticatedDirective->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAppModule -->\n\nLoginFormComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nAppModule -->\n\nRegisterFormComponent->AppModule\n\n\n\n\n\nSingleAuthorComponent\n\nSingleAuthorComponent\n\nAppModule -->\n\nSingleAuthorComponent->AppModule\n\n\n\n\n\nSingleAuthorHaikuComponent\n\nSingleAuthorHaikuComponent\n\nAppModule -->\n\nSingleAuthorHaikuComponent->AppModule\n\n\n\n\n\nSingleUserComponent\n\nSingleUserComponent\n\nAppModule -->\n\nSingleUserComponent->AppModule\n\n\n\n\n\nSingleUserHaikuComponent\n\nSingleUserHaikuComponent\n\nAppModule -->\n\nSingleUserHaikuComponent->AppModule\n\n\n\n\n\nUpdateAuthorComponent\n\nUpdateAuthorComponent\n\nAppModule -->\n\nUpdateAuthorComponent->AppModule\n\n\n\n\n\nUpdateAuthorFormComponent\n\nUpdateAuthorFormComponent\n\nAppModule -->\n\nUpdateAuthorFormComponent->AppModule\n\n\n\n\n\nUpdateAuthorHaikuComponent\n\nUpdateAuthorHaikuComponent\n\nAppModule -->\n\nUpdateAuthorHaikuComponent->AppModule\n\n\n\n\n\nUpdateAuthorHaikuFormComponent\n\nUpdateAuthorHaikuFormComponent\n\nAppModule -->\n\nUpdateAuthorHaikuFormComponent->AppModule\n\n\n\n\n\nUpdateProfileComponent\n\nUpdateProfileComponent\n\nAppModule -->\n\nUpdateProfileComponent->AppModule\n\n\n\n\n\nUpdateProfileFormComponent\n\nUpdateProfileFormComponent\n\nAppModule -->\n\nUpdateProfileFormComponent->AppModule\n\n\n\n\n\nUpdateUserHaikuComponent\n\nUpdateUserHaikuComponent\n\nAppModule -->\n\nUpdateUserHaikuComponent->AppModule\n\n\n\n\n\nUpdateUserHaikuFormComponent\n\nUpdateUserHaikuFormComponent\n\nAppModule -->\n\nUpdateUserHaikuFormComponent->AppModule\n\n\n\n\n\nIsAuthorizedDirective \n\nIsAuthorizedDirective \n\nIsAuthorizedDirective  -->\n\nAppModule->IsAuthorizedDirective \n\n\n\n\n\nIsUnAuthenticatedDirective \n\nIsUnAuthenticatedDirective \n\nIsUnAuthenticatedDirective  -->\n\nAppModule->IsUnAuthenticatedDirective \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthorizationInterceptor\n\nAuthorizationInterceptor\n\nAppModule -->\n\nAuthorizationInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddAuthorComponent\n                        \n                        \n                            AddAuthorFormComponent\n                        \n                        \n                            AddAuthorHaikuComponent\n                        \n                        \n                            AddAuthorHaikuFormComponent\n                        \n                        \n                            AddUserHaikuComponent\n                        \n                        \n                            AddUserHaikuFormComponent\n                        \n                        \n                            AllAuthorHaikusComponent\n                        \n                        \n                            AllAuthorsComponent\n                        \n                        \n                            AllUserHaikusComponent\n                        \n                        \n                            AllUsersComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            IsAuthorizedDirective\n                        \n                        \n                            IsUnAuthenticatedDirective\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            RegisterFormComponent\n                        \n                        \n                            SingleAuthorComponent\n                        \n                        \n                            SingleAuthorHaikuComponent\n                        \n                        \n                            SingleUserComponent\n                        \n                        \n                            SingleUserHaikuComponent\n                        \n                        \n                            UpdateAuthorComponent\n                        \n                        \n                            UpdateAuthorFormComponent\n                        \n                        \n                            UpdateAuthorHaikuComponent\n                        \n                        \n                            UpdateAuthorHaikuFormComponent\n                        \n                        \n                            UpdateProfileComponent\n                        \n                        \n                            UpdateProfileFormComponent\n                        \n                        \n                            UpdateUserHaikuComponent\n                        \n                        \n                            UpdateUserHaikuFormComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthorizationInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IsAuthorizedDirective\n                        \n                        \n                            IsUnAuthenticatedDirective\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { CookieService } from 'ngx-cookie-service';\nimport { AppRoutingModule } from './app-routing.module';\n\n// App Components\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './core/footer/footer.component';\nimport { HeaderComponent } from './core/header/header.component';\nimport { HomeComponent } from './features/home/home.component';\nimport { NotFoundComponent } from './features/not-found/not-found.component';\n\n// Login and Registration\nimport { LoginFormComponent } from './features/login/login-form/login-form.component';\nimport { LoginComponent } from './features/login/login.component';\nimport { RegisterFormComponent } from './features/register/register-form/register-form.component';\nimport { RegisterComponent } from './features/register/register.component';\n\n// User Profile\nimport { ProfileComponent } from './features/profile/profile.component';\nimport { UpdateProfileFormComponent } from './features/profile/update-profile/update-profile-form/update-profile-form.component';\nimport { UpdateProfileComponent } from './features/profile/update-profile/update-profile.component';\n\n// Author Components\nimport { AddAuthorFormComponent } from './features/authors/add-author/add-author-form/add-author-form.component';\nimport { AddAuthorComponent } from './features/authors/add-author/add-author.component';\nimport { AllAuthorsComponent } from './features/authors/all-authors/all-authors.component';\nimport { SingleAuthorComponent } from './features/authors/single-author/single-author.component';\nimport { UpdateAuthorFormComponent } from './features/authors/update-author/update-author-form/update-author-form.component';\nimport { UpdateAuthorComponent } from './features/authors/update-author/update-author.component';\n\n// Author Haikus\nimport { AddAuthorHaikuFormComponent } from './features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component';\nimport { AddAuthorHaikuComponent } from './features/author-haikus/add-author-haiku/add-author-haiku.component';\nimport { AllAuthorHaikusComponent } from './features/author-haikus/all-author-haikus/all-author-haikus.component';\nimport { SingleAuthorHaikuComponent } from './features/author-haikus/single-author-haiku/single-author-haiku.component';\nimport { UpdateAuthorHaikuFormComponent } from './features/author-haikus/update-author-haiku/update-author-haiku-form/update-author-haiku-form.component';\nimport { UpdateAuthorHaikuComponent } from './features/author-haikus/update-author-haiku/update-author-haiku.component';\n\n// User Components\nimport { AllUsersComponent } from './features/users/all-users/all-users.component';\nimport { SingleUserComponent } from './features/users/single-user/single-user.component';\n\n// User Haikus\nimport { AddUserHaikuFormComponent } from './features/user-haikus/add-user-haiku/add-user-haiku-form/add-user-haiku-form.component';\nimport { AddUserHaikuComponent } from './features/user-haikus/add-user-haiku/add-user-haiku.component';\nimport { AllUserHaikusComponent } from './features/user-haikus/all-user-haikus/all-user-haikus.component';\nimport { SingleUserHaikuComponent } from './features/user-haikus/single-user-haiku/single-user-haiku.component';\nimport { UpdateUserHaikuFormComponent } from './features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component';\nimport { UpdateUserHaikuComponent } from './features/user-haikus/update-user-haiku/update-user-haiku.component';\n\n// Directives\nimport { IsUnAuthenticatedDirective } from './shared/directives/is-unauthenticated.directive';\nimport { IsAuthorizedDirective } from './shared/directives/is-authorized.directive';\n\n// Interceptors\nimport { AuthorizationInterceptor } from './core/utilities/authorizationInterceptor';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    FooterComponent,\n    NotFoundComponent,\n\n    // Login and Registration\n    LoginComponent,\n    LoginFormComponent,\n    RegisterComponent,\n    RegisterFormComponent,\n\n    // User Profile\n    ProfileComponent,\n    UpdateProfileComponent,\n    UpdateProfileFormComponent,\n\n    // Author Components\n    AllAuthorsComponent,\n    SingleAuthorComponent,\n    AddAuthorComponent,\n    AddAuthorFormComponent,\n    UpdateAuthorComponent,\n    UpdateAuthorFormComponent,\n\n    // Author Haikus\n    AllAuthorHaikusComponent,\n    SingleAuthorHaikuComponent,\n    AddAuthorHaikuComponent,\n    AddAuthorHaikuFormComponent,\n    UpdateAuthorHaikuComponent,\n    UpdateAuthorHaikuFormComponent,\n\n    // User Components\n    AllUsersComponent,\n    SingleUserComponent,\n\n    // User Haikus\n    AllUserHaikusComponent,\n    SingleUserHaikuComponent,\n    AddUserHaikuComponent,\n    AddUserHaikuFormComponent,\n    UpdateUserHaikuComponent,\n    UpdateUserHaikuFormComponent,\n\n    // Directives\n    IsAuthorizedDirective,\n    IsUnAuthenticatedDirective,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    BrowserAnimationsModule,\n    NgbModule \n  ],\n  exports: [\n    IsAuthorizedDirective,\n    IsUnAuthenticatedDirective,\n  ],\n  providers: [\n    CookieService,\n    { provide: HTTP_INTERCEPTORS, useClass: AuthorizationInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n// Components\nimport { AddAuthorHaikuComponent } from './features/author-haikus/add-author-haiku/add-author-haiku.component';\nimport { AllAuthorHaikusComponent } from './features/author-haikus/all-author-haikus/all-author-haikus.component';\nimport { SingleAuthorHaikuComponent } from './features/author-haikus/single-author-haiku/single-author-haiku.component';\nimport { UpdateAuthorHaikuComponent } from './features/author-haikus/update-author-haiku/update-author-haiku.component';\nimport { AddAuthorComponent } from './features/authors/add-author/add-author.component';\nimport { AllAuthorsComponent } from './features/authors/all-authors/all-authors.component';\nimport { SingleAuthorComponent } from './features/authors/single-author/single-author.component';\nimport { UpdateAuthorComponent } from './features/authors/update-author/update-author.component';\nimport { HomeComponent } from './features/home/home.component';\nimport { LoginComponent } from './features/login/login.component';\nimport { ProfileComponent } from './features/profile/profile.component';\nimport { UpdateProfileComponent } from './features/profile/update-profile/update-profile.component';\nimport { RegisterComponent } from './features/register/register.component';\nimport { AddUserHaikuComponent } from './features/user-haikus/add-user-haiku/add-user-haiku.component';\nimport { AllUserHaikusComponent } from './features/user-haikus/all-user-haikus/all-user-haikus.component';\nimport { SingleUserHaikuComponent } from './features/user-haikus/single-user-haiku/single-user-haiku.component';\nimport { UpdateUserHaikuComponent } from './features/user-haikus/update-user-haiku/update-user-haiku.component';\nimport { AllUsersComponent } from './features/users/all-users/all-users.component';\nimport { SingleUserComponent } from './features/users/single-user/single-user.component';\nimport { NotFoundComponent } from './features/not-found/not-found.component';\n\n// Guards\nimport { AuthenticationGuard } from './core/guards/authentication.guard';\nimport { AuthorizationGuard } from './core/guards/authorization.guard';\nimport { UnAuthenticatedGuard } from './core/guards/un-authenticated.guard';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent, canActivate: [UnAuthenticatedGuard] },\n  { path: 'register', component: RegisterComponent, canActivate: [UnAuthenticatedGuard] },\n  { path: 'home', component: HomeComponent },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthenticationGuard, AuthorizationGuard], data: { requiredRole: ['Admin', 'User'] } },\n\n  // Authors\n  { path: 'all-authors', component: AllAuthorsComponent },\n  { path: 'view-author/:id', component: SingleAuthorComponent },\n  { path: 'add-author', component: AddAuthorComponent, canActivate: [AuthenticationGuard, AuthorizationGuard], data: { requiredRole: 'Admin' } },\n  { path: 'update-author/:id', component: UpdateAuthorComponent, canActivate: [AuthenticationGuard, AuthorizationGuard], data: { requiredRole: 'Admin' } },\n\n  // Author Haikus\n  { path: 'all-author-haikus', component: AllAuthorHaikusComponent },\n  { path: 'view-author-haiku/:id', component: SingleAuthorHaikuComponent },\n  { path: 'add-author-haiku', component: AddAuthorHaikuComponent, canActivate: [AuthenticationGuard, AuthorizationGuard], data: { requiredRole: 'Admin' } },\n  { path: 'update-author-haiku/:id', component: UpdateAuthorHaikuComponent, canActivate: [AuthenticationGuard, AuthorizationGuard], data: { requiredRole: 'Admin' } },\n\n  // Users\n  { path: 'all-users', component: AllUsersComponent },\n  { path: 'view-user/:id', component: SingleUserComponent },\n\n  // User Profiles\n  { path: 'view-profile', component: ProfileComponent, canActivate: [AuthenticationGuard, AuthorizationGuard], data: { requiredRole: ['Admin', 'User'] } },\n  { path: 'update-profile', component: UpdateProfileComponent, canActivate: [AuthenticationGuard, AuthorizationGuard], data: { requiredRole: ['Admin', 'User'] } },\n\n  // User Haikus\n  { path: 'all-user-haikus', component: AllUserHaikusComponent },\n  { path: 'view-user-haiku/:id', component: SingleUserHaikuComponent },\n  { path: 'add-user-haiku', component: AddUserHaikuComponent, canActivate: [AuthenticationGuard, AuthorizationGuard], data: { requiredRole: ['Admin', 'User'] } },\n  { path: 'update-user-haiku/:id', component: UpdateUserHaikuComponent, canActivate: [AuthenticationGuard, AuthorizationGuard], data: { requiredRole: ['Admin', 'User'] } },\n\n  // Redirects\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: '**', component: NotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/authentication.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard that checks if a user is authenticated to access a route.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/authentication.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/authentication.guard.ts:22\n                        \n                    \n\n\n            \n                \n                        Determines if the route can be activated based on the user's authentication status.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the user is authenticated; otherwise, false.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n/**\n * Guard that checks if a user is authenticated to access a route.\n*/\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationGuard implements CanActivate {\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) { }\n\n  /**\n   * Determines if the route can be activated based on the user's authentication status.\n   * \n   * @returns {boolean} True if the user is authenticated; otherwise, false.\n  */\n  canActivate(): boolean {\n    if (this.authService.isAuthenticated()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/authentication.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing user authentication state.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuthenticated$\n                            \n                            \n                                    Private\n                                isAuthenticatedSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                decodeToken\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                getUserId\n                            \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Private\n                                isTokenExpired\n                            \n                            \n                                    Public\n                                isTokenValid\n                            \n                            \n                                    Public\n                                updateAuthenticationState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/authentication.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        decodeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    decodeToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Decodes a JWT token to extract its payload.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe JWT token to decode.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \nThe decoded payload, or null if decoding fails.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Retrieves the JWT token from cookies.\n\n\n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \nThe JWT token if it exists, otherwise null.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:98\n                        \n                    \n\n\n            \n                \n                        Retrieves the user ID from the JWT token's payload.\n\n\n                        \n                            Returns :     number | null\n\n                        \n                            \n                                \nThe user ID if it exists in the token, otherwise null.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Checks whether the user is authenticated based on the validity of the token.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the token is valid, otherwise false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isTokenExpired\n                        \n                    \n                \n            \n            \n                \n                        \n                    isTokenExpired(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Checks if the provided token is expired.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe JWT token to check for expiration.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the token is expired, otherwise false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isTokenValid\n                        \n                    \n                \n            \n            \n                \n                        \n                    isTokenValid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Determines if the stored token is valid.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the token exists and is not expired, otherwise false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateAuthenticationState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAuthenticationState(isAuthenticated: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Updates the authentication state by emitting the new authentication status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isAuthenticated\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nIndicates whether the user is authenticated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuthenticated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/authentication.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isAuthenticatedSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/authentication.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport jwt_decode, { JwtPayload } from 'jwt-decode'\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\n/**\n * Service for managing user authentication state.\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private isAuthenticatedSubject: BehaviorSubject;\n  public isAuthenticated$: Observable;\n\n  constructor(\n    private cookieService: CookieService,\n  ) {\n    this.isAuthenticatedSubject = new BehaviorSubject(this.isAuthenticated());\n    this.isAuthenticated$ = this.isAuthenticatedSubject.asObservable();\n  }\n\n  /**\n   * Updates the authentication state by emitting the new authentication status.\n   *\n   * @param {boolean} isAuthenticated - Indicates whether the user is authenticated.\n   * @returns {void} This method does not return a value.\n  */\n  public updateAuthenticationState(isAuthenticated: boolean): void {\n    this.isAuthenticatedSubject.next(isAuthenticated);\n  }\n\n  /**\n   * Checks whether the user is authenticated based on the validity of the token.\n   *\n   * @returns {boolean} - Returns `true` if the token is valid, otherwise `false`.\n  */\n  public isAuthenticated(): boolean {\n    return this.isTokenValid();\n  }\n\n  /**\n   * Determines if the stored token is valid.\n   *\n   * @returns {boolean} - Returns `true` if the token exists and is not expired, otherwise `false`.\n  */\n  public isTokenValid(): boolean {\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); \n  }\n\n  /**\n   * Retrieves the JWT token from cookies.\n   *\n   * @returns {string | null} - The JWT token if it exists, otherwise `null`.\n  */\n  public getToken(): string | null {\n    return this.cookieService.get('jwtToken');\n  }\n\n  /**\n   * Checks if the provided token is expired.\n   *\n   * @private\n   * @param {string} token - The JWT token to check for expiration.\n   * @returns {boolean} - Returns `true` if the token is expired, otherwise `false`.\n  */\n  private isTokenExpired(token: string): boolean {\n    const payload = this.decodeToken(token);\n    if (!payload || !payload.exp) {\n      return true;\n    }\n    const expirationTime = payload.exp * 1000;\n    return Date.now() >= expirationTime;\n  }\n\n  /**\n   * Decodes a JWT token to extract its payload.\n   *\n   * @private\n   * @param {string} token - The JWT token to decode.\n   * @returns {any} - The decoded payload, or `null` if decoding fails.\n  */\n  private decodeToken(token: string): any {\n    try {\n      const decodedToken = jwt_decode(token)\n      return decodedToken;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  /**\n   * Retrieves the user ID from the JWT token's payload.\n   *\n   * @returns {number | null} - The user ID if it exists in the token, otherwise `null`.\n  */\n  public getUserId(): number | null {\n    const token = this.getToken();\n    if (token) {\n      const payload = this.decodeToken(token);\n\n      return payload ? parseInt(payload['nameid'], 10) || null : null;\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthorDto.html":{"url":"interfaces/AuthorDto.html","title":"interface - AuthorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/authorDto.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bio\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthorDto {\n  id:number\n  name: string,\n  bio: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthorHaikuDto.html":{"url":"interfaces/AuthorHaikuDto.html","title":"interface - AuthorHaikuDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthorHaikuDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/authorHaikuDto.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authorId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lineOne\n                                        \n                                \n                                \n                                        \n                                            lineThree\n                                        \n                                \n                                \n                                        \n                                            lineTwo\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authorId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authorId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lineOne\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lineOne:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lineThree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lineThree:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lineTwo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lineTwo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthorHaikuDto {\n  id: number\n  title: string,\n  lineOne: string;\n  lineTwo: string;\n  lineThree: string;\n  authorId:number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorHaikuService.html":{"url":"injectables/AuthorHaikuService.html","title":"injectable - AuthorHaikuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthorHaikuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/author-haiku.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing author haikus, providing methods to retrieve, add, update, and delete author haiku data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authorAuthorHaikuApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addAuthorHaiku\n                            \n                            \n                                    Private\n                                authorHaikuUrl\n                            \n                            \n                                    Public\n                                deleteAuthorHaiku\n                            \n                            \n                                    Public\n                                getAllAuthorHaikus\n                            \n                            \n                                    Public\n                                getAllAuthorHaikusByAuthorId\n                            \n                            \n                                    Public\n                                getAuthorHaikuById\n                            \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                    Public\n                                updateAuthorHaiku\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, xmlSerializer: XmlSerializerService, errorHandler: ErrorHandlingService, authService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/author-haiku.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        xmlSerializer\n                                                  \n                                                        \n                                                                        XmlSerializerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addAuthorHaiku\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAuthorHaiku(newAuthorHaikuDto: AuthorHaikuDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/author-haiku.service.ts:144\n                        \n                    \n\n\n            \n                \n                        Adds a new author haiku to the system.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newAuthorHaikuDto\n                                            \n                                                            AuthorHaikuDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object for the new author haiku.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable containing the added author haiku data.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authorHaikuUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    authorHaikuUrl(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/author-haiku.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Constructs the URL for author-haiku-related API endpoints.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe specific API endpoint to append to the base URL.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nThe complete URL for the author API.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteAuthorHaiku\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAuthorHaiku(authorHaikuId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/author-haiku.service.ts:180\n                        \n                    \n\n\n            \n                \n                        Deletes an author haiku by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorHaikuId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the author haiku to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that completes when the deletion is successful.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllAuthorHaikus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllAuthorHaikus(currentPage: number, pageSize: number, searchOption: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/author-haiku.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Retrieves a paginated list of author haikus.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    \nThe current page number for pagination.\n\n\n                                            \n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                            \n                                                    \nThe number of author haikus to retrieve per page.\n\n\n                                            \n                                        \n                                        \n                                                searchOption\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nAn optional search term to filter author haikus.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable containing the author haikus and pagination metadata.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllAuthorHaikusByAuthorId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllAuthorHaikusByAuthorId(authorId: number, currentPage: number, pageSize: number, searchOption: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/author-haiku.service.ts:99\n                        \n                    \n\n\n            \n                \n                        Retrieves a paginated list of author haikus by author ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the author.\n\n\n                                            \n                                        \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    \nThe current page number for pagination.\n\n\n                                            \n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                            \n                                                    \nThe number of author haikus to retrieve per page.\n\n\n                                            \n                                        \n                                        \n                                                searchOption\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nAn optional search term to filter authors haikus.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable containing the author haikus and pagination metadata.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAuthorHaikuById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthorHaikuById(authorHaikuId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/author-haiku.service.ts:126\n                        \n                    \n\n\n            \n                \n                        Fetches an author haiku by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorHaikuId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the author haiku to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable containing the author haiku data.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/author-haiku.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Generates HTTP headers for the requests.\n\n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                \nThe headers with content type and accept type set to XML.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateAuthorHaiku\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAuthorHaiku(authorHaikuId: number, updatedAuthorHaikuDto: AuthorHaikuDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/author-haiku.service.ts:163\n                        \n                    \n\n\n            \n                \n                        Updates an existing author haiku's information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorHaikuId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the author haiku to update.\n\n\n                                            \n                                        \n                                        \n                                                updatedAuthorHaikuDto\n                                            \n                                                            AuthorHaikuDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated data transfer object for the author haiku.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that completes when the update is successful.\n\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authorAuthorHaikuApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authorHaiku'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/author-haiku.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { AuthorHaikuDto } from '../../shared/models/authorHaikuDto.model';\nimport { environment } from '../../../environments/environment.development';\nimport { ErrorHandlingService } from '../utilities/error-handling.service';\nimport { XmlSerializerService } from '../utilities/xml-serializer.service';\nimport { PaginationMetaDataDto } from '../../shared/models/paginationMetaDataDto.model';\nimport { AuthorizationService } from './authorization.service';\n\n/**\n * Service for managing author haikus, providing methods to retrieve, add, update, and delete author haiku data.\n*/\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthorHaikuService {\n  private authorAuthorHaikuApi = 'authorHaiku';\n\n  constructor(\n    private http: HttpClient,\n    private xmlSerializer: XmlSerializerService,\n    private errorHandler: ErrorHandlingService,\n    private authService: AuthorizationService\n  ) { }\n\n  /**\n   * Generates HTTP headers for the requests.\n   *\n   * @private\n   * @returns {HttpHeaders} - The headers with content type and accept type set to XML.\n  */\n  private getHeaders(): HttpHeaders {\n    const token = this.authService.getToken();\n\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/xml',\n      'Accept': 'application/xml'\n    });\n\n    if (token) {\n      headers = headers.set('Authorization', `Bearer ${token}`);\n    }\n\n    return headers;\n  }\n\n  /**\n   * Constructs the URL for author-haiku-related API endpoints.\n   *\n   * @private\n   * @param {string} endpoint - The specific API endpoint to append to the base URL.\n   * @returns {string} - The complete URL for the author API.\n  */\n  private authorHaikuUrl(endpoint: string): string {\n    return `${environment.apiBaseUrl}/${this.authorAuthorHaikuApi}/${endpoint}`;\n  }\n\n  /**\n   * Retrieves a paginated list of author haikus.\n   *\n   * @param {number} [currentPage=1] - The current page number for pagination.\n   * @param {number} [pageSize=10] - The number of author haikus to retrieve per page.\n   * @param {string} [searchOption=''] - An optional search term to filter author haikus.\n   * @returns {Observable} - An observable containing the author haikus and pagination metadata.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public getAllAuthorHaikus(\n    currentPage: number = 1,\n    pageSize: number = 10,\n    searchOption: string = ''\n  ): Observable {\n    const url = this.authorHaikuUrl(`?currentPage=${currentPage}&pageSize=${pageSize}&searchOption=${encodeURIComponent(searchOption)}`);\n\n    return this.http.get(url, { headers: this.getHeaders(), responseType: 'text' as 'json', observe: 'response' })\n      .pipe(\n        map(response => {\n          const authorHaikus = this.xmlSerializer.deserializeArray(response.body || '', 'AuthorHaikuDto') || [];\n          const paginationData = response.headers.get('x-pagination') ? this.xmlSerializer.deserializePaginationMetaData(response.headers.get('x-pagination')!) : { totalCount: 0, totalPages: 1 };\n          return { authorHaikus, paginationMetadata: { ...paginationData, pageSize, currentPage } };\n        }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'fetching AuthorHaikus'))\n      );\n  }\n\n  /**\n   * Retrieves a paginated list of author haikus by author ID.\n   *\n   * @param {number} [authorId] - The ID of the author.\n   * @param {number} [currentPage=1] - The current page number for pagination.\n   * @param {number} [pageSize=10] - The number of author haikus to retrieve per page.\n   * @param {string} [searchOption=''] - An optional search term to filter authors haikus.\n   * @returns {Observable} - An observable containing the author haikus and pagination metadata.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public getAllAuthorHaikusByAuthorId(\n    authorId: number,\n    currentPage: number = 1,\n    pageSize: number = 10,\n    searchOption: string = ''\n  ): Observable {\n    const url = this.authorHaikuUrl(`author/${authorId}?currentPage=${currentPage}&pageSize=${pageSize}&searchOption=${encodeURIComponent(searchOption)}`);\n\n    return this.http.get(url, { headers: this.getHeaders(), responseType: 'text' as 'json', observe: 'response' })\n      .pipe(\n        map(response => {\n          const authorHaikus = this.xmlSerializer.deserializeArray(response.body || '', 'AuthorHaikuDto') || [];\n          const paginationData = response.headers.get('x-pagination') ? this.xmlSerializer.deserializePaginationMetaData(response.headers.get('x-pagination')!) : { totalCount: 0, totalPages: 1 };\n          return { authorHaikus, paginationMetadata: { ...paginationData, pageSize, currentPage } };\n        }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'fetching AuthorHaikus by Author'))\n      );\n  }\n\n  /**\n   * Fetches an author haiku by their ID.\n   *\n   * @param {number} authorHaikuId - The ID of the author haiku to retrieve.\n   * @returns {Observable} - An observable containing the author haiku data.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public getAuthorHaikuById(authorHaikuId: number): Observable {\n    const url = this.authorHaikuUrl(`${authorHaikuId}`);\n\n    return this.http.get(url, { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        map(responseXml => { return this.xmlSerializer.deserialize(responseXml) }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'fetching AuthorHaiku'))\n      );\n  }\n\n  /**\n   * Adds a new author haiku to the system.\n   *\n   * @param {AuthorDto} newAuthorHaikuDto - The data transfer object for the new author haiku.\n   * @returns {Observable} - An observable containing the added author haiku data.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public addAuthorHaiku(newAuthorHaikuDto: AuthorHaikuDto): Observable {\n    const url = this.authorHaikuUrl(``);\n\n    return this.http.post(url, this.xmlSerializer.serialize(newAuthorHaikuDto, 'AuthorHaikuDto'), { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        map(responseXml => { return this.xmlSerializer.deserialize(responseXml) }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'adding AuthorHaiku'))\n      );\n  }\n\n  /**\n   * Updates an existing author haiku's information.\n   *\n   * @param {number} authorHaikuId - The ID of the author haiku to update.\n   * @param {AuthorDto} updatedAuthorHaikuDto - The updated data transfer object for the author haiku.\n   * @returns {Observable} - An observable that completes when the update is successful.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public updateAuthorHaiku(authorHaikuId: number, updatedAuthorHaikuDto: AuthorHaikuDto): Observable {\n    const url = this.authorHaikuUrl(`${authorHaikuId}`);\n\n    return this.http.put(url, this.xmlSerializer.serialize(updatedAuthorHaikuDto, 'AuthorHaikuDto'), { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'updating AuthorHaiku'))\n      );\n  }\n\n  /**\n   * Deletes an author haiku by their ID.\n   *\n   * @param {number} authorHaikuId - The ID of the author haiku to delete.\n   * @returns {Observable} - An observable that completes when the deletion is successful.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public deleteAuthorHaiku(authorHaikuId: number): Observable {\n    const url = this.authorHaikuUrl(`${authorHaikuId}`);\n\n    return this.http.delete(url, { headers: this.getHeaders() })\n      .pipe(\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'deleting AuthorHaiku'))\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorService.html":{"url":"injectables/AuthorService.html","title":"injectable - AuthorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/author.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing authors, providing methods to retrieve, add, update, and delete author data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authorApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addAuthor\n                            \n                            \n                                    Private\n                                authorUrl\n                            \n                            \n                                    Public\n                                deleteAuthor\n                            \n                            \n                                    Public\n                                getAllAuthors\n                            \n                            \n                                    Public\n                                getAuthorById\n                            \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                    Public\n                                updateAuthor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, xmlSerializer: XmlSerializerService, errorHandler: ErrorHandlingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/author.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        xmlSerializer\n                                                  \n                                                        \n                                                                        XmlSerializerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addAuthor\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAuthor(newAuthorDto: AuthorDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/author.service.ts:104\n                        \n                    \n\n\n            \n                \n                        Adds a new author to the system.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newAuthorDto\n                                            \n                                                            AuthorDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object for the new author.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable containing the added author data.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authorUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    authorUrl(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/author.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Constructs the URL for author-related API endpoints.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe specific API endpoint to append to the base URL.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nThe complete URL for the author API.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteAuthor\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAuthor(authorId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/author.service.ts:140\n                        \n                    \n\n\n            \n                \n                        Deletes an author by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the author to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that completes when the deletion is successful.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllAuthors\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllAuthors(currentPage: number, pageSize: number, searchOption: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/author.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Retrieves a paginated list of authors.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    \nThe current page number for pagination.\n\n\n                                            \n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                            \n                                                    \nThe number of authors to retrieve per page.\n\n\n                                            \n                                        \n                                        \n                                                searchOption\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nAn optional search term to filter authors.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable containing the authors and pagination metadata.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAuthorById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthorById(authorId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/author.service.ts:86\n                        \n                    \n\n\n            \n                \n                        Fetches an author by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the author to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable containing the author data.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/author.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Generates HTTP headers for the requests.\n\n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                \nThe headers with content type and accept type set to XML.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateAuthor\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAuthor(authorId: number, updatedAuthorDto: AuthorDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/author.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Updates an existing author's information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the author to update.\n\n\n                                            \n                                        \n                                        \n                                                updatedAuthorDto\n                                            \n                                                            AuthorDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated data transfer object for the author.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that completes when the update is successful.\n\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authorApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'author'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/author.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment.development';\nimport { ErrorHandlingService } from '../utilities/error-handling.service';\nimport { XmlSerializerService } from '../utilities/xml-serializer.service';\nimport { AuthorDto } from '../../shared/models/authorDto.model';\nimport { PaginationMetaDataDto } from '../../shared/models/paginationMetaDataDto.model';\n\n/**\n * Service for managing authors, providing methods to retrieve, add, update, and delete author data.\n*/\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthorService {\n  private authorApi = 'author';\n\n  constructor(\n    private http: HttpClient,\n    private xmlSerializer: XmlSerializerService,\n    private errorHandler: ErrorHandlingService\n  ) { }\n\n  /**\n   * Generates HTTP headers for the requests.\n   *\n   * @private\n   * @returns {HttpHeaders} - The headers with content type and accept type set to XML.\n  */\n  private getHeaders(): HttpHeaders {\n    return new HttpHeaders({\n      'Content-Type': 'application/xml',\n      Accept: 'application/xml',\n    });\n  }\n\n  /**\n   * Constructs the URL for author-related API endpoints.\n   *\n   * @private\n   * @param {string} endpoint - The specific API endpoint to append to the base URL.\n   * @returns {string} - The complete URL for the author API.\n  */\n  private authorUrl(endpoint: string): string {\n    return `${environment.apiBaseUrl}/${this.authorApi}/${endpoint}`;\n  }\n\n  /**\n   * Retrieves a paginated list of authors.\n   *\n   * @param {number} [currentPage=1] - The current page number for pagination.\n   * @param {number} [pageSize=10] - The number of authors to retrieve per page.\n   * @param {string} [searchOption=''] - An optional search term to filter authors.\n   * @returns {Observable} - An observable containing the authors and pagination metadata.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public getAllAuthors(\n    currentPage: number = 1,\n    pageSize: number = 10,\n    searchOption: string = ''\n  ): Observable {\n    const url = this.authorUrl(`?currentPage=${currentPage}&pageSize=${pageSize}&searchOption=${encodeURIComponent(searchOption)}`);\n\n    return this.http.get(url, { headers: this.getHeaders(), responseType: 'text' as 'json', observe: 'response' })\n      .pipe(\n        map(response => {\n          const authors = this.xmlSerializer.deserializeArray(response.body || '', 'AuthorDto') || [];\n          const paginationData = response.headers.get('x-pagination') ? this.xmlSerializer.deserializePaginationMetaData(response.headers.get('x-pagination')!) : { totalCount: 0, totalPages: 1 };\n          return { authors, paginationMetadata: { ...paginationData, pageSize, currentPage } };\n        }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'fetching Authors'))\n      );\n  }\n\n  /**\n   * Fetches an author by their ID.\n   *\n   * @param {number} authorId - The ID of the author to retrieve.\n   * @returns {Observable} - An observable containing the author data.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public getAuthorById(authorId: number): Observable {\n    const url = this.authorUrl(`${authorId}`);\n\n    return this.http.get(url, { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        map(responseXml => { return this.xmlSerializer.deserialize(responseXml) }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'fetching Author'))\n      );\n  }\n\n  /**\n   * Adds a new author to the system.\n   *\n   * @param {AuthorDto} newAuthorDto - The data transfer object for the new author.\n   * @returns {Observable} - An observable containing the added author data.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public addAuthor(newAuthorDto: AuthorDto): Observable {\n    const url = this.authorUrl(``);\n\n    return this.http.post(url, this.xmlSerializer.serialize(newAuthorDto, 'AuthorDto'), { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        map(responseXml => { return this.xmlSerializer.deserialize(responseXml) }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'adding Author'))\n      );\n  }\n\n  /**\n   * Updates an existing author's information.\n   *\n   * @param {number} authorId - The ID of the author to update.\n   * @param {AuthorDto} updatedAuthorDto - The updated data transfer object for the author.\n   * @returns {Observable} - An observable that completes when the update is successful.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public updateAuthor(authorId: number, updatedAuthorDto: AuthorDto): Observable {\n    const url = this.authorUrl(`${authorId}`);\n\n    return this.http.put(url, this.xmlSerializer.serialize(updatedAuthorDto, 'AuthorDto'), { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'updating Author'))\n      );\n  }\n\n  /**\n   * Deletes an author by their ID.\n   *\n   * @param {number} authorId - The ID of the author to delete.\n   * @returns {Observable} - An observable that completes when the deletion is successful.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public deleteAuthor(authorId: number): Observable {\n    const url = this.authorUrl(`${authorId}`);\n    return this.http.delete(url, { headers: this.getHeaders() })\n      .pipe(\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'deleting Author'))\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthorizationGuard.html":{"url":"guards/AuthorizationGuard.html","title":"guard - AuthorizationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthorizationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/authorization.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard that checks if a user is authorized to access a route.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authzService: AuthorizationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/authorization.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authzService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/authorization.guard.ts:24\n                        \n                    \n\n\n            \n                \n                        Determines if the route can be activated based on the user's authorization status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe activated route snapshot.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the user is authorized; otherwise, false.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\nimport { AuthorizationService } from '../services/authorization.service';\n\n/**\n * Guard that checks if a user is authorized to access a route.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthorizationGuard implements CanActivate {\n\n  constructor(\n    private authzService: AuthorizationService,\n    private router: Router\n  ) { }\n\n  /**\n   * Determines if the route can be activated based on the user's authorization status.\n   * \n   * @param {ActivatedRouteSnapshot} route - The activated route snapshot.\n   * @returns {boolean} True if the user is authorized; otherwise, false.\n   */\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n    const requiredRoles = route.data['requiredRole'] || [];\n\n    if (this.authzService.isAuthorizedForRoles(requiredRoles)) {\n      return true; \n    } else {\n      this.router.navigate(['/home']); \n      return false; \n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthorizationInterceptor.html":{"url":"interceptors/AuthorizationInterceptor.html","title":"interceptor - AuthorizationInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthorizationInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/utilities/authorizationInterceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/utilities/authorizationInterceptor.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/utilities/authorizationInterceptor.ts:19\n                        \n                    \n\n\n            \n                \n                        Intercepts HTTP requests and adds an authorization token to the headers\nfor specific HTTP methods (POST, PUT, DELETE).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe outgoing HTTP request to be intercepted.\n\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe next handler in the chain of HTTP requests.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \nAn observable of the HTTP event.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthorizationService } from '../services/authorization.service';\n\n@Injectable()\nexport class AuthorizationInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthorizationService) { }\n\n  /**\n   * Intercepts HTTP requests and adds an authorization token to the headers\n   * for specific HTTP methods (POST, PUT, DELETE).\n   * \n   * @param {HttpRequest} req - The outgoing HTTP request to be intercepted.\n   * @param {HttpHandler} next - The next handler in the chain of HTTP requests.\n   * @returns {Observable>} - An observable of the HTTP event.\n  */\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const token = this.authService.getToken();\n    const methodsToIntercept = ['POST', 'PUT', 'DELETE'];\n\n    if (methodsToIntercept.includes(req.method)) {\n      if (token) {\n        const clonedRequest = req.clone({\n          headers: req.headers.set('Authorization', `Bearer ${token}`)\n        });\n        return next.handle(clonedRequest);\n      }\n    }\n\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/authorization.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing user authorization state.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuthorized$\n                            \n                            \n                                    Private\n                                isAuthorizedSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                decodeToken\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Private\n                                hasRequiredRole\n                            \n                            \n                                    Public\n                                isAuthorizedForRoles\n                            \n                            \n                                    Private\n                                isTokenExpired\n                            \n                            \n                                    Public\n                                isTokenValid\n                            \n                            \n                                    Public\n                                updateAuthorizedState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/authorization.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        decodeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    decodeToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authorization.service.ts:99\n                        \n                    \n\n\n            \n                \n                        Decodes a JWT token to extract its payload.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe JWT token to decode.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \nThe decoded payload, or null if decoding fails.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authorization.service.ts:72\n                        \n                    \n\n\n            \n                \n                        Retrieves the JWT token from cookies.\n\n\n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \nThe JWT token if it exists, otherwise null.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hasRequiredRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    hasRequiredRole(requiredRoles: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authorization.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Checks if the user has any of the required roles.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                requiredRoles\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn array of roles to check against.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the user has one of the required roles; otherwise, false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuthorizedForRoles\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuthorizedForRoles(requiredRoles: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authorization.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Checks whether the user is authorized based on the validity of the token and the admin or user role.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                requiredRoles\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the token is valid and admin, otherwise false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isTokenExpired\n                        \n                    \n                \n            \n            \n                \n                        \n                    isTokenExpired(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authorization.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Checks if the provided token is expired.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe JWT token to check for expiration.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the token is expired, otherwise false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isTokenValid\n                        \n                    \n                \n            \n            \n                \n                        \n                    isTokenValid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authorization.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Determines if the stored token is valid.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the token exists and is not expired, otherwise false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateAuthorizedState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAuthorizedState(isAuthorized: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authorization.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Updates the authorization state by emitting the new authorization status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isAuthorized\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuthorized$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/authorization.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isAuthorizedSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/authorization.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport jwt_decode, { JwtPayload } from 'jwt-decode'\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\n/**\n * Service for managing user authorization state.\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n  private isAuthorizedSubject: BehaviorSubject;\n  public isAuthorized$: Observable;\n\n  constructor(private cookieService: CookieService) {\n    this.isAuthorizedSubject = new BehaviorSubject(this.isAuthorizedForRoles(['Admin', 'User']));\n    this.isAuthorized$ = this.isAuthorizedSubject.asObservable();\n  }\n\n  /**\n   * Updates the authorization state by emitting the new authorization status.\n   *\n   * @param {boolean} isAuthenticated - Indicates whether the user is authorized.\n   * @returns {void} This method does not return a value.\n  */\n  public updateAuthorizedState(isAuthorized: boolean): void {\n    this.isAuthorizedSubject.next(isAuthorized);\n  }\n\n  /**\n   * Checks whether the user is authorized based on the validity of the token and the admin or user role.\n   *\n   * @returns {boolean} - Returns `true` if the token is valid and admin, otherwise `false`.\n  */\n  public isAuthorizedForRoles(requiredRoles: string[]): boolean {\n    return this.isTokenValid() && this.hasRequiredRole(requiredRoles);\n  }\n\n\n  /**\n   * Checks if the user has any of the required roles.\n   *\n   * @param {string[]} requiredRoles - An array of roles to check against.\n   * @returns {boolean} - Returns `true` if the user has one of the required roles; otherwise, `false`.\n  */\n  private hasRequiredRole(requiredRoles: string[]): boolean {\n    const token = this.getToken();\n    if (!token) return false;\n\n    const payload = this.decodeToken(token);\n    const userRole = payload && payload[\"role\"];\n\n    return requiredRoles.includes(userRole);\n  }\n\n  /**\n   * Determines if the stored token is valid.\n   *\n   * @returns {boolean} - Returns `true` if the token exists and is not expired, otherwise `false`.\n  */\n  public isTokenValid(): boolean {\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  /**\n   * Retrieves the JWT token from cookies.\n   *\n   * @returns {string | null} - The JWT token if it exists, otherwise `null`.\n  */\n  public getToken(): string | null {\n    return this.cookieService.get('jwtToken');\n  }\n\n  /**\n   * Checks if the provided token is expired.\n   *\n   * @private\n   * @param {string} token - The JWT token to check for expiration.\n   * @returns {boolean} - Returns `true` if the token is expired, otherwise `false`.\n  */\n  private isTokenExpired(token: string): boolean {\n    const payload = this.decodeToken(token);\n    if (!payload || !payload.exp) {\n      return true;\n    }\n    const expirationTime = payload.exp * 1000;\n    return Date.now() >= expirationTime;\n  }\n\n  /**\n   * Decodes a JWT token to extract its payload.\n   *\n   * @private\n   * @param {string} token - The JWT token to decode.\n   * @returns {any} - The decoded payload, or `null` if decoding fails.\n  */\n  private decodeToken(token: string): any {\n    try {\n      const decodedToken = jwt_decode(token)\n      return decodedToken;\n    } catch (error) {\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlingService.html":{"url":"injectables/ErrorHandlingService.html","title":"injectable - ErrorHandlingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/utilities/error-handling.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for handling errors in HTTP operations and serialization processes.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                constructErrorMessage\n                            \n                            \n                                    Private\n                                getUserFriendlyErrorMessage\n                            \n                            \n                                handleError\n                            \n                            \n                                handleSerializationError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        constructErrorMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    constructErrorMessage(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/utilities/error-handling.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Constructs a detailed error message based on the HTTP error response.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response from the HTTP operation.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A detailed error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUserFriendlyErrorMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserFriendlyErrorMessage(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/utilities/error-handling.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Generates a user-friendly error message based on the HTTP status code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response from the HTTP operation.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A user-friendly error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse, operation: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/utilities/error-handling.service.ts:20\n                        \n                    \n\n\n            \n                \n                        Handles an HTTP error response and logs it to the console.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe error response to handle.\n\n\n                                            \n                                        \n                                        \n                                                operation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'operation'\n                                            \n\n                                            \n                                                    \nThe name of the operation that failed, used for logging.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable that emits an error.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSerializationError\n                        \n                    \n                \n            \n            \n                \nhandleSerializationError(error: Error)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/utilities/error-handling.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Handles serialization errors and logs them to the console.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe serialization error to handle.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable that emits an error.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n/**\n * Service for handling errors in HTTP operations and serialization processes.\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorHandlingService {\n\n  /**\n   * Handles an HTTP error response and logs it to the console.\n   * \n   * @param {HttpErrorResponse} error - The error response to handle.\n   * @param {string} [operation='operation'] - The name of the operation that failed, used for logging.\n   * @returns {Observable} An observable that emits an error.\n  */\n  handleError(error: HttpErrorResponse, operation = 'operation'): Observable {\n    const errorMessage = this.constructErrorMessage(error);\n    console.error(`Error in ${operation}:`, errorMessage);\n\n    return throwError(() => new Error(this.getUserFriendlyErrorMessage(error)));\n  }\n\n  /**\n   * Constructs a detailed error message based on the HTTP error response.\n   * \n   * @param {HttpErrorResponse} error - The error response from the HTTP operation.\n   * @returns {string} A detailed error message.\n  */\n  private constructErrorMessage(error: HttpErrorResponse): string {\n    return error.error instanceof ErrorEvent\n      ? `Client-side error: ${error.error.message}`\n      : `Server-side error: ${error.status} - ${error.message}`;\n  }\n\n  /**\n   * Generates a user-friendly error message based on the HTTP status code.\n   * \n   * @param {HttpErrorResponse} error - The error response from the HTTP operation.\n   * @returns {string} A user-friendly error message.\n  */\n  private getUserFriendlyErrorMessage(error: HttpErrorResponse): string {\n    switch (error.status) {\n      case 400:\n        return 'Bad request. Please check your input.';\n      case 401:\n        return 'Unauthorized access. Please log in or provide valid credentials.';\n      case 403:\n        return 'Forbidden access. You do not have the necessary permissions.';\n      case 404:\n        return 'Requested resource not found.';\n      case 409:\n        return 'Conflict. Please provide valid input.';\n      case 500:\n        return 'Server error. Please try again later.';\n      default:\n        return 'An unknown error occurred.';\n    }\n  }\n\n  /**\n   * Handles serialization errors and logs them to the console.\n   * \n   * @param {Error} error - The serialization error to handle.\n   * @returns {Observable} An observable that emits an error.\n  */\n  handleSerializationError(error: Error): Observable {\n    console.error(`Serialization error: ${error.message}`);\n    const userFriendlyMessage = 'An error occurred during serialization. Please try again.';\n    return throwError(() => new Error(userFriendlyMessage));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component representing the footer of the application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scrollToTop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/footer/footer.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToTop\n                        \n                    \n                \n            \n            \n                \nscrollToTop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/footer/footer.component.ts:21\n                        \n                    \n\n\n            \n                \n                        Scrolls the window to the top of the page.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/footer/footer.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Component representing the footer of the application.\n*/\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {\n  currentYear: number = new Date().getFullYear();\n\n  constructor() { }\n\n  /**\n   * Scrolls the window to the top of the page.\n   *\n   * @returns {void} This method does not return a value.\n  */\n  scrollToTop(): void {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    });\n  }\n}\n\n\n    \n\n    \n        \n  \n    \n        \n          \n            \n              Back to Top\n            \n          \n          \n            Home\n          \n        \n    \n    &copy; {{ currentYear }} by Manuel Suarez\n  \n\n\n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Back to Top                                            Home                          © {{ currentYear }} by Manuel Suarez  '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component representing the header of the application.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logoutService: LogoutService, navigationService: NavigationService, authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/header/header.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logoutService\n                                                  \n                                                        \n                                                                        LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/header/header.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Logs out the current user and navigates to the home page.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/header/header.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/core/header/header.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { LogoutService } from '../services/logout.service';\nimport { NavigationService } from '../services/navigation.service';\n\n/**\n * Component representing the header of the application.\n*/\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  userId: number | null = null;\n\n  constructor(\n    private logoutService: LogoutService,\n    private navigationService: NavigationService,\n    private authService: AuthenticationService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.userId = this.authService.getUserId();\n  }\n\n  /**\n   * Logs out the current user and navigates to the home page.\n   *\n   * @returns {void} This method does not return a value.\n  */\n  logout(): void {\n    this.logoutService.logout();\n    this.router.navigate(['/home']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n      \n        \n        MyHaikus\n      \n      \n        \n      \n\n      \n        \n\n          \n            Home (current)\n          \n\n          \n            \n              Authors\n            \n            \n              View Author Haikus\n              View Authors\n              Add Author\n              Add Author Haiku\n            \n          \n\n          \n            \n              Users\n            \n            \n              View User Haikus\n              View Users\n              Add User Haiku\n            \n          \n\n          \n            \n              Account\n            \n            \n              View Profile\n              Settings\n            \n          \n        \n\n        \n          Logout\n          Register\n          Login\n        \n      \n    \n  \n\n  \n    \n      \n        \n           Logout\n        \n        \n          Are you sure you want to logout?\n        \n        \n          Cancel\n          Confirm\n        \n      \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            MyHaikus                                                              Home (current)                                              Authors                                      View Author Haikus              View Authors              Add Author              Add Author Haiku                                                          Users                                      View User Haikus              View Users              Add User Haiku                                                          Account                                      View Profile              Settings                                                Logout          Register          Login                                                   Logout                          Are you sure you want to logout?                          Cancel          Confirm                            '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component representing the home page of the application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Component representing the home page of the application.\n*/\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n\n})\nexport class HomeComponent {\n\n}\n\n    \n\n    \n        \n  Welcome to MyHaikus\n  \n    MyHaikus is a platform that allows users to explore a diverse collection of known authors and their haikus.\n    Effortlessly manage your own haikus and view those created by others, making it easy to appreciate the beauty of this unique form of poetry.\n    Join us to create, update, delete, and share haikus in a user-friendly environment!\n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Welcome to MyHaikus      MyHaikus is a platform that allows users to explore a diverse collection of known authors and their haikus.    Effortlessly manage your own haikus and view those created by others, making it easy to appreciate the beauty of this unique form of poetry.    Join us to create, update, delete, and share haikus in a user-friendly environment!  '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageDto.html":{"url":"interfaces/ImageDto.html","title":"interface - ImageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ImageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/imageDto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filePath\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ImageDto {\n  id: number;\n  filePath: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImageService.html":{"url":"injectables/ImageService.html","title":"injectable - ImageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/image.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing images, providing methods to retrieve, add, and update image data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                imageApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                    Public\n                                getImageById\n                            \n                            \n                                    Private\n                                imageUrl\n                            \n                            \n                                    Public\n                                uploadImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, xmlSerializer: XmlSerializerService, errorHandler: ErrorHandlingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/image.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        xmlSerializer\n                                                  \n                                                        \n                                                                        XmlSerializerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/image.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Generates HTTP headers for the requests.\n\n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                \nThe headers with content type and accept type set to XML.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getImageById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImageById(imageId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/image.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Fetches a image by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                imageId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the image to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable containing the image data.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        imageUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    imageUrl(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/image.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Constructs the URL for image-related API endpoints.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe specific API endpoint to append to the base URL.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nThe complete URL for the image API.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        uploadImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadImage(selectedFile: File, currentImageId: number, currentUserId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/image.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Uploads an image to the server and associates it with the current user and image ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selectedFile\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe image file to be uploaded.\n\n\n                                            \n                                        \n                                        \n                                                currentImageId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the current image associated with the user.\n\n\n                                            \n                                        \n                                        \n                                                currentUserId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user uploading the image.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable that completes upon successful upload.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        imageApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'image'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/image.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment.development';\nimport { ErrorHandlingService } from '../utilities/error-handling.service';\nimport { XmlSerializerService } from '../utilities/xml-serializer.service';\nimport { ImageDto } from '../../shared/models/imageDto';\n\n/**\n * Service for managing images, providing methods to retrieve, add, and update image data.\n*/\n@Injectable({\n  providedIn: 'root',\n})\nexport class ImageService {\n  private imageApi = 'image';\n\n  constructor(\n    private http: HttpClient,\n    private xmlSerializer: XmlSerializerService,\n    private errorHandler: ErrorHandlingService\n  ) { }\n\n  /**\n   * Generates HTTP headers for the requests.\n   *\n   * @private\n   * @returns {HttpHeaders} - The headers with content type and accept type set to XML.\n  */\n  private getHeaders(): HttpHeaders {\n    return new HttpHeaders({\n      'Content-Type': 'application/xml',\n      Accept: 'application/xml',\n    });\n  }\n\n  /**\n   * Constructs the URL for image-related API endpoints.\n   *\n   * @private\n   * @param {string} endpoint - The specific API endpoint to append to the base URL.\n   * @returns {string} - The complete URL for the image API.\n  */\n  private imageUrl(endpoint: string): string {\n    return `${environment.apiBaseUrl}/${this.imageApi}/${endpoint}`;\n  }\n\n  /**\n   * Fetches a image by their ID.\n   *\n   * @param {number} imageId - The ID of the image to retrieve.\n   * @returns {Observable} - An observable containing the image data.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public getImageById(imageId: number): Observable {\n    const url = this.imageUrl(`${imageId}`);\n    return this.http.get(url, { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        map(responseXml => {\n          const imageDto = this.xmlSerializer.deserialize(responseXml);\n          return imageDto;\n        }),\n        catchError((error: HttpErrorResponse) => {\n          return this.errorHandler.handleError(error, 'fetching image');\n        })\n      );\n  }\n\n  /**\n   * Uploads an image to the server and associates it with the current user and image ID.\n   *\n   * @param {File} selectedFile - The image file to be uploaded.\n   * @param {number} currentImageId - The ID of the current image associated with the user.\n   * @param {number} currentUserId - The ID of the user uploading the image.\n   * @returns {Observable} An observable that completes upon successful upload.\n   * \n   * @throws {HttpErrorResponse} If the HTTP request fails.\n   * @throws {Error} If no file is provided for upload.\n   */\n  public uploadImage(selectedFile: File, currentImageId: number, currentUserId: number): Observable {\n    if (selectedFile) {\n      const url = this.imageUrl(`upload-image/${currentImageId}/${currentUserId}`);\n      const formData = new FormData();\n      formData.append('file', selectedFile, selectedFile.name);\n\n      return this.http.post(url, formData)\n        .pipe(\n          catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'uploading Image'))\n        );\n    }\n\n    return throwError('No file provided');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/IsAuthorizedDirective.html":{"url":"directives/IsAuthorizedDirective.html","title":"directive - IsAuthorizedDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  IsAuthorizedDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/is-authorized.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appIsAuthorized]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authSubscription$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                updateView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appIsAuthorized\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef, viewContainer: ViewContainerRef, authorizationService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/is-authorized.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appIsAuthorized\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/is-authorized.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/is-authorized.directive.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/is-authorized.directive.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateView\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateView()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/is-authorized.directive.ts:33\n                        \n                    \n\n\n            \n                \n                        Updates the view based user's authorized status for the specified roles.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSubscription$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/directives/is-authorized.directive.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { OnInit, OnDestroy } from '@angular/core';\nimport { AuthorizationService } from '../../core/services/authorization.service';\n\n@Directive({\n  selector: '[appIsAuthorized]'\n})\nexport class IsAuthorizedDirective implements OnInit, OnDestroy {\n  private authSubscription$: Subscription | null = null;\n  @Input() appIsAuthorized: string[] = [];\n\n  constructor(\n    private templateRef: TemplateRef,\n    private viewContainer: ViewContainerRef,\n    private authorizationService: AuthorizationService,\n  ) { }\n\n  ngOnInit() {\n    this.authSubscription$ = this.authorizationService.isAuthorized$\n      .subscribe(() => this.updateView());\n  }\n\n  ngOnDestroy() {\n    if (this.authSubscription$) this.authSubscription$.unsubscribe();\n  }\n\n  /**\n   * Updates the view based user's authorized status for the specified roles.\n   *\n   * @returns {void} This method does not return a value.\n  */\n  private updateView() {\n    if (this.authorizationService.isAuthorizedForRoles(this.appIsAuthorized)) {\n      // User is authorized, display the view\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    } else {\n      // User is not authorized, clear the view\n      this.viewContainer.clear();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/IsUnAuthenticatedDirective.html":{"url":"directives/IsUnAuthenticatedDirective.html","title":"directive - IsUnAuthenticatedDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  IsUnAuthenticatedDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/is-unauthenticated.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                A directive that conditionally displays an element based on the user's authentication status.\n\n            \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appIsUnAuthenticated]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authSubscription$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                updateView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef, viewContainer: ViewContainerRef, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/is-unauthenticated.directive.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/is-unauthenticated.directive.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/is-unauthenticated.directive.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateView\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateView(isAuthenticated: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/is-unauthenticated.directive.ts:37\n                        \n                    \n\n\n            \n                \n                        Updates the view based on the user's authentication status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isAuthenticated\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nIndicates whether the user is authenticated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSubscription$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/directives/is-unauthenticated.directive.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef, ViewContainerRef, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from '../../core/services/authentication.service';\n\n/**\n * A directive that conditionally displays an element based on the user's authentication status.\n */\n@Directive({\n  selector: '[appIsUnAuthenticated]'\n})\nexport class IsUnAuthenticatedDirective implements OnInit, OnDestroy {\n  private authSubscription$: Subscription | null = null;\n\n  constructor(\n    private templateRef: TemplateRef,\n    private viewContainer: ViewContainerRef,\n    private authenticationService: AuthenticationService\n  ) { }\n\n  ngOnInit(): void {\n    this.authSubscription$ = this.authenticationService.isAuthenticated$\n      .subscribe(isAuthenticated => this.updateView(isAuthenticated));\n  }\n\n  ngOnDestroy(): void {\n    if (this.authSubscription$) {\n      this.authSubscription$.unsubscribe();\n    }\n  }\n\n  /**\n   * Updates the view based on the user's authentication status.\n   *\n   * @param {boolean} isAuthenticated - Indicates whether the user is authenticated.\n   * @returns {void} This method does not return a value.\n   */\n  private updateView(isAuthenticated: boolean): void {\n    if (!isAuthenticated) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainer.clear();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JWTokenDto.html":{"url":"interfaces/JWTokenDto.html","title":"interface - JWTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JWTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/jwtokenDto.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JWTokenDto {\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for handling user login.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                loadingStates\n                            \n                            \n                                loginDto\n                            \n                            \n                                successMessages\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearMessages\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                login\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: LoginService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clearMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/login/login.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Clears any error messages related to login loading.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any, type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/login/login.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Handles errors for specific types of operations (e.g., login loading) and updates loading states.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response or message.\n\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe type of operation encountering the error.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/login/login.component.ts:74\n                        \n                    \n\n\n            \n                \n                        Authenticates the user and navigates to the home page upon successful login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn object containing the username and password for authentication.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/login/login.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/login/login.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    login: null,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    login: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginDto\n\n                    \n                \n                \n                    \n                        Default value : { username: '', password: '' }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    login: \"\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { finalize, Subject, takeUntil } from 'rxjs';\nimport { LoginService } from '../../core/services/login.service';\nimport { LoginDto } from '../../shared/models/loginDto.model';\n\n/**\n * Component for handling user login.\n*/\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy{\n  private unsubscribe$ = new Subject();\n\n  loginDto: LoginDto = { username: '', password: '' };\n\n  successMessages = {\n    login: \"\"\n  };\n\n  errorMessages: { login: string | null } = {\n    login: null,\n  };\n\n  loadingStates = {\n    login: false,\n  };\n\n  constructor(private loginService: LoginService, private router: Router) { }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  ngOnInit(): void {\n    this.clearMessages();\n  }\n\n  /**\n   * Clears any error messages related to login loading.\n  */\n  private clearMessages(): void {\n    this.errorMessages = {\n      login: null,\n    };\n    this.successMessages = {\n      login: \"\"\n    };\n  }\n\n  /**\n   * Handles errors for specific types of operations (e.g., login loading) and updates loading states.\n   * \n   * @param {any} error - The error response or message.\n   * @param {'login'} type - The type of operation encountering the error.\n   * @returns {void} This method does not return a value.\n  */\n  private handleError(error: any, type: 'login'): void {\n    this.loadingStates[type] = false;\n    this.errorMessages[type] = error.message || 'An unknown error occurred, please try again later.';\n  }\n\n  /**\n   * Authenticates the user and navigates to the home page upon successful login.\n   *\n   * @param {LoginDto} loginDto - An object containing the username and password for authentication.\n   * @returns {void} This method does not return a value.\n   * @throws Will call `handleError` with an error message on failure.\n  */\n  login(loginDto: LoginDto): void {\n    this.loadingStates.login = true;\n\n    this.loginDto.username = loginDto.username;\n    this.loginDto.password = loginDto.password;\n\n    this.loginService.login(this.loginDto).pipe(\n      takeUntil(this.unsubscribe$),\n      finalize(() => {\n        this.loadingStates.login = false;\n      })\n    ).subscribe({\n      next: () => {\n        this.router.navigate(['/home']);\n      },\n      error: error => this.handleError(error, 'login')\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n           Login\n        \n\n        \n          \n            {{ successMessages.login }}\n            {{ errorMessages.login }}\n          \n\n          \n            \n              \n                Loading...\n              \n            \n          \n\n          \n            Fields marked with * are required.\n            \n          \n\n          \n\n          Don't have an account?\n          Register\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Login                                      {{ successMessages.login }}            {{ errorMessages.login }}                                                              Loading...                                                          Fields marked with * are required.                                          Don\\'t have an account?          Register                    '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginDto.html":{"url":"interfaces/LoginDto.html","title":"interface - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/loginDto.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginDto {\n  username: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/login/login-form/login-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        A component for login a user in through a form.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n\n\n            \n                styleUrls\n                ./login-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isSubmitted\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hasError\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                formSubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/login/login-form/login-form.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        formSubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/login/login-form/login-form.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(controlName: string, errorType?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/login/login-form/login-form.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Checks whether a form control has a specific error or is invalid.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the form control.\n\n\n                                            \n                                        \n                                        \n                                                errorType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe specific error type to check for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the control is invalid and the error matches, or if no specific error type is provided.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/login/login-form/login-form.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Submits the form and emits the form data as a LoginDto if the form is valid.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/login/login-form/login-form.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Resets the form and clears the submission state.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login-form/login-form.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login-form/login-form.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoginDto } from '../../../shared/models/loginDto.model';\n\n/**\n * A component for login a user in through a form.\n*/\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent {\n  loginForm: FormGroup;\n  @Output() formSubmit = new EventEmitter();\n  isSubmitted = false; \n\n  constructor(private fb: FormBuilder) {\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(20)]],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(30)]]\n    });\n  }\n\n  /**\n   * Submits the form and emits the form data as a `LoginDto` if the form is valid.\n   * @returns {void} This method does not return a value.\n  */\n  onSubmit(): void {\n    this.isSubmitted = true;\n\n    if (this.loginForm.valid) {\n      const loginDto: LoginDto = {\n        ...this.loginForm.value\n      };\n\n      this.formSubmit.emit(loginDto);\n      this.resetForm();\n    }\n  }\n\n  /**\n   * Resets the form and clears the submission state.\n   * @returns {void} This method does not return a value.\n  */\n  resetForm(): void {\n    this.isSubmitted = false;\n    this.loginForm.reset();\n  }\n\n  /**\n   * Checks whether a form control has a specific error or is invalid.\n   * \n   * @param {string} controlName - The name of the form control.\n   * @param {string} [errorType] - The specific error type to check for.\n   * @returns {boolean} - Returns true if the control is invalid and the error matches, or if no specific error type is provided.\n  */\n  hasError(controlName: string, errorType?: string): boolean {\n    const control = this.loginForm.get(controlName);\n    if (!control) {\n      return false;\n    }\n    return this.isSubmitted && control.invalid && (errorType ? control.hasError(errorType) : true);\n  }\n}\n\n    \n\n    \n        \n  \n    Username*\n    \n      \n        \n          \n        \n      \n      \n    \n    \n      Username is required!\n    \n    \n      Username must be at least 4 characters long.\n    \n    \n      Username cannot be more than 20 characters long.\n    \n  \n\n  \n    Password*\n    \n      \n        \n          \n        \n      \n      \n    \n    \n      Password is required!\n    \n    \n      Password must be at least 8 characters long.\n    \n    \n      Password cannot be more than 30 characters long.\n    \n  \n\n  \n    Login\n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./login-form.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Username*                                                              Username is required!              Username must be at least 4 characters long.              Username cannot be more than 20 characters long.            Password*                                                              Password is required!              Password must be at least 8 characters long.              Password cannot be more than 30 characters long.            Login    Cancel  '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/login.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for handling user login operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                DefaultRoles\n                            \n                            \n                                    Private\n                                loginApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, xmlSerializer: XmlSerializerService, cookieService: CookieService, errorHandler: ErrorHandlingService, authenticationService: AuthenticationService, authorizationService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/login.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        xmlSerializer\n                                                  \n                                                        \n                                                                        XmlSerializerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/login.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Generates HTTP headers for the requests.\n\n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                \nThe headers with content type and accept type set to XML.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/login.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Logs in a user and retrieves a JWT token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing login credentials (username and password).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable that emits the JWT token data upon successful login.\n\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        DefaultRoles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Admin', 'User']\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/login.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loginApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'login'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/login.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { UserDto } from \"../../shared/models/userDto.model\";\nimport { Observable, map, catchError } from \"rxjs\";\nimport { JWTokenDto } from \"../../shared/models/jwtokenDto.model\";\nimport { AuthenticationService } from \"./authentication.service\";\nimport { AuthorizationService } from \"./authorization.service\";\nimport { environment } from \"../../../environments/environment.development\";\nimport { ErrorHandlingService } from \"../utilities/error-handling.service\";\nimport { XmlSerializerService } from \"../utilities/xml-serializer.service\";\nimport { LoginDto } from \"../../shared/models/loginDto.model\";\n\n/**\n * Service for handling user login operations.\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private loginApi = 'login'; \n  private readonly DefaultRoles = ['Admin', 'User'];\n  constructor(\n    private http: HttpClient,\n    private xmlSerializer: XmlSerializerService,\n    private cookieService: CookieService,\n    private errorHandler: ErrorHandlingService,\n    private authenticationService: AuthenticationService,\n    private authorizationService: AuthorizationService \n  ) { }\n\n  /**\n   * Generates HTTP headers for the requests.\n   *\n   * @private\n   * @returns {HttpHeaders} - The headers with content type and accept type set to XML.\n  */\n  private getHeaders(): HttpHeaders {\n    return new HttpHeaders({\n      'Content-Type': 'application/xml',\n      Accept: 'application/xml',\n    });\n  }\n\n  /**\n   * Logs in a user and retrieves a JWT token.\n   *\n   * @param {LoginDto} loginDto - The data transfer object containing login credentials (username and password).\n   * @returns {Observable} - An observable that emits the JWT token data upon successful login.\n   * \n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n   */\n  public login(loginDto: LoginDto): Observable {\n    const xmlUserDto = this.xmlSerializer.serialize(loginDto, 'LoginDto');\n\n    return this.http.post(`${environment.apiBaseUrl}/${this.loginApi}`, xmlUserDto, { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        map(responseXml => {\n          const jwtDto = this.xmlSerializer.deserialize(responseXml);\n\n          this.cookieService.set('jwtToken', jwtDto.token, {\n            expires: 1,\n            secure: true,\n            sameSite: 'Strict'\n          });\n\n          if (this.authenticationService.isAuthenticated()) \n            this.authenticationService.updateAuthenticationState(true);\n\n          if (this.authorizationService.isAuthorizedForRoles(this.DefaultRoles)) \n            this.authorizationService.updateAuthorizedState(true)\n\n          return jwtDto;\n        }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'fetching Login'))\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoutService.html":{"url":"injectables/LogoutService.html","title":"injectable - LogoutService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/logout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for handling user logout operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cookieService: CookieService, authenticationService: AuthenticationService, authorizationService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/logout.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/logout.service.ts:28\n                        \n                    \n\n\n            \n                \n                        Logs out the current user by deleting the JWT token from cookies\nand updating the authentication and authorization states.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { AuthorizationService } from './authorization.service';\n\n/**\n * Service for handling user logout operations.\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogoutService {\n\n  constructor(\n    private router: Router,\n    private cookieService: CookieService,\n    private authenticationService: AuthenticationService,\n    private authorizationService: AuthorizationService\n  ) { }\n\n  /**\n   * Logs out the current user by deleting the JWT token from cookies \n   * and updating the authentication and authorization states.\n   *\n   * @returns {void} This method does not return a value.\n  */\n  logout(): void {\n    this.cookieService.delete('jwtToken');\n\n    this.authenticationService.updateAuthenticationState(false);\n    this.authorizationService.updateAuthorizedState(false);\n\n    this.router.navigate(['/login']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatchingValidator.html":{"url":"classes/MatchingValidator.html","title":"class - MatchingValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatchingValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/utilities/matching-validator.ts\n        \n\n\n            \n                Description\n            \n            \n                A custom validator for matching two form controls.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                matchingValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        matchingValidator\n                        \n                    \n                \n            \n            \n                \n                        \n                    matchingValidator(controlName: string, matchingControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/utilities/matching-validator.ts:15\n                        \n                    \n\n\n            \n                \n                        Creates a validator function that checks if two specified form controls have matching values.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the control to validate.\n\n\n                                            \n                                        \n                                        \n                                                matchingControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the control to match against.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                A validator function that can be used with a FormGroup.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\n/**\n * A custom validator for matching two form controls.\n*/\nexport class MatchingValidator {\n\n  /**\n   * Creates a validator function that checks if two specified form controls have matching values.\n   * \n   * @param {string} controlName - The name of the control to validate.\n   * @param {string} matchingControlName - The name of the control to match against.\n   * @returns {ValidatorFn} A validator function that can be used with a FormGroup.\n  */\n  static matchingValidator(controlName: string, matchingControlName: string): ValidatorFn {\n    return (formGroup: AbstractControl): ValidationErrors | null => {\n      const control = formGroup.get(controlName);\n      const matchingControl = formGroup.get(matchingControlName);\n\n      if (control && matchingControl) {\n        if (matchingControl.errors && !matchingControl.errors['match']) {\n          return null;\n        }\n        if (control.value !== matchingControl.value) {\n          matchingControl.setErrors({ match: true });\n          return { match: true };\n        } else {\n          matchingControl.setErrors(null);\n          return null;\n        }\n      }\n      return null;\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigationService.html":{"url":"injectables/NavigationService.html","title":"injectable - NavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/navigation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for handling navigation within the application.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateAuthor\n                            \n                            \n                                updateAuthorHaiku\n                            \n                            \n                                updateUser\n                            \n                            \n                                updateUserHaiku\n                            \n                            \n                                updateUserOrProfile\n                            \n                            \n                                viewAuthor\n                            \n                            \n                                viewAuthorHaiku\n                            \n                            \n                                viewAuthorHaikus\n                            \n                            \n                                viewAuthors\n                            \n                            \n                                viewLogin\n                            \n                            \n                                viewUser\n                            \n                            \n                                viewUserHaiku\n                            \n                            \n                                viewUserHaikus\n                            \n                            \n                                viewUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/navigation.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateAuthor\n                        \n                    \n                \n            \n            \n                \nupdateAuthor(authorId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/navigation.service.ts:50\n                        \n                    \n\n\n            \n                \n                        Navigates to the update page for a specific author.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the author to update.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAuthorHaiku\n                        \n                    \n                \n            \n            \n                \nupdateAuthorHaiku(authorHaikuId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/navigation.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Navigates to the update page for a specific author haiku.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorHaikuId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the author haiku to update.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/navigation.service.ts:108\n                        \n                    \n\n\n            \n                \n                        Navigates to the update page for a specific user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user to update.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserHaiku\n                        \n                    \n                \n            \n            \n                \nupdateUserHaiku(userHaikuId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/navigation.service.ts:146\n                        \n                    \n\n\n            \n                \n                        Navigates to the update page for a specific user haiku.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userHaikuId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user haiku to update.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserOrProfile\n                        \n                    \n                \n            \n            \n                \nupdateUserOrProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/navigation.service.ts:117\n                        \n                    \n\n\n            \n                \n                        Navigates to the update profile page for the current user.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewAuthor\n                        \n                    \n                \n            \n            \n                \nviewAuthor(authorId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/navigation.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Navigates to the detailed view of a specific author.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the author to view.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewAuthorHaiku\n                        \n                    \n                \n            \n            \n                \nviewAuthorHaiku(authorHaikuId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/navigation.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Navigates to the detailed view of a specific author haiku.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorHaikuId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the author haiku to view.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewAuthorHaikus\n                        \n                    \n                \n            \n            \n                \nviewAuthorHaikus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/navigation.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Navigates to the page displaying all author haikus.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewAuthors\n                        \n                    \n                \n            \n            \n                \nviewAuthors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/navigation.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Navigates to the page displaying all authors.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewLogin\n                        \n                    \n                \n            \n            \n                \nviewLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/navigation.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Navigates to the login page.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewUser\n                        \n                    \n                \n            \n            \n                \nviewUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/navigation.service.ts:98\n                        \n                    \n\n\n            \n                \n                        Navigates to the detailed view of a specific user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user to view.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewUserHaiku\n                        \n                    \n                \n            \n            \n                \nviewUserHaiku(userHaikuId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/navigation.service.ts:136\n                        \n                    \n\n\n            \n                \n                        Navigates to the detailed view of a specific user haiku.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userHaikuId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user haiku to view.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewUserHaikus\n                        \n                    \n                \n            \n            \n                \nviewUserHaikus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/navigation.service.ts:126\n                        \n                    \n\n\n            \n                \n                        Navigates to the page displaying all user haikus.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewUsers\n                        \n                    \n                \n            \n            \n                \nviewUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/navigation.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Navigates to the page displaying all users.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n * Service for handling navigation within the application.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n\n  constructor(\n    private router: Router,\n  ) { }\n\n  /**\n   * Navigates to the login page.\n   *\n   * @returns {void} This method does not return a value.\n   */\n  viewLogin(): void {\n    this.router.navigate(['/login']);\n  }\n\n  /**\n   * Navigates to the page displaying all authors.\n   *\n   * @returns {void} This method does not return a value.\n  */\n  viewAuthors(): void {\n    this.router.navigate(['/all-authors']);\n  }\n\n  /**\n   * Navigates to the detailed view of a specific author.\n   *\n   * @param {number} authorId - The ID of the author to view.\n   * @returns {void} This method does not return a value.\n  */\n  viewAuthor(authorId: number): void {\n    this.router.navigate(['/view-author', authorId]);\n  }\n\n  /**\n   * Navigates to the update page for a specific author.\n   *\n   * @param {number} authorId - The ID of the author to update.\n   * @returns {void} This method does not return a value.\n  */\n  updateAuthor(authorId: number): void {\n    this.router.navigate(['/update-author', authorId]);\n  }\n\n  /**\n   * Navigates to the page displaying all author haikus.\n   *\n   * @returns {void} This method does not return a value.\n  */\n  viewAuthorHaikus(): void {\n    this.router.navigate(['/all-author-haikus']);\n  }\n\n  /**\n   * Navigates to the detailed view of a specific author haiku.\n   *\n   * @param {number} authorHaikuId - The ID of the author haiku to view.\n   * @returns {void} This method does not return a value.\n  */\n  viewAuthorHaiku(authorHaikuId: number): void {\n    this.router.navigate(['/view-author-haiku', authorHaikuId]);\n  }\n\n  /**\n   * Navigates to the update page for a specific author haiku.\n   *\n   * @param {number} authorHaikuId - The ID of the author haiku to update.\n   * @returns {void} This method does not return a value.\n  */\n  updateAuthorHaiku(authorHaikuId: number): void {\n    this.router.navigate(['/update-author-haiku', authorHaikuId]);\n  }\n\n  /**\n   * Navigates to the page displaying all users.\n   *\n   * @returns {void} This method does not return a value.\n  */\n  viewUsers(): void {\n    this.router.navigate(['/all-users']);\n  }\n\n  /**\n   * Navigates to the detailed view of a specific user.\n   *\n   * @param {number} userId - The ID of the user to view.\n   * @returns {void} This method does not return a value.\n  */\n  viewUser(userId: number): void {\n    this.router.navigate(['/view-user', userId]);\n  }\n\n  /**\n   * Navigates to the update page for a specific user.\n   *\n   * @param {number} userId - The ID of the user to update.\n   * @returns {void} This method does not return a value.\n  */\n  updateUser(userId: number): void {\n    this.router.navigate(['/update-user', userId]);\n  }\n\n  /**\n   * Navigates to the update profile page for the current user.\n   *\n   * @returns {void} This method does not return a value.\n  */\n  updateUserOrProfile(): void {\n    this.router.navigate(['/update-profile']);\n  }\n\n  /**\n   * Navigates to the page displaying all user haikus.\n   *\n   * @returns {void} This method does not return a value.\n  */\n  viewUserHaikus(): void {\n    this.router.navigate(['/all-user-haikus']);\n  }\n\n  /**\n   * Navigates to the detailed view of a specific user haiku.\n   *\n   * @param {number} userHaikuId - The ID of the user haiku to view.\n   * @returns {void} This method does not return a value.\n  */\n  viewUserHaiku(userHaikuId: number): void {\n    this.router.navigate(['/view-user-haiku', userHaikuId]);\n  }\n\n  /**\n   * Navigates to the update page for a specific user haiku.\n   *\n   * @param {number} userHaikuId - The ID of the user haiku to update.\n   * @returns {void} This method does not return a value.\n  */\n  updateUserHaiku(userHaikuId: number): void {\n    this.router.navigate(['/update-user-haiku', userHaikuId]);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/not-found/not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component representing the 404 page of the application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Component representing the 404 page of the application.\n*/\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n\n})\nexport class NotFoundComponent {\n\n}\n\n    \n\n    \n        \n  404 - Page Not Found\n  \n    Sorry, the page you are looking for does not exist.\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  404 - Page Not Found      Sorry, the page you are looking for does not exist.  '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationMetaDataDto.html":{"url":"interfaces/PaginationMetaDataDto.html","title":"interface - PaginationMetaDataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginationMetaDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/paginationMetaDataDto.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentPage\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                        \n                                            totalCount\n                                        \n                                \n                                \n                                        \n                                            totalPages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PaginationMetaDataDto {\n  totalCount: number;\n  pageSize: number;\n  currentPage: number;\n  totalPages: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileDto.html":{"url":"interfaces/ProfileDto.html","title":"interface - ProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/profileDto.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bio\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageId\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProfileDto {\n  id: number;\n  bio: string;\n  userId: number;\n  imageId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/profile.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing profiles, providing methods to retrieve, add, and update profile data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                profileApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllProfilesByUserIds\n                            \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                    Public\n                                getProfileById\n                            \n                            \n                                    Public\n                                getProfileByUserId\n                            \n                            \n                                    Private\n                                profileUrl\n                            \n                            \n                                    Public\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, xmlSerializer: XmlSerializerService, errorHandler: ErrorHandlingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/profile.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        xmlSerializer\n                                                  \n                                                        \n                                                                        XmlSerializerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllProfilesByUserIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllProfilesByUserIds(userIds: number[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/profile.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Retrieves a list of profiles by user IDs.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userIds\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IDs of the users.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable containing the user profiles.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/profile.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Generates HTTP headers for the requests.\n\n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                \nThe headers with content type and accept type set to XML.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProfileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfileById(profileId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/profile.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Fetches a profile by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                profileId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the profile to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable containing the profile data.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProfileByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfileByUserId(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/profile.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Fetches an author by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user profile to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable containing the profile data.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        profileUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    profileUrl(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/profile.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Constructs the URL for profile-related API endpoints.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe specific API endpoint to append to the base URL.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nThe complete URL for the profile API.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfile(profileId: number, updatedProfileDto: ProfileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/profile.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Updates an existing profile's information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                profileId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the profile to update.\n\n\n                                            \n                                        \n                                        \n                                                updatedProfileDto\n                                            \n                                                            ProfileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated data transfer object for the profile.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that completes when the update is successful.\n\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        profileApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/profile.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment.development';\nimport { ErrorHandlingService } from '../utilities/error-handling.service';\nimport { XmlSerializerService } from '../utilities/xml-serializer.service';\nimport { ProfileDto } from '../../shared/models/profileDto.model';\n\n/**\n * Service for managing profiles, providing methods to retrieve, add, and update profile data.\n*/\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  private profileApi = 'profile';\n\n  constructor(\n    private http: HttpClient,\n    private xmlSerializer: XmlSerializerService,\n    private errorHandler: ErrorHandlingService\n  ) { }\n\n  /**\n   * Generates HTTP headers for the requests.\n   *\n   * @private\n   * @returns {HttpHeaders} - The headers with content type and accept type set to XML.\n  */\n  private getHeaders(): HttpHeaders {\n    return new HttpHeaders({\n      'Content-Type': 'application/xml',\n      Accept: 'application/xml',\n    });\n  }\n\n  /**\n   * Constructs the URL for profile-related API endpoints.\n   *\n   * @private\n   * @param {string} endpoint - The specific API endpoint to append to the base URL.\n   * @returns {string} - The complete URL for the profile API.\n  */\n  private profileUrl(endpoint: string): string {\n    return `${environment.apiBaseUrl}/${this.profileApi}/${endpoint}`;\n  }\n\n  /**\n   * Fetches a profile by their ID.\n   *\n   * @param {number} profileId - The ID of the profile to retrieve.\n   * @returns {Observable} - An observable containing the profile data.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public getProfileById(profileId: number): Observable {\n    const url = this.profileUrl(`${profileId}`);\n    return this.http.get(url, { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        map(responseXml => this.xmlSerializer.deserialize(responseXml)),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'fetching Profile'))\n      );\n  }\n\n  /**\n   * Retrieves a list of profiles by user IDs.\n   *\n   * @param {number[]} [userIds] - The IDs of the users.\n   * @returns {Observable} - An observable containing the user profiles.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public getAllProfilesByUserIds(userIds: number[]): Observable {\n    const userIdsQuery = userIds.join('&userIds=');\n    const url = this.profileUrl(`profiles-by-ids?userIds=${userIdsQuery}`);\n\n    return this.http.get(url, { headers: this.getHeaders(), responseType: 'text' as 'json', observe: 'response' })\n      .pipe(\n        map(response => {\n          const profiles = this.xmlSerializer.deserializeArray(response.body || '', 'ProfileDto') || [];\n          return { profiles };\n        }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'fetching User Profiles'))\n      );\n  }\n\n  /**\n   * Fetches an author by their ID.\n   *\n   * @param {number} userId - The ID of the user profile to retrieve.\n   * @returns {Observable} - An observable containing the profile data.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public getProfileByUserId(userId: number): Observable {\n    const url = this.profileUrl(`user/${userId}`);\n    return this.http.get(url, { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        map(responseXml => this.xmlSerializer.deserialize(responseXml)),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'fetching Profile'))\n      );\n  }\n\n  /**\n   * Updates an existing profile's information.\n   *\n   * @param {number} profileId - The ID of the profile to update.\n   * @param {ProfileDto} updatedProfileDto - The updated data transfer object for the profile.\n   * @returns {Observable} - An observable that completes when the update is successful.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public updateProfile(profileId: number, updatedProfileDto: ProfileDto): Observable {\n    const url = this.profileUrl(`${profileId}`);\n    return this.http.put(url, this.xmlSerializer.serialize(updatedProfileDto, 'ProfileDto'), { headers: this.getHeaders() })\n      .pipe(\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'updating Profile'))\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for user registration.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                loadingStates\n                            \n                            \n                                successMessages\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                            \n                                userDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearMessages\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(registerService: RegisterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/register/register.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        registerService\n                                                  \n                                                        \n                                                                        RegisterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clearMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Clears any error messages related to add loading.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any, type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Handles errors for specific types of operations (e.g., register loading) and updates loading states.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response or message.\n\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe type of operation encountering the error.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(registerDto: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Registers a new user with the provided registration data (registerDto).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing user registration details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    register: null,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    register: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    register: \"\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                \n                    \n                        Default value : { id: 0, username: '', password: '', roleId: 0 }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { finalize, Observable, Subject, takeUntil } from 'rxjs';\nimport { RegisterDto } from '../../shared/models/registerDto.model';\nimport { UserService } from '../../core/services/user.service';\nimport { UserDto } from '../../shared/models/userDto.model';\nimport { NavigationService } from '../../core/services/navigation.service';\nimport { RegisterService } from '../../core/services/register.service';\nimport { OnInit } from '@angular/core';\n\n/**\n * Component for user registration.\n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit, OnDestroy{ \n  private unsubscribe$ = new Subject();\n\n  userDto: UserDto = { id: 0, username: '', password: '', roleId: 0 };\n\n  successMessages = {\n    register: \"\"\n  };\n\n  errorMessages: { register: string | null } = {\n    register: null,\n  };\n\n  loadingStates = {\n    register: false\n  };\n\n  constructor(\n    private registerService: RegisterService) { }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  ngOnInit(): void {\n    this.clearMessages();\n  }\n\n  /**\n   * Clears any error messages related to add loading.\n   * @returns {void} This method does not return a value.\n  */\n  private clearMessages(): void {\n    this.errorMessages = {\n      register: null,\n    };\n    this.successMessages = {\n      register: \"\"\n    };\n  }\n\n  /**\n   * Handles errors for specific types of operations (e.g., register loading) and updates loading states.\n   * \n   * @param {any} error - The error response or message.\n   * @param {'register'} type - The type of operation encountering the error.\n   * @returns {void} This method does not return a value.\n  */\n  private handleError(error: any, type: 'register'): void {\n    this.loadingStates[type] = false;\n    this.errorMessages[type] = error.message || 'An unknown error occurred, please try again later.';\n  }\n\n  /**\n   * Registers a new user with the provided registration data (`registerDto`).\n   *\n   * @param {RegisterDto} registerDto - The data transfer object containing user registration details.\n   * @returns {void} This method does not return a value.\n   * @throws Will call `handleError` with an error message on failure.\n   */\n  register(registerDto: RegisterDto): void {\n    this.loadingStates.register = true;\n\n    this.registerService.addRegister(registerDto).pipe(\n      takeUntil(this.unsubscribe$),\n      finalize(() => {\n        this.loadingStates.register = false;\n      })\n    ).subscribe({\n      next: () => {\n        this.successMessages.register = \"Registered successfully!\";\n      },\n      error: error => this.handleError(error, 'register')\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n            Register\n        \n        \n          {{ successMessages.register }}\n          {{ errorMessages.register  }}\n\n          \n            \n              \n                Loading...\n              \n            \n          \n\n          \n            \n          \n\n          \n\n          Have an account?\n          Login\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Register                          {{ successMessages.register }}          {{ errorMessages.register  }}                                                    Loading...                                                                                        Have an account?          Login                    '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterDto.html":{"url":"interfaces/RegisterDto.html","title":"interface - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/registerDto.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            confirmPassword\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegisterDto {\n  username: string;\n  password: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterFormComponent.html":{"url":"components/RegisterFormComponent.html","title":"component - RegisterFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/register/register-form/register-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        A component for adding a user through a form.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register-form\n            \n\n\n\n            \n                styleUrls\n                ./register-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isSubmitted\n                            \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hasError\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                formSubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, usernameValidator: UsernameValidator)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/register/register-form/register-form.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usernameValidator\n                                                  \n                                                        \n                                                                        UsernameValidator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        formSubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/register/register-form/register-form.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(controlName: string, errorType?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register-form/register-form.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Checks whether a form control has a specific error or is invalid.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the form control.\n\n\n                                            \n                                        \n                                        \n                                                errorType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe specific error type to check for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the control is invalid and the error matches, or if no specific error type is provided.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register-form/register-form.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Submits the form and emits the form data as an RegisterDto if the form is valid.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register-form/register-form.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Resets the form and clears the submission state.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register-form/register-form.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register-form/register-form.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RegisterDto } from '../../../shared/models/registerDto.model';\nimport { MatchingValidator } from '../../../core/utilities/matching-validator';\nimport { UsernameValidator } from '../../../core/utilities/username-validator';\n\n/**\n * A component for adding a user through a form.\n*/\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.css']\n})\nexport class RegisterFormComponent {\n  registerForm: FormGroup;\n  @Output() formSubmit = new EventEmitter();\n  isSubmitted = false; \n\n  constructor(private fb: FormBuilder, private usernameValidator: UsernameValidator) {\n    this.registerForm = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(20)], [this.usernameValidator.usernameTaken()]],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(20)]]\n    }, { validators: MatchingValidator.matchingValidator('password', 'confirmPassword') }); \n  }\n\n  /**\n   * Submits the form and emits the form data as an `RegisterDto` if the form is valid.\n   * @returns {void} This method does not return a value.\n  */\n  onSubmit(): void {\n    this.isSubmitted = true;\n\n    if (this.registerForm.valid) {\n      const newRegisterDto: RegisterDto = {\n        ...this.registerForm.value\n      };\n      this.formSubmit.emit(newRegisterDto);\n      this.resetForm();\n    }\n  }\n\n  /**\n   * Resets the form and clears the submission state.\n   * @returns {void} This method does not return a value. \n  */\n  resetForm(): void {\n    this.isSubmitted = false;\n    this.registerForm.reset();\n  }\n\n  /**\n   * Checks whether a form control has a specific error or is invalid.\n   * \n   * @param {string} controlName - The name of the form control.\n   * @param {string} [errorType] - The specific error type to check for.\n   * @returns {boolean} - Returns true if the control is invalid and the error matches, or if no specific error type is provided.\n  */\n  hasError(controlName: string, errorType?: string): boolean {\n    const control = this.registerForm.get(controlName);\n    if (!control) {\n      return false;\n    }\n    return this.isSubmitted && control.invalid && (errorType ? control.hasError(errorType) : true);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n           Username\n        : Minimum length of 4 characters, maximum of 20 characters.\n      \n      \n        \n           Password\n        : Minimum length of 8 characters, maximum of 20 characters..\n      \n    \n  \n  Fields marked with * are required.\n  \n    Username*\n    \n      \n        \n          \n        \n      \n      \n    \n    \n      Username is required!\n    \n    \n      Username length can't be less than 4 characters.\n    \n    \n      Username length can't be more than 20 characters.\n    \n    \n      Username is taken.\n    \n  \n\n  \n    Password*\n    \n      \n        \n          \n        \n      \n      \n    \n    \n      Password is required!\n    \n    \n      Password length can't be less than 8 characters.\n    \n    \n      Password length can't be more than 20 characters.\n    \n  \n\n  \n    Confirm Password*\n    \n      \n        \n          \n        \n      \n      \n    \n    \n      Password is required!\n    \n    \n      Passwords do not match.\n    \n  \n  Confirm\n  Cancel\n\n\n    \n\n    \n                \n                    ./register-form.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Username        : Minimum length of 4 characters, maximum of 20 characters.                               Password        : Minimum length of 8 characters, maximum of 20 characters..              Fields marked with * are required.      Username*                                                              Username is required!              Username length can\\'t be less than 4 characters.              Username length can\\'t be more than 20 characters.              Username is taken.            Password*                                                              Password is required!              Password length can\\'t be less than 8 characters.              Password length can\\'t be more than 20 characters.            Confirm Password*                                                              Password is required!              Passwords do not match.        Confirm  Cancel'\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterService.html":{"url":"injectables/RegisterService.html","title":"injectable - RegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/register.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing registers, providing methods to add and verify register data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                registerApi\n                            \n                            \n                                    Private\n                                userApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addRegister\n                            \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                    Private\n                                registerUrl\n                            \n                            \n                                    Private\n                                userUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, xmlSerializer: XmlSerializerService, errorHandler: ErrorHandlingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/register.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        xmlSerializer\n                                                  \n                                                        \n                                                                        XmlSerializerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRegister(newRegisterDto: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/register.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Adds a new register to the system.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newRegisterDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object for the new register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable containing the added register data.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/register.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Generates HTTP headers for the requests.\n\n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                \nThe headers with content type and accept type set to XML.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerUrl(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/register.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Constructs the URL for register-related API endpoints.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe specific API endpoint to append to the base URL.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nThe complete URL for the author API.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    userUrl(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/register.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Constructs the URL for user-related API endpoints.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe specific API endpoint to append to the base URL.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nThe complete URL for the user API.\n\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'register'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/register.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/register.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpErrorResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { Observable, map, catchError, of, firstValueFrom } from \"rxjs\";\nimport { environment } from \"../../../environments/environment.development\";\nimport { ErrorHandlingService } from \"../utilities/error-handling.service\";\nimport { XmlSerializerService } from \"../utilities/xml-serializer.service\";\nimport { RegisterDto } from \"../../shared/models/registerDto.model\";\n\n/**\n * Service for managing registers, providing methods to add and verify register data.\n*/\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RegisterService {\n  private registerApi = 'register';\n  private userApi = 'user';\n\n  constructor(\n    private http: HttpClient,\n    private xmlSerializer: XmlSerializerService,\n    private errorHandler: ErrorHandlingService,\n  ) { }\n\n  /**\n   * Generates HTTP headers for the requests.\n   *\n   * @private\n   * @returns {HttpHeaders} - The headers with content type and accept type set to XML.\n  */\n  private getHeaders(): HttpHeaders {\n    return new HttpHeaders({\n      'Content-Type': 'application/xml',\n      Accept: 'application/xml',\n    });\n  }\n\n  /**\n   * Constructs the URL for register-related API endpoints.\n   *\n   * @private\n   * @param {string} endpoint - The specific API endpoint to append to the base URL.\n   * @returns {string} - The complete URL for the author API.\n  */\n  private registerUrl(endpoint: string): string {\n    return `${environment.apiBaseUrl}/${this.registerApi}/${endpoint}`;\n  }\n\n  /**\n   * Constructs the URL for user-related API endpoints.\n   *\n   * @private\n   * @param {string} endpoint - The specific API endpoint to append to the base URL.\n   * @returns {string} - The complete URL for the user API.\n  */\n  private userUrl(endpoint: string): string {\n    return `${environment.apiBaseUrl}/${this.userApi}/${endpoint}`;\n  }\n\n  /**\n   * Adds a new register to the system.\n   *\n   * @param {RegisterDto} newRegisterDto - The data transfer object for the new register.\n   * @returns {Observable} - An observable containing the added register data.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public addRegister(newRegisterDto: RegisterDto): Observable {\n    const url = this.registerUrl('');\n\n    return this.http.post(url, this.xmlSerializer.serialize(newRegisterDto, 'RegisterDto'), { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        map(responseXml => { return this.xmlSerializer.deserialize(responseXml) }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'adding Register'))\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SyllableValidator.html":{"url":"classes/SyllableValidator.html","title":"class - SyllableValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SyllableValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/utilities/syllable-validator.ts\n        \n\n\n            \n                Description\n            \n            \n                A utility class for validating syllable counts in lines of text and words.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                countSyllables\n                            \n                            \n                                    Static\n                                countSyllablesInWord\n                            \n                            \n                                    Static\n                                syllableCountValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        countSyllables\n                        \n                    \n                \n            \n            \n                \n                        \n                    countSyllables(line: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/utilities/syllable-validator.ts:14\n                        \n                    \n\n\n            \n                \n                        Counts the number of syllables in a given line of text.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                line\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe line of text for which to count the syllables.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The total number of syllables in the line.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        countSyllablesInWord\n                        \n                    \n                \n            \n            \n                \n                        \n                    countSyllablesInWord(word: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/utilities/syllable-validator.ts:35\n                        \n                    \n\n\n            \n                \n                        Counts the number of syllables in a given word.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                word\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe word for which to count the syllables.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The number of syllables in the word.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        syllableCountValidator\n                        \n                    \n                \n            \n            \n                \n                        \n                    syllableCountValidator(expectedCount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/utilities/syllable-validator.ts:60\n                        \n                    \n\n\n            \n                \n                        Creates a validator function to check if the number of syllables in a form control's value matches the expected count.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expectedCount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe expected syllable count.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     (control: AbstractControl) => any\n\n                        \n                            \n                                A validation function that returns null if the syllable count matches the expected count; otherwise, it returns an object with validation error details.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidationErrors } from '@angular/forms';\n\n/**\n * A utility class for validating syllable counts in lines of text and words.\n*/\nexport class SyllableValidator {\n\n  /**\n   * Counts the number of syllables in a given line of text.\n   * \n   * @param {string} line - The line of text for which to count the syllables.\n   * @returns {number} The total number of syllables in the line.\n  */\n  static countSyllables(line: string): number {\n    if (!line) return 0;\n\n    line = line.toLowerCase().replace(/[.,!?]/g, '');\n\n    const words = line.split(/\\s+/);\n    let syllableCount = 0;\n\n    words.forEach(word => {\n      syllableCount += SyllableValidator.countSyllablesInWord(word);\n    });\n\n    return syllableCount;\n  }\n\n  /**\n   * Counts the number of syllables in a given word.\n   * \n   * @param {string} word - The word for which to count the syllables.\n   * @returns {number} The number of syllables in the word.\n  */\n  static countSyllablesInWord(word: string): number {\n    if (!word) return 0;\n\n    word = word.toLowerCase();\n\n    if (word.endsWith('e') && !/le$/.test(word)) {\n      word = word.slice(0, -1);\n    }\n\n    const matches = word.match(/[aeiouy]+/g);\n    let count = matches ? matches.length : 0;\n\n    if (word.endsWith('le') && word.length > 2 && !/[aeiou]le$/.test(word)) {\n      count++;\n    }\n\n    return Math.max(1, count);\n  }\n\n  /**\n   * Creates a validator function to check if the number of syllables in a form control's value matches the expected count.\n   * \n   * @param {number} expectedCount - The expected syllable count.\n   * @returns {(control: AbstractControl) => ValidationErrors | null} A validation function that returns null if the syllable count matches the expected count; otherwise, it returns an object with validation error details.\n  */\n  static syllableCountValidator(expectedCount: number) {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const value = control.value;\n      const syllables = SyllableValidator.countSyllables(value);\n      return syllables === expectedCount ? null : { syllablecountvalidator: { required: expectedCount, actual: syllables } };\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UnAuthenticatedGuard.html":{"url":"guards/UnAuthenticatedGuard.html","title":"guard - UnAuthenticatedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UnAuthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/un-authenticated.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard that prevents authenticated users from accessing certain routes.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/un-authenticated.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/un-authenticated.guard.ts:23\n                        \n                    \n\n\n            \n                \n                        Determines if the route can be activated based on the user's authentication status.\nIf the user is authenticated, they will be redirected, and access will be blocked.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                False if the user is authenticated; otherwise, true.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n/**\n * Guard that prevents authenticated users from accessing certain routes.\n*/\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnAuthenticatedGuard implements CanActivate {\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) { }\n\n  /**\n   * Determines if the route can be activated based on the user's authentication status.\n   * If the user is authenticated, they will be redirected, and access will be blocked.\n   *\n   * @returns {boolean} False if the user is authenticated; otherwise, true.\n   */\n  canActivate(): boolean {\n    if (this.authService.isAuthenticated()) {\n      this.router.navigate(['/']);\n      return false;\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateAuthorComponent.html":{"url":"components/UpdateAuthorComponent.html","title":"component - UpdateAuthorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateAuthorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/authors/update-author/update-author.component.ts\n\n\n\n    \n        Description\n    \n    \n        A component for updating an author.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-author\n            \n\n\n\n            \n                styleUrls\n                ./update-author.component.css\n            \n\n\n\n            \n                templateUrl\n                ./update-author.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authorDto\n                            \n                            \n                                authorIdToUpdate\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultAuthorId\n                            \n                            \n                                errorMessages\n                            \n                            \n                                loadingStates\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearMessages\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                isNotAuthorOne\n                            \n                            \n                                loadAuthorById\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateAuthor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authorService: AuthorService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/authors/update-author/update-author.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorService\n                                                  \n                                                        \n                                                                        AuthorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clearMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/update-author/update-author.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Clears any error messages related to add loading.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any, type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/update-author/update-author.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Handles errors for specific types of operations (e.g., update loading) and updates loading states.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response or message.\n\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe type of operation encountering the error.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotAuthorOne\n                        \n                    \n                \n            \n            \n                \nisNotAuthorOne(authorId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/update-author/update-author.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Checks if the provided author ID is not equal to the default Author ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the author to check.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the author ID is equal to the default Author ID, otherwise returns false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadAuthorById\n                        \n                    \n                \n            \n            \n                \nloadAuthorById(authorId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/update-author/update-author.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Loads the specific author by its ID and assigns it to the component's authorDto.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the author to load.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/update-author/update-author.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/update-author/update-author.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAuthor\n                        \n                    \n                \n            \n            \n                \nupdateAuthor(updatedAuthor: AuthorDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/update-author/update-author.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Updates an existing author and navigates to the author view page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedAuthor\n                                            \n                                                            AuthorDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing the updated author details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authorDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorDto\n\n                    \n                \n                \n                    \n                        Default value : { id: 0, name: '', bio: '' }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/update-author/update-author.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authorIdToUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/update-author/update-author.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultAuthorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/update-author/update-author.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    update: null,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/update-author/update-author.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    update: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/update-author/update-author.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/update-author/update-author.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { finalize, Subject, takeUntil } from \"rxjs\";\nimport { OnInit } from \"@angular/core\";\nimport { AuthorService } from \"../../../core/services/author.service\";\nimport { AuthorDto } from \"../../../shared/models/authorDto.model\";\n\n/**\n * A component for updating an author.\n*/\n@Component({\n  selector: 'app-update-author',\n  templateUrl: './update-author.component.html',\n  styleUrls: ['./update-author.component.css']\n})\nexport class UpdateAuthorComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n  private readonly defaultAuthorId = 1;\n\n  authorDto: AuthorDto = { id: 0, name: '', bio: '' };\n  authorIdToUpdate: number | null = null;\n\n  errorMessages: { update: string | null } = {\n    update: null,\n  };\n\n  loadingStates = {\n    update: false,\n  };\n\n  constructor(\n    private authorService: AuthorService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  ngOnInit(): void {\n    this.loadingStates.update = true;\n    this.clearMessages();\n\n    this.authorIdToUpdate = +this.route.snapshot.paramMap.get('id')!;\n\n    if (this.authorIdToUpdate)\n      this.loadAuthorById(this.authorIdToUpdate);\n  }\n\n  /**\n   * Clears any error messages related to add loading.\n   * @returns {void} This method does not return a value.\n  */\n  private clearMessages(): void {\n    this.errorMessages = {\n      update: null,\n    };\n  }\n\n  /**\n   * Handles errors for specific types of operations (e.g., update loading) and updates loading states.\n   * \n   * @param {any} error - The error response or message.\n   * @param {'update'} type - The type of operation encountering the error.\n   * @returns {void} This method does not return a value.\n  */\n  private handleError(error: any, type: 'update'): void {\n    this.loadingStates[type] = false;\n    this.errorMessages[type] = error.message || 'An unknown error occurred, please try again later.';\n  }\n\n  /**\n   * Loads the specific author by its ID and assigns it to the component's `authorDto`.\n   * \n   * @param {number} authorId - The ID of the author to load.\n   * @returns {void} This method does not return a value.\n   * @throws Will call `handleError` with an error message on failure.\n  */\n  loadAuthorById(authorId: number): void {\n    this.loadingStates.update = true;\n\n    if (!this.isNotAuthorOne(authorId)) {\n      this.authorService.getAuthorById(authorId).pipe(\n        takeUntil(this.unsubscribe$),\n        finalize(() => {\n          this.loadingStates.update = false;\n        })\n      ).subscribe({\n        next: author => {\n          this.authorDto = author;\n        },\n        error: error => this.handleError(error, 'update')\n      });\n    }\n    this.loadingStates.update = false;\n  }\n\n  /**\n   * Updates an existing author and navigates to the author view page.\n   * \n   * @param {AuthorDto} updatedAuthor - The data transfer object containing the updated author details.\n   * @returns {void} This method does not return a value.\n   * @throws Will call `handleError` with an error message on failure.\n  */\n  updateAuthor(updatedAuthor: AuthorDto): void {\n    this.loadingStates.update = true;\n\n    if (!this.isNotAuthorOne(updatedAuthor.id)) {\n      this.authorService.updateAuthor(updatedAuthor.id, updatedAuthor).pipe(\n        takeUntil(this.unsubscribe$),\n        finalize(() => {\n          this.loadingStates.update = false;\n        })\n      ).subscribe({\n        next: () => {\n          this.router.navigate(['/view-author', updatedAuthor.id]);\n        },\n        error: error => this.handleError(error, 'update')\n      });\n    }\n    this.loadingStates.update = false;\n  }\n\n  /**\n   * Checks if the provided author ID is not equal to the default Author ID.\n   * \n   * @param {number} authorId - The ID of the author to check.\n   * @returns {boolean} - Returns `true` if the author ID is equal to the default Author ID, otherwise returns `false`.\n  */\n  isNotAuthorOne(authorId: number): boolean {\n    if (authorId == this.defaultAuthorId)\n      return true\n\n    return false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n            Update Author\n        \n        \n          {{ errorMessages.update }}\n        \n        \n          \n            \n              \n                 Name\n              : Minimum length of 3 characters, maximum of 50 characters.\n            \n            \n              \n                 Bio\n              : Minimum length of 4 characters, maximum of 300 characters. If left empty, it defaults to \"No Bio\".\n            \n          \n        \n        Fields marked with * are required.\n        \n          \n            \n              \n                Loading...\n              \n            \n          \n\n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./update-author.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Update Author                          {{ errorMessages.update }}                                                                     Name              : Minimum length of 3 characters, maximum of 50 characters.                                                       Bio              : Minimum length of 4 characters, maximum of 300 characters. If left empty, it defaults to \"No Bio\".                                      Fields marked with * are required.                                                            Loading...                                                                                        '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'UpdateAuthorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateAuthorFormComponent.html":{"url":"components/UpdateAuthorFormComponent.html","title":"component - UpdateAuthorFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateAuthorFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/authors/update-author/update-author-form/update-author-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        A component for updating an author through a form.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-author-form\n            \n\n\n\n            \n                styleUrls\n                ./update-author-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./update-author-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                defaultBio\n                            \n                            \n                                initialFormValues\n                            \n                            \n                                isSubmitted\n                            \n                            \n                                updateAuthorForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changesMade\n                            \n                            \n                                hasError\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                patchForm\n                            \n                            \n                                resetForm\n                            \n                            \n                                    Private\n                                storeInitialFormValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                authorDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                formSubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/authors/update-author/update-author-form/update-author-form.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        authorDto\n                    \n                \n                \n                    \n                        Type :         AuthorDto\n\n                    \n                \n                \n                    \n                        Default value : { id: 0, name: '', bio: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/authors/update-author/update-author-form/update-author-form.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        formSubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/authors/update-author/update-author-form/update-author-form.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changesMade\n                        \n                    \n                \n            \n            \n                \nchangesMade()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/update-author/update-author-form/update-author-form.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Checks if changes were made to the author form compared to the initial values.\nThis method compares the current values of the name and bio fields\nwith the initial values stored on form initialization.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Returns true if changes were made, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(controlName: string, errorType?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/update-author/update-author-form/update-author-form.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Checks whether a form control has a specific error or is invalid.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the form control.\n\n\n                                            \n                                        \n                                        \n                                                errorType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe specific error type to check for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the control is invalid and the error matches, or if no specific error type is provided.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/update-author/update-author-form/update-author-form.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/update-author/update-author-form/update-author-form.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/update-author/update-author-form/update-author-form.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Submits the form and emits the form data as an AuthorDto if the form is valid.\nIf the title is not provided, it defaults to 'Untitled'.\nVerifies that changes were made.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        patchForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/update-author/update-author-form/update-author-form.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Patches the form with the values from the AuthorDto object if it exists.\nThis method updates the form controls with the author's original content and stores the initial values.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/update-author/update-author-form/update-author-form.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Resets the form and clears the submission state.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storeInitialFormValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeInitialFormValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/authors/update-author/update-author-form/update-author-form.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Stores the initial values of the author update form fields.\nThis method captures the initial name and bio for comparison later.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultBio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"No Bio.\"\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/update-author/update-author-form/update-author-form.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialFormValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/update-author/update-author-form/update-author-form.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/update-author/update-author-form/update-author-form.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAuthorForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/authors/update-author/update-author-form/update-author-form.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter, Input, OnChanges } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthorDto } from '../../../../shared/models/authorDto.model';\nimport { OnInit } from '@angular/core';\n\n/**\n * A component for updating an author through a form.\n*/\n@Component({\n  selector: 'app-update-author-form',\n  templateUrl: './update-author-form.component.html',\n  styleUrls: ['./update-author-form.component.css']\n})\nexport class UpdateAuthorFormComponent implements OnInit, OnChanges {\n  private readonly defaultBio = \"No Bio.\"\n  initialFormValues: any = {};\n\n  @Input() authorDto: AuthorDto = { id: 0, name: '', bio: '' };\n  @Output() formSubmit = new EventEmitter();\n  updateAuthorForm: FormGroup;\n  isSubmitted = false;\n\n  constructor(private fb: FormBuilder) {\n    this.updateAuthorForm = this.fb.group({\n      id: [null],\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n      bio: ['', [Validators.minLength(4), Validators.maxLength(300)]]\n    });\n  }\n\n  ngOnInit(): void {\n    this.patchForm();\n  }\n\n  ngOnChanges(): void {\n    this.patchForm();\n  }\n\n  /**\n * Stores the initial values of the author update form fields.\n * This method captures the initial name and bio for comparison later.\n * @returns {void} This method does not return a value.\n*/\n  private storeInitialFormValues(): void {\n    this.initialFormValues = {\n      name: this.updateAuthorForm.get('name')?.value,\n      bio: this.updateAuthorForm.get('bio')?.value,\n    };\n  }\n\n  /**\n   * Checks if changes were made to the author form compared to the initial values.\n   * This method compares the current values of the name and bio fields\n   * with the initial values stored on form initialization.\n   * @returns {boolean} Returns true if changes were made, otherwise false.\n  */\n  changesMade(): boolean {\n    const currentFormValues = {\n      name: this.updateAuthorForm.get('name')?.value,\n      bio: this.updateAuthorForm.get('bio')?.value,\n    };\n\n    return JSON.stringify(this.initialFormValues) !== JSON.stringify(currentFormValues);\n  }\n\n  /**\n   * Patches the form with the values from the `AuthorDto` object if it exists.\n   * This method updates the form controls with the author's original content and stores the initial values.\n   * @returns {void} This method does not return a value.\n  */\n  private patchForm(): void {\n    if (this.authorDto) {\n      this.updateAuthorForm.patchValue({\n        id: this.authorDto.id,\n        name: this.authorDto.name,\n        bio: this.authorDto.bio\n      });\n    }\n    this.storeInitialFormValues();\n  }\n\n  /**\n   * Submits the form and emits the form data as an `AuthorDto` if the form is valid.\n   * If the title is not provided, it defaults to 'Untitled'.\n   * Verifies that changes were made.\n   * @returns {void} This method does not return a value.\n  */\n  onSubmit(): void {\n    this.isSubmitted = true;\n\n    if (this.updateAuthorForm.valid && this.changesMade()) {\n      const authorDto: AuthorDto = {\n        ...this.updateAuthorForm.value,\n        bio: this.updateAuthorForm.value.bio || this.defaultBio\n      };\n\n      this.formSubmit.emit(authorDto);\n      this.resetForm();\n    }\n  }\n\n  /**\n   * Resets the form and clears the submission state.\n   * @returns {void} This method does not return a value.\n  */\n  resetForm(): void {\n    this.isSubmitted = false;\n    this.updateAuthorForm.reset();\n  }\n\n  /**\n   * Checks whether a form control has a specific error or is invalid.\n   * \n   * @param {string} controlName - The name of the form control.\n   * @param {string} [errorType] - The specific error type to check for.\n   * @returns {boolean} - Returns true if the control is invalid and the error matches, or if no specific error type is provided.\n  */\n  hasError(controlName: string, errorType?: string): boolean {\n    const control = this.updateAuthorForm.get(controlName);\n    if (!control) {\n      return false;\n    }\n    return this.isSubmitted && control.invalid && (errorType ? control.hasError(errorType) : true);\n  }\n}\n\n    \n\n    \n        \n\n  \n    Name*\n    \n      \n        \n          \n        \n      \n      \n    \n    \n      Name is required!\n    \n    \n      Name length can't be less than 2.\n    \n    \n      Name length can't be more than 50.\n    \n  \n\n  \n    Bio\n    \n      \n        \n          \n        \n      \n      \n    \n\n    \n      Bio length can't be less than 4, if not left empty.\n    \n    \n      Bio length can't be more than 300.\n    \n  \n\n  \n    Confirm\n  \n  Cancel\n\n\n    \n\n    \n                \n                    ./update-author-form.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Name*                                                              Name is required!              Name length can\\'t be less than 2.              Name length can\\'t be more than 50.            Bio                                                              Bio length can\\'t be less than 4, if not left empty.              Bio length can\\'t be more than 300.            Confirm    Cancel'\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'UpdateAuthorFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateAuthorHaikuComponent.html":{"url":"components/UpdateAuthorHaikuComponent.html","title":"component - UpdateAuthorHaikuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateAuthorHaikuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/author-haikus/update-author-haiku/update-author-haiku.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-authorHaiku\n            \n\n\n\n            \n                styleUrls\n                ./update-author-haiku.component.css\n            \n\n\n\n            \n                templateUrl\n                ./update-author-haiku.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authorHaikuDto\n                            \n                            \n                                errorMessages\n                            \n                            \n                                loadingStates\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearMessages\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                loadAuthorHaikuById\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateAuthorHaiku\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authorHaikuService: AuthorHaikuService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/author-haikus/update-author-haiku/update-author-haiku.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorHaikuService\n                                                  \n                                                        \n                                                                        AuthorHaikuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clearMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/update-author-haiku/update-author-haiku.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Clears any error messages related to add loading.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any, type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/update-author-haiku/update-author-haiku.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Handles errors for specific types of operations (e.g., update loading) and updates loading states.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response or message.\n\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe type of operation encountering the error.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadAuthorHaikuById\n                        \n                    \n                \n            \n            \n                \nloadAuthorHaikuById(authorHaikuId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/update-author-haiku/update-author-haiku.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Loads the haiku for a specific author by its ID and assigns it to the component's authorHaikuDto.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authorHaikuId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the author's haiku to load.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/update-author-haiku/update-author-haiku.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/update-author-haiku/update-author-haiku.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAuthorHaiku\n                        \n                    \n                \n            \n            \n                \nupdateAuthorHaiku(updatedAuthorHaiku: AuthorHaikuDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/author-haikus/update-author-haiku/update-author-haiku.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Updates an existing author's haiku and navigates to the haiku view page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedAuthorHaiku\n                                            \n                                                            AuthorHaikuDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing the updated haiku details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authorHaikuDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorHaikuDto\n\n                    \n                \n                \n                    \n                        Default value : { id: 0, title: '', lineOne: '', lineTwo: '', lineThree: '', authorId: 0 }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/update-author-haiku/update-author-haiku.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    update: null,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/update-author-haiku/update-author-haiku.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    update: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/update-author-haiku/update-author-haiku.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/author-haikus/update-author-haiku/update-author-haiku.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { Subject, takeUntil, finalize } from \"rxjs\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { AuthorHaikuService } from \"../../../core/services/author-haiku.service\";\nimport { AuthorService } from \"../../../core/services/author.service\";\nimport { AuthorHaikuDto } from \"../../../shared/models/authorHaikuDto.model\";\n\n@Component({\n  selector: 'app-update-authorHaiku',\n  templateUrl: './update-author-haiku.component.html',\n  styleUrls: ['./update-author-haiku.component.css']\n})\nexport class UpdateAuthorHaikuComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  authorHaikuDto: AuthorHaikuDto = { id: 0, title: '', lineOne: '', lineTwo: '', lineThree: '', authorId: 0 };\n\n  errorMessages: { update: string | null } = {\n    update: null,\n  };\n\n  loadingStates = {\n    update: false,\n  };\n\n  constructor(\n    private authorHaikuService: AuthorHaikuService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  ngOnInit(): void {\n    this.loadingStates.update = true;\n    this.clearMessages();\n\n    const authorHaikuIdToUpdate = +this.route.snapshot.paramMap.get('id')!;\n    if (authorHaikuIdToUpdate)\n      this.loadAuthorHaikuById(authorHaikuIdToUpdate);\n  }\n\n  /**\n   * Clears any error messages related to add loading.\n   * @returns {void} This method does not return a value.\n  */\n  private clearMessages(): void {\n    this.errorMessages = {\n      update: null,\n    };\n  }\n\n  /**\n   * Handles errors for specific types of operations (e.g., update loading) and updates loading states.\n   * \n   * @param {any} error - The error response or message.\n   * @param {'update'} type - The type of operation encountering the error.\n   * @returns {void} This method does not return a value.\n  */\n  private handleError(error: any, type: 'update'): void {\n    this.loadingStates[type] = false;\n    this.errorMessages[type] = error.message || 'An unknown error occurred, please try again later.';\n  }\n\n  /**\n   * Loads the haiku for a specific author by its ID and assigns it to the component's `authorHaikuDto`.\n   * \n   * @param {number} authorHaikuId - The ID of the author's haiku to load.\n   * @returns {void} This method does not return a value.\n   * @throws Will call `handleError` with an error message on failure.\n  */\n  loadAuthorHaikuById(authorHaikuId: number): void {\n    this.loadingStates.update = true;\n\n    this.authorHaikuService.getAuthorHaikuById(authorHaikuId).pipe(\n      takeUntil(this.unsubscribe$),\n      finalize(() => {\n        this.loadingStates.update = false;\n      })\n    ).subscribe({\n      next: authorHaiku => {\n        this.authorHaikuDto = authorHaiku;\n      },\n      error: error => this.handleError(error, 'update')\n    });\n  }\n\n  /**\n   * Updates an existing author's haiku and navigates to the haiku view page.\n   * \n   * @param {AuthorHaikuDto} updatedAuthorHaiku - The data transfer object containing the updated haiku details.\n   * @returns {void} This method does not return a value.\n   * @throws Will call `handleError` with an error message on failure.\n  */\n  updateAuthorHaiku(updatedAuthorHaiku: AuthorHaikuDto): void {\n    this.loadingStates.update = true;\n\n    this.authorHaikuService.updateAuthorHaiku(updatedAuthorHaiku.id, updatedAuthorHaiku).pipe(\n      takeUntil(this.unsubscribe$),\n      finalize(() => {\n        this.loadingStates.update = false;\n      })\n    ).subscribe({\n      next: () => {\n        this.router.navigate(['/view-author-haiku', updatedAuthorHaiku.id]);\n      },\n      error: error => this.handleError(error, 'update')\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n           Update Author Haiku\n        \n        \n          {{ errorMessages.update }}\n        \n        \n          \n            \n              \n                 Title\n              : Minimum length of 2 characters, maximum of 50 characters. If left empty, it defaults to \"Untitled\".\n            \n            \n              \n                 Line One\n              : Total length of 5 syllables.\n            \n            \n              \n                 Line Two\n              : Total length of 7 syllables.\n            \n            \n              \n                 Line Three\n              : Total length of 5 syllables.\n            \n          \n          Fields marked with * are required.\n        \n        \n          \n            \n              Loading...\n            \n          \n        \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./update-author-haiku.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Update Author Haiku                          {{ errorMessages.update }}                                                                     Title              : Minimum length of 2 characters, maximum of 50 characters. If left empty, it defaults to \"Untitled\".                                                       Line One              : Total length of 5 syllables.                                                       Line Two              : Total length of 7 syllables.                                                       Line Three              : Total length of 5 syllables.                                Fields marked with * are required.                                                    Loading...                                                                                          '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'UpdateAuthorHaikuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateProfileComponent.html":{"url":"components/UpdateProfileComponent.html","title":"component - UpdateProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/update-profile/update-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        A component for updating a user profile.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-profile\n            \n\n\n\n            \n                styleUrls\n                ./update-profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./update-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                loadingStates\n                            \n                            \n                                profileDto\n                            \n                            \n                                successMessages\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                            \n                                userDto\n                            \n                            \n                                userId\n                            \n                            \n                                userIdToDelete\n                            \n                            \n                                userUpdateDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearMessages\n                            \n                            \n                                deleteUser\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                loadProfileByUserId\n                            \n                            \n                                loadUserAndProfile\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openUserModal\n                            \n                            \n                                updateProfile\n                            \n                            \n                                updateUser\n                            \n                            \n                                viewLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(profileService: ProfileService, userService: UserService, authService: AuthenticationService, logoutService: LogoutService, navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/update-profile/update-profile.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logoutService\n                                                  \n                                                        \n                                                                        LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clearMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Clears any error messages related to add loading.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile.component.ts:199\n                        \n                    \n\n\n            \n                \n                        Deletes a user based on the user ID stored in userIdToDelete.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any, type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Handles errors for specific types of operations (e.g., update loading) and updates loading states.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response or message.\n\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe type of operation encountering the error.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadProfileByUserId\n                        \n                    \n                \n            \n            \n                \nloadProfileByUserId(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Loads the specific profile by the user ID and assigns it to the component's profileDto.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the profile to load.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserAndProfile\n                        \n                    \n                \n            \n            \n                \nloadUserAndProfile(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Loads the specific user by the ID and assigns it to the component's userUpdateDto, then directs to loadProfileByUserId method.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the profile to load.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserModal\n                        \n                    \n                \n            \n            \n                \nopenUserModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile.component.ts:230\n                        \n                    \n\n\n            \n                \n                        Opens a modal for user deletion confirmation by setting the user ID to delete.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \nupdateProfile(updatedProfile: ProfileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile.component.ts:173\n                        \n                    \n\n\n            \n                \n                        Updates an existing profile and then reloads the Profile then directs to loadUserAndProfile method..\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedProfile\n                                            \n                                                            ProfileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing the updated profile details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(updatedUser: UserUpdateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Updates an existing user and the reloads the User then directs to loadUserAndProfile method..\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            UserUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing the updated user details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewLogin\n                        \n                    \n                \n            \n            \n                \nviewLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile.component.ts:221\n                        \n                    \n\n\n            \n                \n                        Navigates the user to the login view.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    update: null,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/update-profile/update-profile.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    update: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/update-profile/update-profile.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileDto\n\n                    \n                \n                \n                    \n                        Default value : { id: 0, bio: '', userId: 0, imageId: 0 }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/update-profile/update-profile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    update: \"\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/update-profile/update-profile.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/update-profile/update-profile.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                \n                    \n                        Default value : { id: 0, username: '', password: '', roleId: 0 }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/update-profile/update-profile.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/update-profile/update-profile.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userIdToDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/update-profile/update-profile.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userUpdateDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserUpdateDto\n\n                    \n                \n                \n                    \n                        Default value : { id: 0, username: '', password: '', confirmPassword: '' }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/update-profile/update-profile.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { finalize, Subject, takeUntil } from \"rxjs\";\nimport { AuthenticationService } from \"../../../core/services/authentication.service\";\nimport { NavigationService } from \"../../../core/services/navigation.service\";\nimport { ProfileService } from \"../../../core/services/profile.service\";\nimport { UserService } from \"../../../core/services/user.service\";\nimport { ProfileDto } from \"../../../shared/models/profileDto.model\";\nimport { UserDto } from \"../../../shared/models/userDto.model\";\nimport { UserUpdateDto } from \"../../../shared/models/userUpdateDto.model\";\nimport { LogoutService } from \"../../../core/services/logout.service\";\n\n/**\n * A component for updating a user profile.\n*/\n@Component({\n  selector: 'app-update-profile',\n  templateUrl: './update-profile.component.html',\n  styleUrls: ['./update-profile.component.css']\n})\nexport class UpdateProfileComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n\n  userDto: UserDto = { id: 0, username: '', password: '', roleId: 0 };\n  profileDto: ProfileDto = { id: 0, bio: '', userId: 0, imageId: 0 };\n  userUpdateDto: UserUpdateDto = { id: 0, username: '', password: '', confirmPassword: '' };\n  userId: number | null = null;\n  userIdToDelete: number | null = null;\n\n  successMessages = {\n    update: \"\"\n  };\n\n  errorMessages: { update: string | null } = {\n    update: null,\n  };\n\n  loadingStates = {\n    update: false,\n  };\n\n  constructor(\n    private profileService: ProfileService,\n    private userService: UserService,\n    private authService: AuthenticationService,\n    private logoutService: LogoutService,\n    private navigationService: NavigationService,\n  ) { }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  ngOnInit(): void {\n    this.clearMessages();\n\n    this.userId = this.authService.getUserId();\n\n    if (this.userId) {\n      this.loadUserAndProfile(this.userId);\n    }\n  }\n\n  /**\n   * Clears any error messages related to add loading.\n   * @returns {void} This method does not return a value.\n  */\n  private clearMessages(): void {\n    this.errorMessages = {\n      update: null,\n    };\n    this.successMessages = {\n      update: \"\"\n    };\n  }\n\n  /**\n   * Handles errors for specific types of operations (e.g., update loading) and updates loading states.\n   * \n   * @param {any} error - The error response or message.\n   * @param {'update'} type - The type of operation encountering the error.\n   * @returns {void} This method does not return a value.\n  */\n  private handleError(error: any, type: 'update'): void {\n    this.loadingStates[type] = false;\n    this.errorMessages[type] = error.message || 'An unknown error occurred, please try again later.';\n    this.successMessages[type] = \"\";\n  }\n\n  /**\n * Loads the specific user by the ID and assigns it to the component's `userUpdateDto`, then directs to `loadProfileByUserId` method.\n * \n * @param {number} userId - The ID of the profile to load.\n * @returns {void} This method does not return a value.\n*/\n  loadUserAndProfile(userId: number): void {\n    this.loadingStates.update = true;\n\n    this.userService.getUserById(userId).pipe(\n      takeUntil(this.unsubscribe$),\n      finalize(() => {\n        this.loadingStates.update = false;\n      })\n    ).subscribe({\n      next: user => {\n        this.userUpdateDto.username = user.username;\n        this.userUpdateDto.password = user.password;\n        this.userDto.id = user.id;\n        this.userDto.roleId = user.roleId;\n        this.loadProfileByUserId(user.id)\n      },\n      error: error => this.handleError(error, 'update')\n    });\n  }\n\n  /**\n   * Loads the specific profile by the user ID and assigns it to the component's `profileDto`.\n   * \n   * @param {number} userId - The ID of the profile to load.\n   * @returns {void} This method does not return a value.\n  */\n  loadProfileByUserId(userId: number): void {\n    this.loadingStates.update = true;\n\n    this.profileService.getProfileByUserId(userId).pipe(\n      takeUntil(this.unsubscribe$),\n      finalize(() => {\n        this.loadingStates.update = false;\n      })\n    ).subscribe({\n      next: profile => {\n        this.profileDto = profile;\n      },\n      error: error => this.handleError(error, 'update')\n    });\n  }\n\n  /**\n   * Updates an existing user and the reloads the User then directs to `loadUserAndProfile` method..\n   * \n   * @param {UserUpdateDto} updatedUser - The data transfer object containing the updated user details.\n   * @returns {void} This method does not return a value.\n  */\n  updateUser(updatedUser: UserUpdateDto): void {\n    this.loadingStates.update = true;\n\n    this.userDto.username = updatedUser.username;\n    this.userDto.password = updatedUser.password;\n\n    this.userService.updateUser(this.userDto.id, this.userDto).pipe(\n      takeUntil(this.unsubscribe$),\n      finalize(() => {\n        this.loadingStates.update = false;\n      })\n    ).subscribe({\n      next: () => {\n        this.clearMessages();\n        this.successMessages.update = \"User updated successfully!\";\n        if (this.userId)\n          this.loadUserAndProfile(this.userId);\n      },\n      error: error => this.handleError(error, 'update')\n    });\n  }\n\n  /**\n   * Updates an existing profile and then reloads the Profile then directs to `loadUserAndProfile` method..\n   * \n   * @param {ProfileDto} updatedProfile - The data transfer object containing the updated profile details.\n   * @returns {void} This method does not return a value.\n  */\n  updateProfile(updatedProfile: ProfileDto): void {\n    this.loadingStates.update = true;\n\n    this.profileDto.bio = updatedProfile.bio;\n\n    this.profileService.updateProfile(this.profileDto.id, this.profileDto).pipe(\n      takeUntil(this.unsubscribe$),\n      finalize(() => {\n        this.loadingStates.update = false;\n      })\n    ).subscribe({\n      next: () => {\n        this.clearMessages();\n        this.successMessages.update = \"Profile updated successfully!\";\n        if (this.userId)\n          this.loadUserAndProfile(this.userId);\n      },\n      error: error => this.handleError(error, 'update')\n    });\n  }\n\n  /**\n   * Deletes a user based on the user ID stored in `userIdToDelete`.\n   * \n   * @returns {void} This method does not return a value.\n  */\n  deleteUser(): void {\n    if (this.userIdToDelete) {\n      this.loadingStates.update = true;\n      this.userService.deleteUser(this.userIdToDelete).pipe(\n        takeUntil(this.unsubscribe$),\n        finalize(() => this.loadingStates.update = false)\n      ).subscribe({\n        next: () =>\n        {\n          this.logoutService.logout();\n          this.viewLogin();\n        },\n        error: error => this.handleError(error, 'update')\n      });\n    }\n  }\n\n  /**\n   * Navigates the user to the login view.\n   * \n   * @returns {void} This method does not return a value.\n  */\n  viewLogin(): void {\n    this.navigationService.viewLogin();\n  }\n\n  /**\n   * Opens a modal for user deletion confirmation by setting the user ID to delete.\n   *\n   * @returns {void} This method does not return a value.\n  */\n  openUserModal(): void {\n    this.userIdToDelete = this.userId;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n           Settings\n        \n        \n          \n            {{ errorMessages.update }}\n            {{ successMessages.update }}\n          \n          \n            \n              \n                Loading...\n              \n            \n          \n        \n        \n          \n            \n              \n                \n                   Account Deletion\n                \n              \n            \n            Delete Account\n          \n          \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      \n         Delete User\n      \n      \n        \n          Are you sure you want to delete your Account?\n          All your Haikus will be lost.\n          This change is irreversible.\n        \n      \n      \n        Cancel\n        Confirm\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./update-profile.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Settings                                      {{ errorMessages.update }}            {{ successMessages.update }}                                                              Loading...                                                                                                                           Account Deletion                                                      Delete Account                                                                       Delete User                              Are you sure you want to delete your Account?          All your Haikus will be lost.          This change is irreversible.                            Cancel        Confirm            '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'UpdateProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateProfileFormComponent.html":{"url":"components/UpdateProfileFormComponent.html","title":"component - UpdateProfileFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateProfileFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        A component for updating a user profile through a form.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-profile-form\n            \n\n\n\n            \n                styleUrls\n                ./update-profile-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./update-profile-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUsername\n                            \n                            \n                                initialProfileFormValues\n                            \n                            \n                                initialUserFormValues\n                            \n                            \n                                isProfileSubmitted\n                            \n                            \n                                isUsernameChanged\n                            \n                            \n                                isUserSubmitted\n                            \n                            \n                                updateProfileForm\n                            \n                            \n                                updateUserForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hasProfileError\n                            \n                            \n                                hasUserError\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onProfileSubmit\n                            \n                            \n                                onUserSubmit\n                            \n                            \n                                    Private\n                                patchProfileForm\n                            \n                            \n                                    Private\n                                patchUserForm\n                            \n                            \n                                profileChangesMade\n                            \n                            \n                                resetForm\n                            \n                            \n                                    Private\n                                setupUsernameValidation\n                            \n                            \n                                    Private\n                                setUsernameChange\n                            \n                            \n                                    Private\n                                storeInitialProfileFormValues\n                            \n                            \n                                    Private\n                                storeInitialUserFormValues\n                            \n                            \n                                userChangesMade\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                profileDto\n                            \n                            \n                                userUpdateDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                formProfileSubmit\n                            \n                            \n                                formUserSubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, usernameValidator: UsernameValidator)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usernameValidator\n                                                  \n                                                        \n                                                                        UsernameValidator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        profileDto\n                    \n                \n                \n                    \n                        Type :         ProfileDto\n\n                    \n                \n                \n                    \n                        Default value : { id: 0, bio: '', userId: 0, imageId: 0}\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userUpdateDto\n                    \n                \n                \n                    \n                        Type :         UserUpdateDto\n\n                    \n                \n                \n                    \n                        Default value : { id: 0, username: '', password: '', confirmPassword: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        formProfileSubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formUserSubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hasProfileError\n                        \n                    \n                \n            \n            \n                \nhasProfileError(controlName: string, errorType?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:244\n                        \n                    \n\n\n            \n                \n                        Checks whether the Profile form control has a specific error or is invalid.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the form control.\n\n\n                                            \n                                        \n                                        \n                                                errorType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe specific error type to check for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the control is invalid and the error matches, or if no specific error type is provided.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasUserError\n                        \n                    \n                \n            \n            \n                \nhasUserError(controlName: string, errorType?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:229\n                        \n                    \n\n\n            \n                \n                        Checks whether the User form control has a specific error or is invalid.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the form control.\n\n\n                                            \n                                        \n                                        \n                                                errorType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe specific error type to check for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the control is invalid and the error matches, or if no specific error type is provided.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onProfileSubmit\n                        \n                    \n                \n            \n            \n                \nonProfileSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:197\n                        \n                    \n\n\n            \n                \n                        Submits the form and emits the form data as an ProfileDto if the form is valid.\nIf the bio is not provided, it defaults to 'No Bio'.\nVerifies that changes were made.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserSubmit\n                        \n                    \n                \n            \n            \n                \nonUserSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:180\n                        \n                    \n\n\n            \n                \n                        Submits the form and emits the form data as an UserUpdateDto if the form is valid.\nVerifies that changes were made.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        patchProfileForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchProfileForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:166\n                        \n                    \n\n\n            \n                \n                        Patches the form with the values from the ProfileDto object if it exists.\nThis method updates the form controls with the profile's original content and stores the initial values.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        patchUserForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUserForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:152\n                        \n                    \n\n\n            \n                \n                        Patches the form with the values from the UserUpdateDto object if it exists.\nThis method updates the form controls with the user's username and stores the initial values.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileChangesMade\n                        \n                    \n                \n            \n            \n                \nprofileChangesMade()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:105\n                        \n                    \n\n\n            \n                \n                        Checks if changes were made to the profile form compared to the initial values.\nThis method compares the current values of the bio fields\nwith the initial values stored on form initialization.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Returns true if changes were made, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:215\n                        \n                    \n\n\n            \n                \n                        Resets the form and clears the submission state.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupUsernameValidation\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupUsernameValidation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Sets up validation for the username field to check if it has changed from its\ninitial value in lowercase. The method debounces input to reduce validation calls.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setUsernameChange\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUsernameChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:138\n                        \n                    \n\n\n            \n                \n                        Checks if the patched username is the same as the current username\nand sets the isUsernameChanged flag accordingly.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storeInitialProfileFormValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeInitialProfileFormValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Stores the initial values of the profile update form fields.\nThis method captures the initial bio for comparison later.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storeInitialUserFormValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeInitialUserFormValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Stores the initial values of the user update form fields.\nThis method captures the initial username and password for comparison later.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userChangesMade\n                        \n                    \n                \n            \n            \n                \nuserChangesMade()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Checks if changes were made to the user form compared to the initial values.\nThis method compares the current values of the username and password fields\nwith the initial values stored on form initialization.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Returns true if changes were made, otherwise false.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUsername\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialProfileFormValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialUserFormValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProfileSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameChanged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUserSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter, Input, OnChanges, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatchingValidator } from '../../../../core/utilities/matching-validator';\nimport { UsernameValidator } from '../../../../core/utilities/username-validator';\nimport { ProfileDto } from '../../../../shared/models/profileDto.model';\nimport { UserUpdateDto } from '../../../../shared/models/userUpdateDto.model';\nimport { debounceTime } from 'rxjs';\n\n/**\n * A component for updating a user profile through a form.\n*/\n@Component({\n  selector: 'app-update-profile-form',\n  templateUrl: './update-profile-form.component.html',\n  styleUrls: ['./update-profile-form.component.css']\n})\nexport class UpdateProfileFormComponent implements OnInit, OnChanges {\n  @Input() userUpdateDto: UserUpdateDto = { id: 0, username: '', password: '', confirmPassword: '' };\n  @Input() profileDto: ProfileDto = { id: 0, bio: '', userId: 0, imageId: 0};\n  @Output() formUserSubmit = new EventEmitter();\n  @Output() formProfileSubmit = new EventEmitter();\n\n  initialUserFormValues: any = {};\n  initialProfileFormValues: any = {};\n\n  currentUsername = '';\n  updateUserForm: FormGroup;\n  updateProfileForm: FormGroup;\n  isUsernameChanged = false;\n  isUserSubmitted = false;\n  isProfileSubmitted = false;\n\n  constructor(private fb: FormBuilder, private usernameValidator: UsernameValidator) {\n    this.updateUserForm = this.fb.group({\n      id: [null],\n      username: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(20)], [this.usernameValidator.usernameTaken()]],\n      password: ['', [Validators.minLength(8), Validators.maxLength(20)]],\n      confirmPassword: ['', [Validators.minLength(8), Validators.maxLength(20)]]\n    }, { validators: MatchingValidator.matchingValidator('password', 'confirmPassword') }); \n    this.updateProfileForm = this.fb.group({\n      id: [null],\n      bio: ['', [Validators.minLength(4), Validators.maxLength(300)]],\n      imageUrl: [null],\n      userId: [null]\n    });\n  }\n\n  ngOnInit(): void {\n    this.currentUsername = this.userUpdateDto.username;\n    this.patchUserForm();\n    this.patchProfileForm();\n    this.setupUsernameValidation();\n  }\n\n  ngOnChanges(): void {\n    this.patchUserForm();\n    this.patchProfileForm();\n    this.setUsernameChange();\n  }\n\n  /**\n   * Stores the initial values of the user update form fields.\n   * This method captures the initial username and password for comparison later.\n   * @returns {void} This method does not return a value.\n  */\n  private storeInitialUserFormValues(): void {\n    this.initialUserFormValues = {\n      username: this.updateUserForm.get('username')?.value,\n      password: this.updateUserForm.get('password')?.value,\n    };\n  }\n\n  /**\n   * Stores the initial values of the profile update form fields.\n   * This method captures the initial bio for comparison later.\n   * @returns {void} This method does not return a value.\n  */\n  private storeInitialProfileFormValues(): void {\n    this.initialProfileFormValues = {\n      bio: this.updateProfileForm.get('bio')?.value,\n    };\n  }\n\n  /**\n   * Checks if changes were made to the user form compared to the initial values.\n   * This method compares the current values of the username and password fields\n   * with the initial values stored on form initialization.\n   * @returns {boolean} Returns true if changes were made, otherwise false.\n  */\n  userChangesMade(): boolean {\n    const currentUserFormValues = {\n      username: this.updateUserForm.get('username')?.value,\n      password: this.updateUserForm.get('password')?.value,\n    };\n\n    return JSON.stringify(this.initialUserFormValues) !== JSON.stringify(currentUserFormValues);\n  }\n\n  /**\n  * Checks if changes were made to the profile form compared to the initial values.\n  * This method compares the current values of the bio fields\n  * with the initial values stored on form initialization.\n  * @returns {boolean} Returns true if changes were made, otherwise false.\n  */\n  profileChangesMade(): boolean {\n    const currentProfileFormValues = {\n      bio: this.updateProfileForm.get('bio')?.value,\n    };\n\n    return JSON.stringify(this.initialProfileFormValues) !== JSON.stringify(currentProfileFormValues);\n  }\n\n  /**\n   * Sets up validation for the username field to check if it has changed from its\n   * initial value in lowercase. The method debounces input to reduce validation calls.\n   * @returns {void} This method does not return a value.\n  */\n  private setupUsernameValidation(): void {\n    this.updateUserForm.get('username')?.valueChanges\n      .pipe(debounceTime(300))\n      .subscribe(() => {\n        const currentUsernameLower = this.currentUsername.toLowerCase();\n        const updatedUsernameLower = this.updateUserForm.get('username')?.value.toLowerCase();\n\n        this.isUsernameChanged = updatedUsernameLower !== currentUsernameLower;\n\n        if (updatedUsernameLower === currentUsernameLower) {\n          this.updateUserForm.get('username')?.setErrors(null);\n        }\n      });\n  }\n\n  /**\n   * Checks if the patched username is the same as the current username\n   * and sets the `isUsernameChanged` flag accordingly.\n   * @returns {void} This method does not return a value.\n  */\n  private setUsernameChange(): void {\n    const patchedUsername = this.updateUserForm.get('username')?.value;\n    if (patchedUsername === this.currentUsername) {\n      this.isUsernameChanged = false;\n    } else {\n      this.isUsernameChanged = true;\n    }\n  }\n\n  /**\n   * Patches the form with the values from the `UserUpdateDto` object if it exists.\n   * This method updates the form controls with the user's username and stores the initial values.\n   * @returns {void} This method does not return a value.\n  */\n  private patchUserForm(): void {\n    if (this.userUpdateDto) {\n      this.updateUserForm.patchValue({\n        username: this.userUpdateDto.username,\n      });\n    }\n    this.storeInitialUserFormValues();\n  }\n\n  /**\n * Patches the form with the values from the `ProfileDto` object if it exists.\n * This method updates the form controls with the profile's original content and stores the initial values.\n * @returns {void} This method does not return a value.\n*/\n  private patchProfileForm(): void {\n    if (this.profileDto) {\n      this.updateProfileForm.patchValue({\n        bio: this.profileDto.bio,\n      });\n    }\n    this.storeInitialProfileFormValues();\n  }\n\n  /**\n * Submits the form and emits the form data as an `UserUpdateDto` if the form is valid.\n * Verifies that changes were made.\n * @returns {void} This method does not return a value.\n*/\n  onUserSubmit(): void {\n    this.isUserSubmitted = true;\n\n    if (this.updateUserForm.valid && this.userChangesMade()) {\n      const userUpdatedDto: UserUpdateDto = { ...this.updateUserForm.value };\n\n      this.formUserSubmit.emit(userUpdatedDto);\n      this.resetForm();\n    }\n  }\n\n  /**\n   * Submits the form and emits the form data as an `ProfileDto` if the form is valid.\n   * If the bio is not provided, it defaults to 'No Bio'.\n   * Verifies that changes were made.\n   * @returns {void} This method does not return a value.\n  */\n  onProfileSubmit(): void {\n    this.isProfileSubmitted = true;\n\n    if (this.updateProfileForm.valid && this.profileChangesMade()) {\n      const profileUpdatedDto: ProfileDto = {\n        ...this.updateUserForm.value,\n        bio: this.updateProfileForm.value.bio || 'No Bio'\n      };\n\n      this.formProfileSubmit.emit(profileUpdatedDto);\n      this.resetForm();\n    }\n  }\n\n  /**\n   * Resets the form and clears the submission state.\n   * @returns {void} This method does not return a value.\n  */\n  resetForm(): void {\n    this.isUserSubmitted = false;\n    this.isProfileSubmitted = false;\n    this.updateUserForm.reset();\n    this.updateProfileForm.reset();\n  }\n\n  /**\n   * Checks whether the User form control has a specific error or is invalid.\n   * \n   * @param {string} controlName - The name of the form control.\n   * @param {string} [errorType] - The specific error type to check for.\n   * @returns {boolean} - Returns true if the control is invalid and the error matches, or if no specific error type is provided.\n  */\n  hasUserError(controlName: string, errorType?: string): boolean {\n    const control = this.updateUserForm.get(controlName);\n    if (!control) {\n      return false;\n    }\n    return this.isUserSubmitted && control.invalid && (errorType ? control.hasError(errorType) : true);\n  }\n\n  /**\n   * Checks whether the Profile form control has a specific error or is invalid.\n   * \n   * @param {string} controlName - The name of the form control.\n   * @param {string} [errorType] - The specific error type to check for.\n   * @returns {boolean} - Returns true if the control is invalid and the error matches, or if no specific error type is provided.\n  */\n  hasProfileError(controlName: string, errorType?: string): boolean {\n    const control = this.updateProfileForm.get(controlName);\n    if (!control) {\n      return false;\n    }\n    return this.isProfileSubmitted && control.invalid && (errorType ? control.hasError(errorType) : true);\n  }\n}\n\n    \n\n    \n        \n   User\n\n\n  \n    \n      \n        \n           Username\n        : Minimum length of 4 characters, maximum of 20 characters.\n      \n      \n        \n           Password\n        : Minimum length of 8 characters, maximum of 20 characters..\n      \n    \n  \n\n  \n    \n      Username\n      \n        \n          \n            \n          \n        \n        \n      \n      \n        Username is required!\n      \n      \n        Username length can't be less than 4 characters.\n      \n      \n        Username length can't be more than 20 characters.\n      \n      \n        Username is taken.\n      \n    \n\n    \n      Password\n      \n        \n          \n            \n          \n        \n        \n      \n      \n        Password length can't be less than 8 characters.\n      \n      \n        Password length can't be more than 20 characters.\n      \n    \n\n    \n      Confirm Password\n      \n        \n          \n            \n          \n        \n        \n      \n      \n        Passwords do not match.\n      \n    \n    Confirm\n    Cancel\n  \n\n\n\n   Profile\n\n\n\n\n  \n    \n      \n        \n           Bio\n        : Minimum length of 4 characters, maximum of 300 characters. If left empty, it defaults to \"No Bio\".\n      \n    \n  \n\n  \n    \n      Bio\n      \n        \n          \n            \n          \n        \n        \n        \n      \n\n      \n        Bio length can't be less than 4, if not left empty.\n      \n      \n        Bio length can't be more than 300.\n      \n    \n    Confirm\n    Cancel\n  \n\n\n\n\n\n    \n\n    \n                \n                    ./update-profile-form.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   User                               Username        : Minimum length of 4 characters, maximum of 20 characters.                               Password        : Minimum length of 8 characters, maximum of 20 characters..                        Username                                                                                  Username is required!                    Username length can\\'t be less than 4 characters.                    Username length can\\'t be more than 20 characters.                    Username is taken.                    Password                                                                                  Password length can\\'t be less than 8 characters.                    Password length can\\'t be more than 20 characters.                    Confirm Password                                                                                  Passwords do not match.              Confirm    Cancel     Profile                               Bio        : Minimum length of 4 characters, maximum of 300 characters. If left empty, it defaults to \"No Bio\".                        Bio                                                                                          Bio length can\\'t be less than 4, if not left empty.                    Bio length can\\'t be more than 300.              Confirm    Cancel  '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'UpdateProfileFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateUserHaikuComponent.html":{"url":"components/UpdateUserHaikuComponent.html","title":"component - UpdateUserHaikuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateUserHaikuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/user-haikus/update-user-haiku/update-user-haiku.component.ts\n\n\n\n    \n        Description\n    \n    \n        A component for updating a user haiku for a user.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-userHaiku\n            \n\n\n\n            \n                styleUrls\n                ./update-user-haiku.component.css\n            \n\n\n\n            \n                templateUrl\n                ./update-user-haiku.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                loadingStates\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                            \n                                userHaikuDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearMessages\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                loadUserHaikuById\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateUserHaiku\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userHaikuService: UserHaikuService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userHaikuService\n                                                  \n                                                        \n                                                                        UserHaikuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clearMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Clears any error messages related to add loading.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any, type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Handles errors for specific types of operations (e.g., update loading) and updates loading states.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response or message.\n\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe type of operation encountering the error.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserHaikuById\n                        \n                    \n                \n            \n            \n                \nloadUserHaikuById(userHaikuId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Loads the specific user haiku by the ID and assigns it to the component's userHaikuDto.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userHaikuId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user haiku to load.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserHaiku\n                        \n                    \n                \n            \n            \n                \nupdateUserHaiku(updatedUserHaiku: UserHaikuDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Updates an existing user haiku and navigates to the user haiku view page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedUserHaiku\n                                            \n                                                            UserHaikuDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing the updated user haiku details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    update: null,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    update: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userHaikuDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserHaikuDto\n\n                    \n                \n                \n                    \n                        Default value : { id: 0, title: '', lineOne: '', lineTwo: '', lineThree: '', userId: 0 }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { Subject, takeUntil, finalize } from \"rxjs\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { UserHaikuService } from \"../../../core/services/user-haiku.service\";\nimport { UserService } from \"../../../core/services/user.service\";\nimport { UserHaikuDto } from \"../../../shared/models/userHaikuDto.model\";\n\n/**\n * A component for updating a user haiku for a user.\n*/\n@Component({\n  selector: 'app-update-userHaiku',\n  templateUrl: './update-user-haiku.component.html',\n  styleUrls: ['./update-user-haiku.component.css']\n})\nexport class UpdateUserHaikuComponent implements OnInit, OnDestroy {\n  private unsubscribe$ = new Subject();\n  userHaikuDto: UserHaikuDto = { id: 0, title: '', lineOne: '', lineTwo: '', lineThree: '', userId: 0 };\n\n  errorMessages = {\n    update: null,\n  };\n\n  loadingStates = {\n    update: false,\n  };\n\n  constructor(\n    private userHaikuService: UserHaikuService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  ngOnInit(): void {\n    this.loadingStates.update = true;\n    this.clearMessages();\n\n    const userHaikuIdToUpdate = +this.route.snapshot.paramMap.get('id')!;\n    this.loadUserHaikuById(userHaikuIdToUpdate);\n  }\n\n  /**\n   * Clears any error messages related to add loading.\n   * @returns {void} This method does not return a value.\n  */\n  private clearMessages(): void {\n    this.errorMessages = {\n      update: null,\n    };\n  }\n\n  /**\n   * Handles errors for specific types of operations (e.g., update loading) and updates loading states.\n   * \n   * @param {any} error - The error response or message.\n   * @param {'update'} type - The type of operation encountering the error.\n   * @returns {void} This method does not return a value.\n  */\n  private handleError(error: any, type: 'update'): void {\n    this.loadingStates[type] = false;\n    this.errorMessages[type] = error.message || 'An unknown error occurred, please try again later.';\n  }\n\n  /**\n   * Loads the specific user haiku by the ID and assigns it to the component's `userHaikuDto`.\n   * \n   * @param {number} userHaikuId - The ID of the user haiku to load.\n   * @returns {void} This method does not return a value.\n   * @throws Will call `handleError` with an error message on failure.\n  */\n  loadUserHaikuById(userHaikuId: number): void {\n    this.loadingStates.update = true;\n\n    this.userHaikuService.getUserHaikuById(userHaikuId).pipe(\n      takeUntil(this.unsubscribe$),\n      finalize(() => {\n        this.loadingStates.update = false;\n      })\n    ).subscribe({\n      next: userHaiku => {\n        this.userHaikuDto = userHaiku;\n      },\n      error: error => this.handleError(error, 'update')\n    });\n  }\n\n  /**\n   * Updates an existing user haiku and navigates to the user haiku view page.\n   * \n   * @param {UserHaikuDto} updatedUserHaiku - The data transfer object containing the updated user haiku details.\n   * @returns {void} This method does not return a value.\n   * @throws Will call `handleError` with an error message on failure.\n  */\n  updateUserHaiku(updatedUserHaiku: UserHaikuDto): void {\n    this.loadingStates.update = true;\n\n    this.userHaikuService.updateUserHaiku(updatedUserHaiku.id, updatedUserHaiku).pipe(\n      takeUntil(this.unsubscribe$),\n      finalize(() => {\n        this.loadingStates.update = false;\n      })\n    ).subscribe({\n      next: () => {\n        this.router.navigate(['/view-user-haiku', updatedUserHaiku.id]);\n      },\n      error: error => this.handleError(error, 'update')\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n           Update User Haiku\n        \n        \n          {{ errorMessages.update }}\n        \n        \n          \n            \n              \n                 Title\n              : Minimum length of 2 characters, maximum of 50 characters. If left empty, it defaults to \"Untitled\".\n            \n            \n              \n                 Line One\n              : Total length of 5 syllables.\n            \n            \n              \n                 Line Two\n              : Total length of 7 syllables.\n            \n            \n              \n                 Line Three\n              : Total length of 5 syllables.\n            \n          \n          Fields marked with * are required.\n        \n        \n          \n            \n              Loading...\n            \n          \n        \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./update-user-haiku.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Update User Haiku                          {{ errorMessages.update }}                                                                     Title              : Minimum length of 2 characters, maximum of 50 characters. If left empty, it defaults to \"Untitled\".                                                       Line One              : Total length of 5 syllables.                                                       Line Two              : Total length of 7 syllables.                                                       Line Three              : Total length of 5 syllables.                                Fields marked with * are required.                                                    Loading...                                                                                          '\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'UpdateUserHaikuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateUserHaikuFormComponent.html":{"url":"components/UpdateUserHaikuFormComponent.html","title":"component - UpdateUserHaikuFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateUserHaikuFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        A component for updating a user haiku through a form.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-user-haiku-form\n            \n\n\n\n            \n                styleUrls\n                ./update-user-haiku-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./update-user-haiku-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                defaultTitle\n                            \n                            \n                                initialFormValues\n                            \n                            \n                                isSubmitted\n                            \n                            \n                                updateUserHaikuForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changesMade\n                            \n                            \n                                hasError\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                patchForm\n                            \n                            \n                                resetForm\n                            \n                            \n                                    Private\n                                storeInitialFormValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userHaikuDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                formSubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userHaikuDto\n                    \n                \n                \n                    \n                        Type :         UserHaikuDto\n\n                    \n                \n                \n                    \n                        Default value : { id: 0, title: '', lineOne: '', lineTwo: '', lineThree: '', userId: 0 }\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        formSubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changesMade\n                        \n                    \n                \n            \n            \n                \nchangesMade()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Checks if changes were made to the user haiku form compared to the initial values.\nThis method compares the current values of the title and lines fields\nwith the initial values stored on form initialization.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Returns true if changes were made, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasError\n                        \n                    \n                \n            \n            \n                \nhasError(controlName: string, errorType?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Checks whether a form control has a specific error or is invalid.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the form control.\n\n\n                                            \n                                        \n                                        \n                                                errorType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe specific error type to check for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the control is invalid and the error matches, or if no specific error type is provided.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Submits the form and emits the form data as an UserHaikuDto if the form is valid.\nIf the title is not provided, it defaults to 'Untitled'.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        patchForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Patches the form with the values from the UserHaikuDto object if it exists.\nThis method updates the form controls with the author's original content and stores the initial values.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Resets the form and clears the submission state.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storeInitialFormValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeInitialFormValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Stores the initial values of the user haiku update form fields.\nThis method captures the initial title and lines for comparison later.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Untitled\"\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialFormValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserHaikuForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnDestroy, OnInit, OnChanges } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { Subject, BehaviorSubject } from \"rxjs\";\nimport { UserService } from \"../../../../core/services/user.service\";\nimport { SyllableValidator } from \"../../../../core/utilities/syllable-validator\";\nimport { UserHaikuDto } from \"../../../../shared/models/userHaikuDto.model\";\n\n/**\n * A component for updating a user haiku through a form.\n*/\n@Component({\n  selector: 'app-update-user-haiku-form',\n  templateUrl: './update-user-haiku-form.component.html',\n  styleUrls: ['./update-user-haiku-form.component.css']\n})\nexport class UpdateUserHaikuFormComponent implements OnInit, OnChanges {\n  updateUserHaikuForm: FormGroup;\n  private readonly defaultTitle = \"Untitled\";\n  initialFormValues: any = {};\n\n  @Input() userHaikuDto: UserHaikuDto = { id: 0, title: '', lineOne: '', lineTwo: '', lineThree: '', userId: 0 };\n  @Output() formSubmit = new EventEmitter();\n\n  isSubmitted = false;\n\n  constructor(private fb: FormBuilder, private userService: UserService) {\n    this.updateUserHaikuForm = this.fb.group({\n      id: [null],\n      username: [''],\n      title: ['', [Validators.minLength(2), Validators.maxLength(50)]],\n      lineOne: ['', [Validators.required, SyllableValidator.syllableCountValidator(5)]],\n      lineTwo: ['', [Validators.required, SyllableValidator.syllableCountValidator(7)]],\n      lineThree: ['', [Validators.required, SyllableValidator.syllableCountValidator(5)]],\n      userId: [null, [Validators.required]]\n    });\n  }\n\n  ngOnInit(): void {\n    this.patchForm();\n  }\n\n  ngOnChanges(): void {\n    this.patchForm();\n  }\n\n  /**\n   * Stores the initial values of the user haiku update form fields.\n   * This method captures the initial title and lines for comparison later.\n   * @returns {void} This method does not return a value.\n  */\n  private storeInitialFormValues(): void {\n    this.initialFormValues = {\n      title: this.updateUserHaikuForm.get('title')?.value,\n      lineOne: this.updateUserHaikuForm.get('lineOne')?.value,\n      lineTwo: this.updateUserHaikuForm.get('lineTwo')?.value,\n      lineThree: this.updateUserHaikuForm.get('lineThree')?.value,\n    };\n  }\n\n  /**\n * Checks if changes were made to the user haiku form compared to the initial values.\n * This method compares the current values of the title and lines fields\n * with the initial values stored on form initialization.\n * @returns {boolean} Returns true if changes were made, otherwise false.\n*/\n  changesMade(): boolean {\n    const currentFormValues = {\n      title: this.updateUserHaikuForm.get('title')?.value,\n      lineOne: this.updateUserHaikuForm.get('lineOne')?.value,\n      lineTwo: this.updateUserHaikuForm.get('lineTwo')?.value,\n      lineThree: this.updateUserHaikuForm.get('lineThree')?.value,\n    };\n\n    return JSON.stringify(this.initialFormValues) !== JSON.stringify(currentFormValues);\n  }\n\n  /**\n   * Patches the form with the values from the `UserHaikuDto` object if it exists.\n   * This method updates the form controls with the author's original content and stores the initial values.\n   * @returns {void} This method does not return a value.\n  */\n  private patchForm(): void {\n    if (this.userHaikuDto) {\n      this.updateUserHaikuForm.patchValue({ ...this.userHaikuDto });\n    }\n    this.storeInitialFormValues();\n  }\n\n  /**\n   * Submits the form and emits the form data as an `UserHaikuDto` if the form is valid.\n   * If the title is not provided, it defaults to 'Untitled'.\n   * @returns {void} This method does not return a value.\n  */\n  onSubmit(): void {\n    this.isSubmitted = true;\n\n    if (this.updateUserHaikuForm.valid && this.changesMade()) {\n      const updatedUserHaikuDto: UserHaikuDto = {\n        ...this.updateUserHaikuForm.value,\n        title: this.updateUserHaikuForm.value.title || this.defaultTitle\n      };\n      this.formSubmit.emit(updatedUserHaikuDto);\n      this.resetForm();\n    }\n  }\n\n  /**\n   * Resets the form and clears the submission state.\n   * @returns {void} This method does not return a value.\n  */\n  resetForm(): void {\n    this.isSubmitted = false;\n    this.updateUserHaikuForm.reset();\n  }\n\n  /**\n   * Checks whether a form control has a specific error or is invalid.\n   * \n   * @param {string} controlName - The name of the form control.\n   * @param {string} [errorType] - The specific error type to check for.\n   * @returns {boolean} - Returns true if the control is invalid and the error matches, or if no specific error type is provided.\n  */\n  hasError(controlName: string, errorType?: string): boolean {\n    const control = this.updateUserHaikuForm.get(controlName);\n    if (!control) {\n      return false;\n    }\n    return this.isSubmitted && control.invalid && (errorType ? control.hasError(errorType) : true);\n  }\n}\n\n    \n\n    \n        \n\n  \n    Title\n    \n      \n        \n      \n      \n    \n    \n      Title length can't be less than 2, if not left empty.\n    \n    \n      Title length can't be more than 50.\n    \n  \n\n  \n    Line One*\n    \n      \n        \n      \n      \n    \n    \n      Line One is required!\n    \n    \n      Line One must have 5 syllables.\n    \n  \n\n  \n    Line Two*\n    \n      \n        \n      \n      \n    \n    \n      Line Two is required!\n    \n    \n      Line Two must have 7 syllables.\n    \n  \n\n  \n    Line Three*\n    \n      \n        \n      \n      \n    \n    \n      Line Three is required!\n    \n    \n      Line Three must have 5 syllables.\n    \n  \n\n  \n    Confirm\n  \n  Cancel\n\n\n    \n\n    \n                \n                    ./update-user-haiku-form.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Title                                            Title length can\\'t be less than 2, if not left empty.              Title length can\\'t be more than 50.            Line One*                                            Line One is required!              Line One must have 5 syllables.            Line Two*                                            Line Two is required!              Line Two must have 7 syllables.            Line Three*                                            Line Three is required!              Line Three must have 5 syllables.            Confirm    Cancel'\n    var COMPONENTS = [{'name': 'AddAuthorComponent', 'selector': 'app-add-author'},{'name': 'AddAuthorFormComponent', 'selector': 'app-add-author-form'},{'name': 'AddAuthorHaikuComponent', 'selector': 'app-add-author-haiku'},{'name': 'AddAuthorHaikuFormComponent', 'selector': 'app-add-author-haiku-form'},{'name': 'AddUserHaikuComponent', 'selector': 'app-add-user-haiku'},{'name': 'AddUserHaikuFormComponent', 'selector': 'app-add-user-haiku-form'},{'name': 'AllAuthorHaikusComponent', 'selector': 'app-all-author-haikus'},{'name': 'AllAuthorsComponent', 'selector': 'app-all-authors'},{'name': 'AllUserHaikusComponent', 'selector': 'app-all-user-haikus'},{'name': 'AllUsersComponent', 'selector': 'app-all-users'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SingleAuthorComponent', 'selector': 'app-single-author'},{'name': 'SingleAuthorHaikuComponent', 'selector': 'app-single-author-haiku'},{'name': 'SingleUserComponent', 'selector': 'app-single-user'},{'name': 'SingleUserHaikuComponent', 'selector': 'app-single-user-haiku'},{'name': 'UpdateAuthorComponent', 'selector': 'app-update-author'},{'name': 'UpdateAuthorFormComponent', 'selector': 'app-update-author-form'},{'name': 'UpdateAuthorHaikuComponent', 'selector': 'app-update-authorHaiku'},{'name': 'UpdateAuthorHaikuFormComponent', 'selector': 'app-update-author-haiku-form'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'},{'name': 'UpdateProfileFormComponent', 'selector': 'app-update-profile-form'},{'name': 'UpdateUserHaikuComponent', 'selector': 'app-update-userHaiku'},{'name': 'UpdateUserHaikuFormComponent', 'selector': 'app-update-user-haiku-form'}];\n    var DIRECTIVES = [{'name': 'IsAuthorizedDirective', 'selector': '[appIsAuthorized]'},{'name': 'IsUnAuthenticatedDirective', 'selector': '[appIsUnAuthenticated]'}];\n    var ACTUAL_COMPONENT = {'name': 'UpdateUserHaikuFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDto.html":{"url":"interfaces/UserDto.html","title":"interface - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/userDto.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            roleId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserDto {\n  id: number;\n  username: string;\n  password: string;\n  roleId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserHaikuDto.html":{"url":"interfaces/UserHaikuDto.html","title":"interface - UserHaikuDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserHaikuDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/userHaikuDto.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lineOne\n                                        \n                                \n                                \n                                        \n                                            lineThree\n                                        \n                                \n                                \n                                        \n                                            lineTwo\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lineOne\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lineOne:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lineThree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lineThree:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lineTwo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lineTwo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserHaikuDto {\n  id: number\n  title: string,\n  lineOne: string;\n  lineTwo: string;\n  lineThree: string;\n  userId:number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserHaikuService.html":{"url":"injectables/UserHaikuService.html","title":"injectable - UserHaikuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserHaikuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user-haiku.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing user haikus, providing methods to retrieve, add, update, and delete user haiku data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userUserHaikuApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addUserHaiku\n                            \n                            \n                                    Public\n                                deleteUserHaiku\n                            \n                            \n                                    Public\n                                getAllUserHaikus\n                            \n                            \n                                    Public\n                                getAllUserHaikusByUserId\n                            \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                    Public\n                                getUserHaikuById\n                            \n                            \n                                    Public\n                                updateUserHaiku\n                            \n                            \n                                    Private\n                                userHaikuUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, xmlSerializer: XmlSerializerService, errorHandler: ErrorHandlingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user-haiku.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        xmlSerializer\n                                                  \n                                                        \n                                                                        XmlSerializerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addUserHaiku\n                        \n                    \n                \n            \n            \n                \n                        \n                    addUserHaiku(newUserHaikuDto: UserHaikuDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user-haiku.service.ts:134\n                        \n                    \n\n\n            \n                \n                        Adds a new user haiku to the system.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newUserHaikuDto\n                                            \n                                                            UserHaikuDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object for the new user haiku.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable containing the added user haiku data.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteUserHaiku\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUserHaiku(userHaikuId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user-haiku.service.ts:170\n                        \n                    \n\n\n            \n                \n                        Deletes an user haiku by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userHaikuId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user haiku to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that completes when the deletion is successful.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllUserHaikus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUserHaikus(currentPage: number, pageSize: number, searchOption: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user-haiku.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Retrieves a paginated list of user haikus.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    \nThe current page number for pagination.\n\n\n                                            \n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                            \n                                                    \nThe number of user haikus to retrieve per page.\n\n\n                                            \n                                        \n                                        \n                                                searchOption\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nAn optional search term to filter user haikus.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable containing the author haikus and pagination metadata.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllUserHaikusByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUserHaikusByUserId(userId: number, currentPage: number, pageSize: number, searchOption: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user-haiku.service.ts:89\n                        \n                    \n\n\n            \n                \n                        Retrieves a paginated list of user haikus by author ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the author.\n\n\n                                            \n                                        \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    \nThe current page number for pagination.\n\n\n                                            \n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                            \n                                                    \nThe number of author haikus to retrieve per page.\n\n\n                                            \n                                        \n                                        \n                                                searchOption\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nAn optional search term to filter user haikus.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable containing the author haikus and pagination metadata.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user-haiku.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Generates HTTP headers for the requests.\n\n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                \nThe headers with content type and accept type set to XML.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUserHaikuById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserHaikuById(userHaikuId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user-haiku.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Fetches an user haiku by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userHaikuId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable containing the user haiku data.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateUserHaiku\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserHaiku(userHaikuId: number, updatedUserHaikuDto: UserHaikuDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user-haiku.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Updates an existing user haiku's information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userHaikuId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user haiku to update.\n\n\n                                            \n                                        \n                                        \n                                                updatedUserHaikuDto\n                                            \n                                                            UserHaikuDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated data transfer object for the user haiku.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that completes when the update is successful.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userHaikuUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    userHaikuUrl(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user-haiku.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Constructs the URL for user-haiku-related API endpoints.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe specific API endpoint to append to the base URL.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nThe complete URL for the author API.\n\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userUserHaikuApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'userHaiku'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user-haiku.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { UserHaikuDto } from '../../shared/models/userHaikuDto.model';\nimport { environment } from '../../../environments/environment.development';\nimport { ErrorHandlingService } from '../utilities/error-handling.service';\nimport { XmlSerializerService } from '../utilities/xml-serializer.service';\nimport { PaginationMetaDataDto } from '../../shared/models/paginationMetaDataDto.model';\n\n/**\n * Service for managing user haikus, providing methods to retrieve, add, update, and delete user haiku data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserHaikuService {\n  private userUserHaikuApi = 'userHaiku';\n\n  constructor(\n    private http: HttpClient,\n    private xmlSerializer: XmlSerializerService,\n    private errorHandler: ErrorHandlingService\n  ) { }\n\n  /**\n   * Generates HTTP headers for the requests.\n   *\n   * @private\n   * @returns {HttpHeaders} - The headers with content type and accept type set to XML.\n  */\n  private getHeaders(): HttpHeaders {\n    return new HttpHeaders({\n      'Content-Type': 'application/xml',\n      Accept: 'application/xml',\n    });\n  }\n\n  /**\n   * Constructs the URL for user-haiku-related API endpoints.\n   *\n   * @private\n   * @param {string} endpoint - The specific API endpoint to append to the base URL.\n   * @returns {string} - The complete URL for the author API.\n  */\n  private userHaikuUrl(endpoint: string): string {\n    return `${environment.apiBaseUrl}/${this.userUserHaikuApi}/${endpoint}`;\n  }\n\n  /**\n   * Retrieves a paginated list of user haikus.\n   *\n   * @param {number} [currentPage=1] - The current page number for pagination.\n   * @param {number} [pageSize=10] - The number of user haikus to retrieve per page.\n   * @param {string} [searchOption=''] - An optional search term to filter user haikus.\n   * @returns {Observable} - An observable containing the author haikus and pagination metadata.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public getAllUserHaikus(\n    currentPage: number = 1,\n    pageSize: number = 10,\n    searchOption: string = ''\n  ): Observable {\n    const url = this.userHaikuUrl(`?currentPage=${currentPage}&pageSize=${pageSize}&searchOption=${encodeURIComponent(searchOption)}`);\n\n    return this.http.get(url, { headers: this.getHeaders(), responseType: 'text' as 'json', observe: 'response' })\n      .pipe(\n        map(response => {\n          const userHaikus = this.xmlSerializer.deserializeArray(response.body || '', 'UserHaikuDto') || [];\n          const paginationData = response.headers.get('x-pagination') ? this.xmlSerializer.deserializePaginationMetaData(response.headers.get('x-pagination')!) : { totalCount: 0, totalPages: 1 };\n          return { userHaikus, paginationMetadata: { ...paginationData, pageSize, currentPage } };\n        }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'fetching UserHaikus'))\n      );\n  }\n\n  /**\n   * Retrieves a paginated list of user haikus by author ID.\n   *\n   * @param {number} [userId] - The ID of the author.\n   * @param {number} [currentPage=1] - The current page number for pagination.\n   * @param {number} [pageSize=10] - The number of author haikus to retrieve per page.\n   * @param {string} [searchOption=''] - An optional search term to filter user haikus.\n   * @returns {Observable} - An observable containing the author haikus and pagination metadata.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public getAllUserHaikusByUserId(\n    userId: number,\n    currentPage: number = 1,\n    pageSize: number = 10,\n    searchOption: string = ''\n  ): Observable {\n    const url = this.userHaikuUrl(`user/${userId}?currentPage=${currentPage}&pageSize=${pageSize}&searchOption=${encodeURIComponent(searchOption)}`);\n\n    return this.http.get(url, { headers: this.getHeaders(), responseType: 'text' as 'json', observe: 'response' })\n      .pipe(\n        map(response => {\n          const userHaikus = this.xmlSerializer.deserializeArray(response.body || '', 'UserHaikuDto') || [];\n          const paginationData = response.headers.get('x-pagination') ? this.xmlSerializer.deserializePaginationMetaData(response.headers.get('x-pagination')!) : { totalCount: 0, totalPages: 1 };\n          return { userHaikus, paginationMetadata: { ...paginationData, pageSize, currentPage } };\n        }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'fetching UserHaikus by User'))\n      );\n  }\n\n  /**\n   * Fetches an user haiku by their ID.\n   *\n   * @param {number} authoruserHaikuIdHaikuId - The ID of the user haiku to retrieve.\n   * @returns {Observable} - An observable containing the user haiku data.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public getUserHaikuById(userHaikuId: number): Observable {\n    const url = this.userHaikuUrl(`${userHaikuId}`);\n\n    return this.http.get(url, { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        map(responseXml => { return this.xmlSerializer.deserialize(responseXml) }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'fetching UserHaiku'))\n      );\n  }\n\n  /**\n   * Adds a new user haiku to the system.\n   *\n   * @param {UserHaikuDto} newUserHaikuDto - The data transfer object for the new user haiku.\n   * @returns {Observable} - An observable containing the added user haiku data.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public addUserHaiku(newUserHaikuDto: UserHaikuDto): Observable {\n    const url = this.userHaikuUrl(``);\n\n    return this.http.post(url, this.xmlSerializer.serialize(newUserHaikuDto, 'UserHaikuDto'), { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        map(responseXml => { return this.xmlSerializer.deserialize(responseXml) }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'adding UserHaiku'))\n      );\n  }\n\n  /**\n   * Updates an existing user haiku's information.\n   *\n   * @param {number} userHaikuId - The ID of the user haiku to update.\n   * @param {UserHaikuDto} updatedUserHaikuDto - The updated data transfer object for the user haiku.\n   * @returns {Observable} - An observable that completes when the update is successful.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public updateUserHaiku(userHaikuId: number, updatedUserHaikuDto: UserHaikuDto): Observable {\n    const url = this.userHaikuUrl(`${userHaikuId}`);\n\n    return this.http.put(url, this.xmlSerializer.serialize(updatedUserHaikuDto, 'UserHaikuDto'), { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'updating UserHaiku'))\n      );\n  }\n\n  /**\n   * Deletes an user haiku by their ID.\n   *\n   * @param {number} userHaikuId - The ID of the user haiku to delete.\n   * @returns {Observable} - An observable that completes when the deletion is successful.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public deleteUserHaiku(userHaikuId: number): Observable {\n    const url = this.userHaikuUrl(`${userHaikuId}`);\n\n    return this.http.delete(url, { headers: this.getHeaders() })\n      .pipe(\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'deleting UserHaiku'))\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing users, providing methods to retrieve, add, update, and delete user data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addUser\n                            \n                            \n                                    Public\n                                deleteUser\n                            \n                            \n                                    Public\n                                getAllUsers\n                            \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                    Public\n                                getUserById\n                            \n                            \n                                    Public\n                                updateUser\n                            \n                            \n                                    Private\n                                userUrl\n                            \n                            \n                                    Public\n                                verifyUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, xmlSerializer: XmlSerializerService, errorHandler: ErrorHandlingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        xmlSerializer\n                                                  \n                                                        \n                                                                        XmlSerializerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    addUser(newUserDto: UserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:104\n                        \n                    \n\n\n            \n                \n                        Adds a new user to the system.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newUserDto\n                                            \n                                                            UserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object for the new user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable containing the added user data.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:140\n                        \n                    \n\n\n            \n                \n                        Deletes an user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that completes when the deletion is successful.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUsers(currentPage: number, pageSize: number, searchOption: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Retrieves a paginated list of users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    \nThe current page number for pagination.\n\n\n                                            \n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                            \n                                                    \nThe number of users to retrieve per page.\n\n\n                                            \n                                        \n                                        \n                                                searchOption\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nAn optional search term to filter users.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable containing the users and pagination metadata.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Generates HTTP headers for the requests.\n\n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                \nThe headers with content type and accept type set to XML.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:86\n                        \n                    \n\n\n            \n                \n                        Fetches an user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable containing the user data.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(userId: number, updatedUserDto: UserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Updates an existing user's information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user to update.\n\n\n                                            \n                                        \n                                        \n                                                updatedUserDto\n                                            \n                                                            UserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated data transfer object for the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that completes when the update is successful.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    userUrl(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Constructs the URL for user-related API endpoints.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe specific API endpoint to append to the base URL.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \nThe complete URL for the user API.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        verifyUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:157\n                        \n                    \n\n\n            \n                \n                        Verifies if a username is available for registration or updating.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe username to be verified.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable that emits true if the username is available, or false otherwise.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userApi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment.development';\nimport { ErrorHandlingService } from '../utilities/error-handling.service';\nimport { XmlSerializerService } from '../utilities/xml-serializer.service';\nimport { UserDto } from '../../shared/models/userDto.model';\nimport { PaginationMetaDataDto } from '../../shared/models/paginationMetaDataDto.model';\n\n/**\n * Service for managing users, providing methods to retrieve, add, update, and delete user data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private userApi = 'user';\n\n  constructor(\n    private http: HttpClient,\n    private xmlSerializer: XmlSerializerService,\n    private errorHandler: ErrorHandlingService\n  ) { }\n\n  /**\n   * Generates HTTP headers for the requests.\n   *\n   * @private\n   * @returns {HttpHeaders} - The headers with content type and accept type set to XML.\n  */\n  private getHeaders(): HttpHeaders {\n    return new HttpHeaders({\n      'Content-Type': 'application/xml',\n      Accept: 'application/xml',\n    });\n  }\n\n  /**\n   * Constructs the URL for user-related API endpoints.\n   *\n   * @private\n   * @param {string} endpoint - The specific API endpoint to append to the base URL.\n   * @returns {string} - The complete URL for the user API.\n  */\n  private userUrl(endpoint: string): string {\n    return `${environment.apiBaseUrl}/${this.userApi}/${endpoint}`;\n  }\n\n  /**\n   * Retrieves a paginated list of users.\n   *\n   * @param {number} [currentPage=1] - The current page number for pagination.\n   * @param {number} [pageSize=10] - The number of users to retrieve per page.\n   * @param {string} [searchOption=''] - An optional search term to filter users.\n   * @returns {Observable} - An observable containing the users and pagination metadata.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public getAllUsers(\n    currentPage: number = 1,\n    pageSize: number = 10,\n    searchOption: string = ''\n  ): Observable {\n    const url = this.userUrl(`?currentPage=${currentPage}&pageSize=${pageSize}&searchOption=${encodeURIComponent(searchOption)}`);\n\n    return this.http.get(url, { headers: this.getHeaders(), responseType: 'text' as 'json', observe: 'response' })\n      .pipe(\n        map(response => {\n          const users = this.xmlSerializer.deserializeArray(response.body || '', 'UserDto') || [];\n          const paginationData = response.headers.get('x-pagination') ? this.xmlSerializer.deserializePaginationMetaData(response.headers.get('x-pagination')!) : { totalCount: 0, totalPages: 1 };\n          return { users, paginationMetadata: { ...paginationData, pageSize, currentPage } };\n        }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'fetching Users'))\n      );\n  }\n\n  /**\n   * Fetches an user by their ID.\n   *\n   * @param {number} userId - The ID of the user to retrieve.\n   * @returns {Observable} - An observable containing the user data.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public getUserById(userId: number): Observable {\n    const url = this.userUrl(`${userId}`);\n\n    return this.http.get(url, { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        map(responseXml => { return this.xmlSerializer.deserialize(responseXml) }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'fetching User'))\n      );\n  }\n\n  /**\n   * Adds a new user to the system.\n   *\n   * @param {UserDto} newUserDto - The data transfer object for the new user.\n   * @returns {Observable} - An observable containing the added user data.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public addUser(newUserDto: UserDto): Observable {\n    const url = this.userUrl(``);\n\n    return this.http.post(url, this.xmlSerializer.serialize(newUserDto, 'UserDto'), { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        map(responseXml => { return this.xmlSerializer.deserialize(responseXml) }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'adding User'))\n      );\n  }\n\n  /**\n   * Updates an existing user's information.\n   *\n   * @param {number} userId - The ID of the user to update.\n   * @param {UserDto} updatedUserDto - The updated data transfer object for the user.\n   * @returns {Observable} - An observable that completes when the update is successful.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public updateUser(userId: number, updatedUserDto: UserDto): Observable {\n    const url = this.userUrl(`${userId}`);\n\n    return this.http.put(url, this.xmlSerializer.serialize(updatedUserDto, 'UserDto'), { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'updating User'))\n      );\n  }\n\n  /**\n   * Deletes an user by their ID.\n   *\n   * @param {number} userId - The ID of the user to delete.\n   * @returns {Observable} - An observable that completes when the deletion is successful.\n   *\n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public deleteUser(userId: number): Observable {\n    const url = this.userUrl(`${userId}`);\n\n    return this.http.delete(url, { headers: this.getHeaders() })\n      .pipe(\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'deleting User'))\n      );\n  }\n\n  /**\n   * Verifies if a username is available for registration or updating.\n   *\n   * @param {string} username - The username to be verified.\n   * @returns {Observable} An observable that emits `true` if the username is available, or `false` otherwise.\n   * \n   * @throws {HttpErrorResponse} - Throws an error if the request fails.\n  */\n  public verifyUsername(username: string): Observable {\n    const url = this.userUrl(`verify-username/${username}`);\n\n    return this.http.get(url, { headers: this.getHeaders(), responseType: 'text' as 'json' })\n      .pipe(\n        map(responseXml => { return this.xmlSerializer.deserializeBoolean(responseXml) }),\n        catchError((error: HttpErrorResponse) => this.errorHandler.handleError(error, 'verifying Username'))\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserUpdateDto.html":{"url":"interfaces/UserUpdateDto.html","title":"interface - UserUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/userUpdateDto.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            confirmPassword\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserUpdateDto {\n  id: number;\n  username: string;\n  password: string;\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsernameValidator.html":{"url":"injectables/UsernameValidator.html","title":"injectable - UsernameValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsernameValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/utilities/username-validator.ts\n        \n\n\n            \n                Description\n            \n            \n                A validator service for checking the existence of usernames.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                usernameTaken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/utilities/username-validator.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        usernameTaken\n                        \n                    \n                \n            \n            \n                \nusernameTaken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/utilities/username-validator.ts:19\n                        \n                    \n\n\n            \n                \n                        Creates an asynchronous validator function that checks if a username exists.\n\n\n                        \n                            Returns :     AsyncValidatorFn\n\n                        \n                            \n                                An asynchronous validator function that checks the username's existence.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractControl, ValidationErrors, AsyncValidatorFn } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { UserService } from '../services/user.service';\n\n/**\n * A validator service for checking the existence of usernames.\n*/\n@Injectable({ providedIn: 'root' })\nexport class UsernameValidator {\n  constructor(private userService: UserService) { }\n\n  /**\n   * Creates an asynchronous validator function that checks if a username exists.\n   * \n   * @returns {AsyncValidatorFn} An asynchronous validator function that checks the username's existence.\n   */\n  usernameTaken(): AsyncValidatorFn {\n    return (control: AbstractControl): Observable => {\n\n      return this.userService.verifyUsername(control.value).pipe(\n        map(exists => (exists ? { usernameExists: true } : null)),\n        catchError(() => of(null))\n      );\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/XmlSerializerService.html":{"url":"injectables/XmlSerializerService.html","title":"injectable - XmlSerializerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  XmlSerializerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/utilities/xml-serializer.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service for serializing and deserializing XML data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                            \n                                deserializeArray\n                            \n                            \n                                deserializeBoolean\n                            \n                            \n                                deserializePaginationMetaData\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorHandlingService: ErrorHandlingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/utilities/xml-serializer.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorHandlingService\n                                                  \n                                                        \n                                                                        ErrorHandlingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deserialize\n                        \n                    \n                \n            \n            \n                \ndeserialize(xml: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/utilities/xml-serializer.service.ts:38\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Deserializes an XML string into a JavaScript object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                xml\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe XML string to deserialize.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                The deserialized JavaScript object of type T.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deserializeArray\n                        \n                    \n                \n            \n            \n                \ndeserializeArray(xml: string, itemType: \"AuthorDto\" | \"AuthorHaikuDto\" | \"UserDto\" | \"UserHaikuDto\" | \"ProfileDto\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/utilities/xml-serializer.service.ts:112\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Deserializes an XML string into an array of objects of a specified type.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                xml\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe XML string to deserialize.\n\n\n                                            \n                                        \n                                        \n                                                itemType\n                                            \n                                                        \"AuthorDto\" | \"AuthorHaikuDto\" | \"UserDto\" | \"UserHaikuDto\" | \"ProfileDto\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe type of items in the array.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                The deserialized array of objects of type T.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deserializeBoolean\n                        \n                    \n                \n            \n            \n                \ndeserializeBoolean(xml: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/utilities/xml-serializer.service.ts:64\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    Boolean\n                            \n                        \n                    \n\n            \n                \n                        Deserializes an XML string into a boolean value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                xml\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe XML string to deserialize.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The deserialized boolean value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deserializePaginationMetaData\n                        \n                    \n                \n            \n            \n                \ndeserializePaginationMetaData(xml: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/utilities/xml-serializer.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Deserializes an XML string containing pagination metadata into a PaginationMetaDataDto object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                xml\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe XML string containing pagination metadata.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PaginationMetaDataDto\n\n                        \n                            \n                                The deserialized pagination metadata.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(obj: any, rootElement: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/utilities/xml-serializer.service.ts:22\n                        \n                    \n\n\n            \n                \n                        Serializes a JavaScript object into an XML string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe object to serialize.\n\n\n                                            \n                                        \n                                        \n                                                rootElement\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe root element of the XML structure.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The serialized XML string.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ErrorHandlingService } from './error-handling.service';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { PaginationMetaDataDto } from '../../shared/models/paginationMetaDataDto.model';\n\n/**\n * A service for serializing and deserializing XML data.\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class XmlSerializerService {\n  constructor(private errorHandlingService: ErrorHandlingService) { }\n\n  /**\n   * Serializes a JavaScript object into an XML string.\n   * \n   * @param {any} obj - The object to serialize.\n   * @param {string} rootElement - The root element of the XML structure.\n   * @returns {string} The serialized XML string.\n  */\n  serialize(obj: any, rootElement: string): string {\n    let xml = ``;\n    for (const prop in obj) {\n      xml += `${obj[prop]}`;\n    }\n    xml += ``;\n    return xml;\n  }\n\n  /**\n   * Deserializes an XML string into a JavaScript object.\n   * \n   * @param {string} xml - The XML string to deserialize.\n   * @returns {T} The deserialized JavaScript object of type T.\n   * @template T - The type of the resulting object.\n  */\n  deserialize(xml: string): T {\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xml, 'text/xml');\n    const obj: any = {};\n\n    const errorNode = xmlDoc.getElementsByTagName('parsererror');\n    if (errorNode.length) {\n      this.errorHandlingService.handleSerializationError(new Error('Error parsing XML: ' + errorNode[0].textContent));\n      return {} as T;\n    }\n\n    xmlDoc.documentElement.childNodes.forEach((node: Node) => {\n      if (node.nodeType === 1) {\n        obj[node.nodeName] = node.textContent;\n      }\n    });\n\n    return obj as T;\n  }\n\n  /**\n   * Deserializes an XML string into a boolean value.\n   * \n   * @param {string} xml - The XML string to deserialize.\n   * @returns {boolean} The deserialized boolean value.\n  */\n  deserializeBoolean(xml: string) {\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xml, \"text/xml\");\n    const booleanElement = xmlDoc.getElementsByTagName(\"boolean\")[0];\n\n    if (booleanElement) {\n      return booleanElement.textContent === \"true\";\n    }\n    return false;\n  }\n\n  /**\n   * Deserializes an XML string containing pagination metadata into a PaginationMetaDataDto object.\n   * \n   * @param {string} xml - The XML string containing pagination metadata.\n   * @returns {PaginationMetaDataDto} The deserialized pagination metadata.\n  */\n  deserializePaginationMetaData(xml: string): PaginationMetaDataDto {\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xml, 'text/xml');\n    const obj: PaginationMetaDataDto = { totalCount: 0, pageSize: 0, currentPage: 0, totalPages: 0 };\n\n    const errorNode = xmlDoc.getElementsByTagName('parsererror');\n    if (errorNode.length) {\n      this.errorHandlingService.handleSerializationError(new Error('Error parsing XML: ' + errorNode[0].textContent));\n      return obj;\n    }\n\n    xmlDoc.documentElement.childNodes.forEach((node: Node) => {\n      if (node.nodeType === Node.ELEMENT_NODE) {\n        const propName = node.nodeName as keyof PaginationMetaDataDto;\n        if (propName in obj) {\n          obj[propName] = Number(node.textContent) || 0;\n        }\n      }\n    });\n\n    return obj;\n  }\n\n  /**\n   * Deserializes an XML string into an array of objects of a specified type.\n   * \n   * @param {string} xml - The XML string to deserialize.\n   * @param {'AuthorDto' | 'AuthorHaikuDto' | 'UserDto' | 'UserHaikuDto' | 'ProfileDto'} itemType - The type of items in the array.\n   * @returns {T[]} The deserialized array of objects of type T.\n   * @template T - The type of the items in the array.\n  */\n  deserializeArray(xml: string, itemType: 'AuthorDto' | 'AuthorHaikuDto' | 'UserDto' | 'UserHaikuDto' | 'ProfileDto'): T[] {\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xml, 'text/xml');\n\n    const errorNode = xmlDoc.getElementsByTagName('parsererror');\n    if (errorNode.length) {\n      this.errorHandlingService.handleSerializationError(new Error('Error parsing XML: ' + errorNode[0].textContent));\n      return [];\n    }\n\n    const objArray: T[] = [];\n    const items = xmlDoc.getElementsByTagName(itemType);\n\n    for (let i = 0; i  {\n        if (childNode.nodeType === 1) {\n          const propName = childNode.nodeName;\n          item[propName] = childNode.textContent;\n        }\n      });\n      objArray.push(item);\n    }\n\n    return objArray;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nThis file explains how Visual Studio created the project.\nThe following tools were used to generate this project:\n\nAngular CLI (ng)\n\nThe following steps were used to generate this project:\n\nCreate Angular project with ng: ng new MyHaikus --defaults --skip-install --skip-git --no-standalone .\nCreate project file (MyHaikus.esproj).\nCreate launch.json to enable debugging.\nCreate nuget.config to specify location of the JavaScript Project System SDK (which is used in the first line in MyHaikus.esproj).\nUpdate package.json to add jest-editor-support.\nUpdate start script in package.json to specify host.\nAdd karma.conf.js for unit tests.\nUpdate angular.json to point to karma.conf.js.\nAdd project to solution.\nWrite this file.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/core/guards/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/authorization.guard.ts\n            \n            guard\n            AuthorizationGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/un-authenticated.guard.ts\n            \n            guard\n            UnAuthenticatedGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/core/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/core/services/author-haiku.service.ts\n            \n            injectable\n            AuthorHaikuService\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/core/services/author.service.ts\n            \n            injectable\n            AuthorService\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/core/services/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/core/services/image.service.ts\n            \n            injectable\n            ImageService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/core/services/login.service.ts\n            \n            injectable\n            LoginService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/core/services/logout.service.ts\n            \n            injectable\n            LogoutService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/services/navigation.service.ts\n            \n            injectable\n            NavigationService\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/core/services/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/core/services/register.service.ts\n            \n            injectable\n            RegisterService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/core/services/user-haiku.service.ts\n            \n            injectable\n            UserHaikuService\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/core/utilities/authorizationInterceptor.ts\n            \n            interceptor\n            AuthorizationInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/utilities/error-handling.service.ts\n            \n            injectable\n            ErrorHandlingService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/utilities/matching-validator.ts\n            \n            class\n            MatchingValidator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/utilities/syllable-validator.ts\n            \n            class\n            SyllableValidator\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/utilities/username-validator.ts\n            \n            injectable\n            UsernameValidator\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/utilities/xml-serializer.service.ts\n            \n            injectable\n            XmlSerializerService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/features/author-haikus/add-author-haiku/add-author-haiku-form/add-author-haiku-form.component.ts\n            \n            component\n            AddAuthorHaikuFormComponent\n            \n                31 %\n                (9/29)\n            \n        \n        \n            \n                \n                src/app/features/author-haikus/add-author-haiku/add-author-haiku.component.ts\n            \n            component\n            AddAuthorHaikuComponent\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/features/author-haikus/all-author-haikus/all-author-haikus.component.ts\n            \n            component\n            AllAuthorHaikusComponent\n            \n                37 %\n                (11/29)\n            \n        \n        \n            \n                \n                src/app/features/author-haikus/single-author-haiku/single-author-haiku.component.ts\n            \n            component\n            SingleAuthorHaikuComponent\n            \n                48 %\n                (13/27)\n            \n        \n        \n            \n                \n                src/app/features/author-haikus/update-author-haiku/update-author-haiku-form/update-author-haiku-form.component.ts\n            \n            component\n            UpdateAuthorHaikuFormComponent\n            \n                35 %\n                (13/37)\n            \n        \n        \n            \n                \n                src/app/features/author-haikus/update-author-haiku/update-author-haiku.component.ts\n            \n            component\n            UpdateAuthorHaikuComponent\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/features/authors/add-author/add-author-form/add-author-form.component.ts\n            \n            component\n            AddAuthorFormComponent\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/features/authors/add-author/add-author.component.ts\n            \n            component\n            AddAuthorComponent\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/features/authors/all-authors/all-authors.component.ts\n            \n            component\n            AllAuthorsComponent\n            \n                41 %\n                (13/31)\n            \n        \n        \n            \n                \n                src/app/features/authors/single-author/single-author.component.ts\n            \n            component\n            SingleAuthorComponent\n            \n                47 %\n                (18/38)\n            \n        \n        \n            \n                \n                src/app/features/authors/update-author/update-author-form/update-author-form.component.ts\n            \n            component\n            UpdateAuthorFormComponent\n            \n                43 %\n                (7/16)\n            \n        \n        \n            \n                \n                src/app/features/authors/update-author/update-author.component.ts\n            \n            component\n            UpdateAuthorComponent\n            \n                40 %\n                (6/15)\n            \n        \n        \n            \n                \n                src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/features/login/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/features/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/features/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/features/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                46 %\n                (19/41)\n            \n        \n        \n            \n                \n                src/app/features/profile/update-profile/update-profile-form/update-profile-form.component.ts\n            \n            component\n            UpdateProfileFormComponent\n            \n                48 %\n                (14/29)\n            \n        \n        \n            \n                \n                src/app/features/profile/update-profile/update-profile.component.ts\n            \n            component\n            UpdateProfileComponent\n            \n                45 %\n                (10/22)\n            \n        \n        \n            \n                \n                src/app/features/register/register-form/register-form.component.ts\n            \n            component\n            RegisterFormComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/features/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/features/user-haikus/add-user-haiku/add-user-haiku-form/add-user-haiku-form.component.ts\n            \n            component\n            AddUserHaikuFormComponent\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/features/user-haikus/add-user-haiku/add-user-haiku.component.ts\n            \n            component\n            AddUserHaikuComponent\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/features/user-haikus/all-user-haikus/all-user-haikus.component.ts\n            \n            component\n            AllUserHaikusComponent\n            \n                41 %\n                (14/34)\n            \n        \n        \n            \n                \n                src/app/features/user-haikus/single-user-haiku/single-user-haiku.component.ts\n            \n            component\n            SingleUserHaikuComponent\n            \n                50 %\n                (15/30)\n            \n        \n        \n            \n                \n                src/app/features/user-haikus/update-user-haiku/update-user-haiku-form/update-user-haiku-form.component.ts\n            \n            component\n            UpdateUserHaikuFormComponent\n            \n                43 %\n                (7/16)\n            \n        \n        \n            \n                \n                src/app/features/user-haikus/update-user-haiku/update-user-haiku.component.ts\n            \n            component\n            UpdateUserHaikuComponent\n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/app/features/users/all-users/all-users.component.ts\n            \n            component\n            AllUsersComponent\n            \n                38 %\n                (12/31)\n            \n        \n        \n            \n                \n                src/app/features/users/single-user/single-user.component.ts\n            \n            component\n            SingleUserComponent\n            \n                43 %\n                (18/41)\n            \n        \n        \n            \n                \n                src/app/shared/directives/is-authorized.directive.ts\n            \n            directive\n            IsAuthorizedDirective\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/shared/directives/is-unauthenticated.directive.ts\n            \n            directive\n            IsUnAuthenticatedDirective\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/shared/models/accountDto.model.ts\n            \n            interface\n            AccountDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/authorDto.model.ts\n            \n            interface\n            AuthorDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/models/authorHaikuDto.model.ts\n            \n            interface\n            AuthorHaikuDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/imageDto.ts\n            \n            interface\n            ImageDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/jwtokenDto.model.ts\n            \n            interface\n            JWTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/loginDto.model.ts\n            \n            interface\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/paginationMetaDataDto.model.ts\n            \n            interface\n            PaginationMetaDataDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/profileDto.model.ts\n            \n            interface\n            ProfileDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/registerDto.model.ts\n            \n            interface\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/models/userDto.model.ts\n            \n            interface\n            UserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/userHaikuDto.model.ts\n            \n            interface\n            UserHaikuDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/userUpdateDto.model.ts\n            \n            interface\n            UserUpdateDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/material : ^18.2.8\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @ng-select/ng-select : ^13.9.0\n        \n            bootstrap : ^5.3.3\n        \n            jest-editor-support : *\n        \n            jwt-decode : ^3.1.2\n        \n            ngx-cookie-service : ^18.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMyHaikus\nThis project was generated with Angular CLI version 18.2.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddAuthorComponent\n\nAddAuthorComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddAuthorComponent->AppModule\n\n\n\n\n\nAddAuthorFormComponent\n\nAddAuthorFormComponent\n\nAppModule -->\n\nAddAuthorFormComponent->AppModule\n\n\n\n\n\nAddAuthorHaikuComponent\n\nAddAuthorHaikuComponent\n\nAppModule -->\n\nAddAuthorHaikuComponent->AppModule\n\n\n\n\n\nAddAuthorHaikuFormComponent\n\nAddAuthorHaikuFormComponent\n\nAppModule -->\n\nAddAuthorHaikuFormComponent->AppModule\n\n\n\n\n\nAddUserHaikuComponent\n\nAddUserHaikuComponent\n\nAppModule -->\n\nAddUserHaikuComponent->AppModule\n\n\n\n\n\nAddUserHaikuFormComponent\n\nAddUserHaikuFormComponent\n\nAppModule -->\n\nAddUserHaikuFormComponent->AppModule\n\n\n\n\n\nAllAuthorHaikusComponent\n\nAllAuthorHaikusComponent\n\nAppModule -->\n\nAllAuthorHaikusComponent->AppModule\n\n\n\n\n\nAllAuthorsComponent\n\nAllAuthorsComponent\n\nAppModule -->\n\nAllAuthorsComponent->AppModule\n\n\n\n\n\nAllUserHaikusComponent\n\nAllUserHaikusComponent\n\nAppModule -->\n\nAllUserHaikusComponent->AppModule\n\n\n\n\n\nAllUsersComponent\n\nAllUsersComponent\n\nAppModule -->\n\nAllUsersComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nIsAuthorizedDirective\n\nIsAuthorizedDirective\n\nAppModule -->\n\nIsAuthorizedDirective->AppModule\n\n\n\n\n\nIsUnAuthenticatedDirective\n\nIsUnAuthenticatedDirective\n\nAppModule -->\n\nIsUnAuthenticatedDirective->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAppModule -->\n\nLoginFormComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nAppModule -->\n\nRegisterFormComponent->AppModule\n\n\n\n\n\nSingleAuthorComponent\n\nSingleAuthorComponent\n\nAppModule -->\n\nSingleAuthorComponent->AppModule\n\n\n\n\n\nSingleAuthorHaikuComponent\n\nSingleAuthorHaikuComponent\n\nAppModule -->\n\nSingleAuthorHaikuComponent->AppModule\n\n\n\n\n\nSingleUserComponent\n\nSingleUserComponent\n\nAppModule -->\n\nSingleUserComponent->AppModule\n\n\n\n\n\nSingleUserHaikuComponent\n\nSingleUserHaikuComponent\n\nAppModule -->\n\nSingleUserHaikuComponent->AppModule\n\n\n\n\n\nUpdateAuthorComponent\n\nUpdateAuthorComponent\n\nAppModule -->\n\nUpdateAuthorComponent->AppModule\n\n\n\n\n\nUpdateAuthorFormComponent\n\nUpdateAuthorFormComponent\n\nAppModule -->\n\nUpdateAuthorFormComponent->AppModule\n\n\n\n\n\nUpdateAuthorHaikuComponent\n\nUpdateAuthorHaikuComponent\n\nAppModule -->\n\nUpdateAuthorHaikuComponent->AppModule\n\n\n\n\n\nUpdateAuthorHaikuFormComponent\n\nUpdateAuthorHaikuFormComponent\n\nAppModule -->\n\nUpdateAuthorHaikuFormComponent->AppModule\n\n\n\n\n\nUpdateProfileComponent\n\nUpdateProfileComponent\n\nAppModule -->\n\nUpdateProfileComponent->AppModule\n\n\n\n\n\nUpdateProfileFormComponent\n\nUpdateProfileFormComponent\n\nAppModule -->\n\nUpdateProfileFormComponent->AppModule\n\n\n\n\n\nUpdateUserHaikuComponent\n\nUpdateUserHaikuComponent\n\nAppModule -->\n\nUpdateUserHaikuComponent->AppModule\n\n\n\n\n\nUpdateUserHaikuFormComponent\n\nUpdateUserHaikuFormComponent\n\nAppModule -->\n\nUpdateUserHaikuFormComponent->AppModule\n\n\n\n\n\nIsAuthorizedDirective \n\nIsAuthorizedDirective \n\nIsAuthorizedDirective  -->\n\nAppModule->IsAuthorizedDirective \n\n\n\n\n\nIsUnAuthenticatedDirective \n\nIsUnAuthenticatedDirective \n\nIsUnAuthenticatedDirective  -->\n\nAppModule->IsUnAuthenticatedDirective \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthorizationInterceptor\n\nAuthorizationInterceptor\n\nAppModule -->\n\nAuthorizationInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    32 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiBaseUrl: 'http://localhost:5104/api'\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiBaseUrl: 'http://localhost:5104/api'\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
